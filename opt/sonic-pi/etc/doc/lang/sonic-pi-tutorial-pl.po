# This file is distributed under the same license as the Sonic Pi package.
# Do not edit this file, use Weblate instead.
# Read TRANSLATION.md for more information.
msgid ""
msgstr ""
"Project-Id-Version: Sonic Pi\n"
"PO-Revision-Date: 2016-10-11 01:27+0000\n"
"Last-Translator: Łukasz Siwiński <lsiwinski@gmail.com>\n"
"Language-Team: Polish <https://hosted.weblate.org/projects/sonic-"
"pi/tutorial/pl/>\n"
"Language: pl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 "
"|| n%100>=20) ? 1 : 2;\n"
"X-Generator: Weblate 2.9-dev\n"

#: 01-Welcome-to-Sonic-Pi.md:1
msgid "1 Welcome to Sonic Pi"
msgstr "1 Witaj w Sonic Pi"

#: 01-Welcome-to-Sonic-Pi.md:3
msgid "Welcome friend :-)"
msgstr "Witaj, Kolego :-)"

#: 01-Welcome-to-Sonic-Pi.md:5
msgid ""
"Welcome to Sonic Pi. Hopefully you're as excited to get started making crazy s"
"ounds as I am to show you. It's going to be a really *fun* ride where you'll l"
"earn all about music, synthesis, programming, composition, performance and mor"
"e."
msgstr ""
"Witaj w Sonic Pi. Mam nadzieję, że jesteś podekscytowany tym, że za chwilę zac"
"zniesz tworzyć zwariowane dźwięki tak samo, jak ja jestem podekscytowany tym, "
"że mogę Ci to pokazać. To będzie naprawdę *świetna* zabawa, podczas której nau"
"czysz się wszystkiego o muzyce, syntezie, programowaniu, kompozycji, interpret"
"acji oraz wielu innych rzeczach."

#: 01-Welcome-to-Sonic-Pi.md:10
msgid ""
"But wait, how rude of me! Let me introduce myself - I'm [Sam Aaron](http://twi"
"tter.com/samaaron) - the chap that created Sonic Pi. You can find me at [@sama"
"aron](http://twitter.com/samaaron) on Twitter and I'd be more than happy to sa"
"y hello to you. You might also be interested in finding out more about my [Liv"
"e Coding Performances](http://facebook.com/livecodersamaaron) where I code wit"
"h Sonic Pi live in front of audiences."
msgstr ""
"Ale zaraz zaraz, gdzie moje maniery! Pozwól, że się przedstawię - jestem [Sam "
"Aaron](http://twitter.com/samaaron) - facet, który stworzył Sonic Pi. Możesz z"
"naleźć mnie na Twitterze pod nikiem [@samaaron](http://twitter.com/samaaron) i"
" będzie mi bardzo miło, jeśli będę mógł powiedzieć Ci cześć. Być może zaintere"
"suje Cię również moja strona [Live Coding Performances](http://facebook.com/li"
"vecodersamaaron), gdzie koduję przed publicznością na żywo, używając Sonic Pi."

#: 01-Welcome-to-Sonic-Pi.md:18
msgid ""
"If you have any thoughts, or ideas for improving Sonic Pi - please pass them o"
"n - feedback is so helpful. You never know, your idea might be the next big fe"
"ature!"
msgstr ""
"Jeśli masz jakiekolwiek spostrzeżenia lub pomysły, jak można ulepszyć Sonic Pi"
" - będę wdzięczny za ich przekazanie - każda informacja zwrotna jest bardzo ce"
"nna. Nigdy nie wiadomo, być może twój pomysł stanie się kolejną niesamowitą fu"
"nkcją, która wzbogaci Sonic Pi!"

#: 01-Welcome-to-Sonic-Pi.md:22
msgid ""
"This tutorial is divided up into sections grouped by category. Whilst I've wri"
"tten it to have an easy learning progression from start to finish, feel very f"
"ree just to dip in and out of sections as you see fit. If you feel that there'"
"s something missing, do let me know and I'll consider it for a future version."
msgstr ""
"Samouczek został podzielony na sekcje, które są pogrupowane według kategorii. "
"Pomimo że napisałem go w taki sposób, aby umożliwiał łatwą naukę od początku d"
"o końca, to nic nie szkodzi na przeszkodzie, abyś po prostu zaczął czytać dowo"
"lną z sekcji - taką, która wydaje Ci się odpowiednia dla Ciebie. Jeśli uważasz"
", że czegoś tutaj brakuje, daj mi o tym znać, rozważę dołożenie tego do kolejn"
"ej wersji."

#: 01-Welcome-to-Sonic-Pi.md:28
msgid ""
"Finally, watching others live code is a really great way to learn. I regularly"
" stream live on [livecoding.tv/samaaron](http://livecoding.tv/samaaron) so ple"
"ase do drop by, say hi and ask me lots of questions :-)"
msgstr ""
"Jeszcze jedna sprawa na koniec. Oglądanie innych osób kodujących na żywo jest "
"naprawdę bardzo dobrym sposobem nauki. Regularnie nadaję na żywo na moim kanal"
"e [livecoding.tv/samaaron](http://livecoding.tv/samaaron), możesz więc wpaść, "
"powiedzieć mi cześć i zadać mi dowolne pytanie :-)"

#: 01-Welcome-to-Sonic-Pi.md:33
msgid "OK, let's get started..."
msgstr "Dobra, zaczynamy..."

#: 01.1-Live-Coding.md:1
msgid "1.1 Live Coding"
msgstr "1.1 Kodowanie na żywo"

#: 01.1-Live-Coding.md:3 09-Live-Coding.md:3 09.1-Live-Coding-Fundamentals.md:3
#: A.02-live-coding.md:3
msgid "Live Coding"
msgstr "Kodowanie na żywo"

#: 01.1-Live-Coding.md:5
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to write a"
"nd *modify code live* to make music, just like you might perform live with a g"
"uitar. This means that given some practice you can take Sonic Pi on stage and "
"gig with it."
msgstr ""
"Jednym z najbardziej ekscytujących aspektów Sonic Pi jest to, że pozwala Ci na"
" pisanie i *modyfikację kodu na żywo*, aby móc tworzyć muzykę w czasie rzeczyw"
"istym, tak samo jak podczas gry na gitarze na żywo. Oznacza to, że dzięki odpo"
"wiednim ćwiczeniom i praktyce możesz wykorzystać Sonic Pi do koncertów przed p"
"ublicznością na żywo."

#: 01.1-Live-Coding.md:10
msgid "Free your mind"
msgstr "Uwolnij swój umysł"

#: 01.1-Live-Coding.md:12
msgid ""
"Before we get into the real details of how Sonic Pi works in the rest of this "
"tutorial, I'd like to give you an experience of what it's like to live code. D"
"on't worry if you don't understand much (or any) of this. Just try to hold ont"
"o your seats and enjoy..."
msgstr ""
"Zanim przejdziemy do dalszej części samouczka i zaczniemy zgłębiać szczegóły t"
"ego, w jaki sposób działa Sonic Pi, chciałbym, abyś mógł przez chwilę poczuć, "
"czym jest Kodowanie na żywo (Live Coding). Nie przejmuj się, jeśli nic nie zro"
"zumiesz z tego, co zobaczysz i zrobisz za chwilę. Po prostu usiądź wygodnie, z"
"apnij pasy i poczuj radość..."

#: 01.1-Live-Coding.md:17
msgid "A live loop"
msgstr "Żywa Pętla"

#: 01.1-Live-Coding.md:19
msgid "Let's get started, copy the following code into an empty buffer above:"
msgstr "Zacznijmy od skopiowania następującego kawałka kodu do pustego buforu powyżej:"

#: 01.1-Live-Coding.md:21
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :flibble do\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 0.5\n"
"end"

#: 01.1-Live-Coding.md:28
msgid ""
"Now, press the `Run` button and you'll hear a nice fast bass drum beating away"
". If at any time you wish to stop the sound just hit the `Stop` button. Althou"
"gh don't hit it just yet... Instead, follow these steps:"
msgstr ""
"A teraz naciśnij przycisk `Run`, usłyszysz fajne i rytmiczne uderzenia bębna. "
"W każdym momencie możesz zatrzymać dźwięk, naciskając przycisk `Stop`. Na razi"
"e wstrzymaj się i jeszcze tego nie rób... Zamiast tego wykonaj następujące kro"
"ki:"

#: 01.1-Live-Coding.md:32
msgid "Make sure the bass drum sound is still running"
msgstr "Upewnij się, że wciąż słyszysz dźwięk uderzającego bębna"

#: 01.1-Live-Coding.md:33
msgid "Change the `sleep` value from `0.5` to something higher like `1`."
msgstr "Zmień wartość `0.5` znajdującą się przy poleceniu `sleep` na większą, np. 1."

#: 01.1-Live-Coding.md:34
msgid "Press the `Run` button again"
msgstr "A teraz ponownie naciśnij przycisk `Run`"

#: 01.1-Live-Coding.md:35
msgid "Notice how the drum speed has changed."
msgstr "Zauważ, jak zmieniła się szybkość uderzeń bębna."

#: 01.1-Live-Coding.md:36
msgid ""
"Finally, *remember this moment*, this is the first time you've live coded with"
" Sonic Pi and it's unlikely to be your last..."
msgstr ""
"A teraz... *zapamiętaj ten moment*, gdyż jest to pierwszy (i prawdopodobnie ni"
"e ostatni) raz, kiedy kodujesz na żywo w Sonic Pi..."

#: 01.1-Live-Coding.md:39
msgid ""
"Ok, that was simple enough. Let's add something else into the mix. Above `samp"
"le :bd_haus` add the line `sample :ambi_choir, rate: 0.3`. Your code should lo"
"ok like this:"
msgstr ""
"No dobra, to było całkiem łatwe. Dodajmy do naszego miksu coś jeszcze. Powyżej"
" linii `sample :bd_haus` dodaj linijkę `sample :ambi_choir, rate: 0.3`. Twój k"
"od powinien teraz wyglądać następująco:"

#: 01.1-Live-Coding.md:43
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :flibble do\n"
"  sample :ambi_choir,\n"
"rate: 0.3\n"
"  sample :bd_haus, rate: 1\n"
" \n"
" sleep 1\n"
"end"

#: 01.1-Live-Coding.md:51
msgid ""
"Now, play around. Change the rates - what happens when you use high values, or"
" small values or negative values? See what happens when you change the `rate:`"
" value for the `:ambi_choir` sample just slightly (say to 0.29). What happens "
"if you choose a really small `sleep` value? See if you can make it go so fast "
"your computer will stop with an error because it can't keep up (if that happen"
"s, just choose a bigger `sleep` time and hit `Run` again)."
msgstr ""
"A teraz czas na zabawę. Zacznij zmieniać liczby - co się stanie, gdy użyjesz d"
"użych, małych lub ujemnych liczb? Zobacz, co się stanie, gdy zmienisz odrobinę"
" wartość parametru `rate:` dla sampla `:ambi_choir` (np. na 0.29). Co się stan"
"ie, jeśli wybierzesz naprawdę małą wartość dla parametru `sleep`? Zobacz, czy "
"uda Ci się uruchomić powyższą pętlę w tak szybkim tempie, że Twój komputer zat"
"rzyma się z powodu błędu, gdyż nie będzie w stanie nadążyć (jeśli to się zdarz"
"y, po prostu wybierz większą wartość dla parametru `sleep` i ponownie naciśnij"
" przycisk `Run`)."

#: 01.1-Live-Coding.md:59
msgid "Try commenting one of the `sample` lines out by adding a `#` to the beginning:"
msgstr ""
"Spróbuj zrobić komentarz w jednej z linii zawierających polecenie `sample`, do"
"dając na początku linii znak `#`, np.:"

#: 01.1-Live-Coding.md:62
#, no-wrap
msgid ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"#  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :flibble do\n"
"  sample :ambi_choir, rate: 0.3\n"
"#  sample :bd_haus, rate: 1\n"
"  sleep 1\n"
"end"

#: 01.1-Live-Coding.md:70
msgid ""
"Notice how it tells the computer to ignore it, so we don't hear it. This is ca"
"lled a comment. In Sonic Pi we can use comments to remove and add things into "
"the mix."
msgstr ""
"Zauważ, że dodanie znaku `#` na początku linii nakazuje komputerowi, aby zigno"
"rował daną linię, dzięki temu jej nie słyszymy. Taką linijkę nazywamy komentar"
"zem. W Sonic Pi możemy używać komentarzy do usuwania i dodawania różnych rzecz"
"y do naszej muzyki."

#: 01.1-Live-Coding.md:74
msgid ""
"Finally, let me leave you something fun to play with. Take the code below, and"
" copy it into a spare buffer. Now, don't try to understand it too much other t"
"han see that there are two loops - so two things going round at the same time."
" Now, do what you do best - experiment and play around. Here are some suggesti"
"ons:"
msgstr ""
"Na koniec pozwól, że pozostawię Ci do zabawy coś fajnego. Spójrz na kod poniże"
"j i skopiuj go do wolnego i pustego bufora. Teraz nie próbuj zrozumieć nic wię"
"cej ponadto, że w tym kodzie są dwie pętle (`live_loop`). Oznacza to, że w tym"
" samym czasie dzieją się dwie rzeczy. A teraz rób to, co umiesz najlepiej - ek"
"sperymentuj i baw się, próbując zmieniać ten kod. Oto kilka sugestii, co możes"
"z zrobić:"

#: 01.1-Live-Coding.md:80
msgid "Try changing the blue `rate:` values to hear the sample sound change."
msgstr ""
"Spróbuj zmienić wartość niebieskich wskaźników `rate:`, aby usłyszeć, jak zmie"
"nia się brzmienie sampli."

#: 01.1-Live-Coding.md:81
msgid ""
"Try changing the `sleep` times and hear that both loops can spin round at diff"
"erent rates."
msgstr ""
"Spróbuj zmieniać wartości parametrów `sleep`, dzięki czemu usłyszysz, że obie "
"pętle mogą kręcić się z różną szybkością."

#: 01.1-Live-Coding.md:83
msgid ""
"Try uncommenting the sample line (remove the `#`) and enjoy the sound of the g"
"uitar played backwards."
msgstr ""
"Spróbuj odkomentować linijkę z samplem (usuń znak `#`), a usłyszysz dźwięk git"
"ary granej od tyłu."

#: 01.1-Live-Coding.md:85
msgid ""
"Try changing any of the blue `mix:` values to numbers between `0` (not in the "
"mix) and `1` (fully in the mix)."
msgstr ""
"Spróbuj zmieniać niebieską liczbę znajdującą się przy parametrze `mix:` na war"
"tości pomiędzy `0` (brak dźwięku w naszym utworze) a `1` (brzmienie o normalne"
"j głośności)."

#: 01.1-Live-Coding.md:88
msgid ""
"Remember to press `Run` and you'll hear the change next time the loop goes rou"
"nd. If you end up in a pickle, don't worry - hit `Stop`, delete the code in th"
"e buffer and paste a fresh copy in and you're ready to jam again. Making mista"
"kes is how you'll learn the quickest..."
msgstr ""
"Pamiętaj tylko, żeby wcisnąć przycisk `Run`. Dzięki temu usłyszysz zmianę przy"
" kolejnym przebiegu pętli. Jeśli coś pójdzie nie tak i zacznie się kakofonia, "
"nie przejmuj się tym. Wystarczy, że naciśniesz przycisk `Stop`, usuniesz cały "
"kod w buforze, wkleisz świeżą kopię poniższego kodu i będziesz znowu gotowy do"
" zabawy od nowa. Pamiętaj, człowiek najszybciej uczy się na błędach..."

#: 01.1-Live-Coding.md:94
#, no-wrap
msgid ""
"live_loop :guit do\n"
"  with_fx :echo, mix: 0.3, phase: 0.25 do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"#  sample :guit_em9, rate: -0.5\n"
"  sleep 8\n"
"end\n"
"live_loop :boom do\n"
"  with_fx :reverb, room: 1 do\n"
"    sample :bd_boom, amp: 10, rate: 1\n"
"  end\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :guit do\n"
"  with_fx :echo, mix: 0.3, phase: 0.25 do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"#  sample :guit_em9, rate: -0.5\n"
"  sleep 8\n"
"end\n"
"live_loop :boom do\n"
"  with_fx :reverb, room: 1 do\n"
"    sample :bd_boom, amp: 10, rate: 1\n"
"  end\n"
"  sleep 8\n"
"end"

#: 01.1-Live-Coding.md:111
msgid ""
"Now, keep playing and experimenting until your curiosity about how this all ac"
"tually works kicks in and you start wondering what else you can do with this. "
"You're now ready to read the rest of the tutorial."
msgstr ""
"Baw się i eksperymentuj tym kawałkiem kodu do momentu, w którym Twoja ciekawoś"
"ć sprawi, że zaczniesz zastanawiać się, jak to wszystko właściwie działa oraz "
"co innego można jeszcze wyczarować za pomocą Sonic Pi. Jeśli ten moment już na"
"stąpił, to jesteś gotów, aby przejść do dalszej części samouczka."

#: 01.1-Live-Coding.md:115
msgid "So what are you waiting for..."
msgstr "Więc na co czekasz..."

#: 01.2-Exploring-the-Interface.md:1
msgid "1.2 Exploring the Interface"
msgstr "1.2 Zapoznanie z interfejsem użytkownika"

#: 01.2-Exploring-the-Interface.md:3
msgid "The Sonic Pi Interface"
msgstr "Interfejs użytkownika Sonic Pi"

#: 01.2-Exploring-the-Interface.md:5
msgid ""
"Sonic Pi has a very simple interface for coding music. Let's spend a little ti"
"me exploring it."
msgstr ""
"Sonic Pi ma bardzo prosty interfejs umożliwiający kodowanie muzyki. Poświęćmy "
"chwilę na zapoznanie się z nim."

#: 01.2-Exploring-the-Interface.md:8
msgid "![Sonic Pi Interface](../images/tutorial/GUI.png)"
msgstr "![Interfejs Sonic Pi](../images/tutorial/GUI.png)"

#: 01.2-Exploring-the-Interface.md:11
msgid "*A* - Play Controls"
msgstr "*A* - Kontrola Odtwarzania"

#: 01.2-Exploring-the-Interface.md:12
msgid "*B* - Editor Controls"
msgstr "*B* - Kontrola Edytora"

#: 01.2-Exploring-the-Interface.md:13
msgid "*C* - Info and Help"
msgstr "*C* - Informacje i Pomoc"

#: 01.2-Exploring-the-Interface.md:14
msgid "*D* - Code Editor"
msgstr "*D* - Edytor Kodu"

#: 01.2-Exploring-the-Interface.md:15
msgid "*E* - Prefs Panel"
msgstr "*E* - Panel Preferencji (Ustawienia)"

#: 01.2-Exploring-the-Interface.md:16
msgid "*F* - Log Viewer"
msgstr "*F* - Podgląd Logów"

#: 01.2-Exploring-the-Interface.md:17
msgid "*G* - Help System"
msgstr "*G* - System Pomocy"

#: 01.2-Exploring-the-Interface.md:20
msgid "A. Play Controls"
msgstr "A. Kontrola Odtwarzania"

#: 01.2-Exploring-the-Interface.md:22
msgid ""
"These pink buttons are the main controls for starting and stopping sounds. The"
"re's the *Run* button for running the code in the editor, *Stop* for stopping "
"all running code, *Save* for saving the code to an external file and *Record* "
"to create a recording (a WAV file) of the sound playing."
msgstr ""
"Różowe przyciski zapewniają podstawową kontrolę nad uruchamianiem i zatrzymywa"
"niem dźwięków. Jest przycisk *Run* (Uruchom), który umożliwia uruchomienie kod"
"u znajdującego się w edytorze. Przycisk *Stop* (Zatrzymaj) umożliwia zatrzyman"
"ie aktualnie uruchomionego kodu. Przycisk *Save* (Zapisz) służy do zapisywania"
" kodu wpisanego w edytorze do zewnętrznego pliku tekstowego. Przycisk *Record*"
" (Nagrywaj) umożliwia nagranie aktualnie odtwarzanego dźwięku (w formacie WAV)"
" ."

#: 01.2-Exploring-the-Interface.md:28
msgid "B. Editor Controls"
msgstr "B. Kontrola Edytora"

#: 01.2-Exploring-the-Interface.md:30
msgid ""
"These orange buttons allow you to manipulate the code editor. The *Size +* and"
" *Size -* buttons allow you to make the text bigger and smaller. The *Align* b"
"utton will neaten the code for you to make it look more professional."
msgstr ""
"Pomarańczowe przyciski pozwalają Ci manipulować edytorem kodu. Przyciski *Size"
" +* (Zwiększ rozmiar) i *Size -* (Zmniejsz rozmiar) umożliwiają powiększanie i"
" zmniejszanie rozmiaru tekstu (czcionki). Przycisk *Align* (Wyrównaj) pozwala "
"na uporządkowanie wyglądu Twojego kodu tak, aby wyglądał bardziej profesjonaln"
"ie (poprawia wcięcia)."

#: 01.2-Exploring-the-Interface.md:35
msgid "C. Info and Help"
msgstr "C. Informacje i Pomoc"

#: 01.2-Exploring-the-Interface.md:37
msgid ""
"These blue buttons give you access to information, help and preferences. The *"
"Info* button will open up the information window which contains information ab"
"out Sonic Pi itself - the core team, history, contributors and community. The "
"*Help* button toggles the help system (*G*) and the *Prefs* button toggles the"
" preferences window which allows you to control some basic system parameters."
msgstr ""
"Niebieskie przyciski dają Ci dostęp do informacji, pomocy i ustawień. Naciśnię"
"cie przycisku *Info* (Informacje) spowoduje otworzenie dodatkowego okna, które"
" zawiera informacje dotyczące Sonic Pi - podstawowa ekipa twórców programu, hi"
"storia, współtwórcy oraz społeczność. Przycisk *Help* (Pomoc) otwiera i zamyka"
" system pomocy (*G*), który właśnie czytasz. Przycisk *Prefs* (Ustawienia) otw"
"iera i zamyka panel preferencji, który pozwala Ci na kontrolę kilku podstawowy"
"ch ustawień aplikacji."

#: 01.2-Exploring-the-Interface.md:44
msgid "D. Code Editor"
msgstr "D. Edytor Kodu"

#: 01.2-Exploring-the-Interface.md:46
msgid ""
"This is the area where you'll write your code and compose/perform music. It's "
"a simple text editor where you can write code, delete it, cut and paste, etc. "
"Think of it like a very basic version of Word or Google Docs. The editor will "
"automatically colour words based on their meaning in the code. This may seem s"
"trange at first, but you'll soon find it very useful. For example, you'll know"
" something is a number because it is blue."
msgstr ""
"Jest to obszar, w którym będziesz pisał kod oraz komponował i wykonywał muzykę"
". Jest to prosty edytor tekstowy, w którym możesz pisać kod, kasować go, wycin"
"ać, wklejać, itd. Myśl o nim jako o bardzo prostej wersji edytora Word czy Goo"
"gle Docs. Edytor automatycznie koloruje słowa bazując na ich znaczeniu w kodzi"
"e. Na początku może się to wydawać dziwne, ale bardzo szybko zauważysz, że jes"
"t to bardzo przydatne. Na przykład - wiesz, że coś dany tekst jest liczbą, pon"
"ieważ ma kolor niebieski."

#: 01.2-Exploring-the-Interface.md:54
msgid "E. Prefs Panel"
msgstr "E. Panel preferencji"

#: 01.2-Exploring-the-Interface.md:56
msgid ""
"Sonic Pi supports a number of tweakable preferences which can be accessed by t"
"oggling the *prefs* button in the Info and Help button set. This will toggle t"
"he visibility of the Prefs Panel which includes a number of options to be chan"
"ged. Examples are forcing mono mode, inverting stereo, Toggling log output ver"
"bosity and also a volume slider and audio selector on the Raspberry Pi."
msgstr ""
"Sonic Pi wspiera wiele ustawień, które są dostępne po naciśnięciu przycisku *P"
"refs* (ustawienia). Jest to przycisk, który znajduje się tuż za przyciskami In"
"fo (informacje) i Help (pomoc). Naciśnięcie go spowoduje pokazanie Panelu Usta"
"wień, gdzie znajduje się wiele opcji, które można zmieniać. Przykłady takich u"
"stawień to: wymuszenie trybu mono, odwrócone stereo, włączanie i wyłączanie pa"
"nelu logowania, a także suwak głośności i selektor dźwięku, które są dostępne "
"tylko na platformie Raspberry Pi."

#: 01.2-Exploring-the-Interface.md:63
msgid "F. Log Viewer"
msgstr "F. Podgląd Logów"

#: 01.2-Exploring-the-Interface.md:65
msgid ""
"When you run your code, information about what the program is doing will be di"
"splayed in the log viewer. By default, you'll see a message for every sound yo"
"u create with the exact time the sound was triggered. This is very useful for "
"debugging your code and understanding what your code is doing."
msgstr ""
"Kiedy uruchamiasz swój kod, informacja o tym, co program aktualnie robi, będzi"
"e wyświetlana w panelu z logami. Domyślnie zobaczysz wiadomość pojawiającą się"
" dla każdego dźwięku, który stworzysz, wraz z dokładnym czasem, kiedy ten dźwi"
"ęk został uruchomiony. Jest to bardzo przydatne do debugowania Twojego kodu i "
"zrozumienia, co on robi."

#: 01.2-Exploring-the-Interface.md:71
msgid "G. Help System"
msgstr "G. System Pomocy"

#: 01.2-Exploring-the-Interface.md:73
msgid ""
"Finally, one of the most important parts of the Sonic Pi interface is the help"
" system which appears at the bottom of the window. This can be toggled on and "
"off by clicking on the blue *Help* button. The help system contains help and i"
"nformation about all aspects of Sonic Pi including this tutorial, a list of av"
"ailable synths, samples, examples, FX and a full list of all the functions Son"
"ic Pi provides for coding music."
msgstr ""
"I na koniec została jedna z najważniejszych części interfejsu Sonic Pi - syste"
"m pomocy, który pojawia się w dolnym oknie. Może on być włączony i wyłączony z"
"a pomocą niebieskiego przycisku *Help* (pomoc). System pomocy zawiera pomoc or"
"az informacje dotyczące wszystkich aspektów związanych z Sonic Pi, włączając w"
" to ten samouczek, listę dostępnych syntezatorów, sampli (próbki dźwięków), pr"
"zykłady, FX (efekty) oraz listę wszystkich funkcji, jakie Sonic Pi udostępnia "
"do tworzenia muzyki."

#: 01.3-Learning-through-Play.md:1
msgid "1.3 Learning through Play"
msgstr "1.3 Nauka przez zabawę"

#: 01.3-Learning-through-Play.md:3
msgid "Learning through Play"
msgstr "Nauka przez zabawę"

#: 01.3-Learning-through-Play.md:5
msgid ""
"Sonic Pi encourages you to learn about both computing and music through play a"
"nd experimentation. The most important thing is that you're having fun, and be"
"fore you know it you'll have accidentally learned how to code, compose and per"
"form."
msgstr ""
"Sonic Pi zachęca Cię, abyś uczył się programowania i tworzenia muzyki poprzez "
"zabawę oraz eksperymentowanie. A najważniejsze jest, abyś przy tym dobrze się "
"bawił. Nawet się nie obejrzysz, jak stwierdzisz, że nauczyłeś się programować,"
" komponować i tworzyć muzykę na żywo."

#: 01.3-Learning-through-Play.md:10
msgid "There are no mistakes"
msgstr "Błędów nie ma"

#: 01.3-Learning-through-Play.md:12
msgid ""
"Whilst we're on this subject, let me just give you one piece of advice I've le"
"arned over my years of live coding with music - *there are no mistakes, only o"
"pportunities*. This is something I've often heard in relation to jazz but it w"
"orks equally well with live coding. No matter how experienced you are - from a"
" complete beginner to a seasoned Algoraver, you'll run some code that has a co"
"mpletely unexpected outcome. It might sound insanely cool - in which case run "
"with it. However, it might sound totally jarring and out of place. It doesn't "
"matter that it happened - what matters is what you do next with it. Take the s"
"ound, manipulate it and morph it into something awesome. The crowd will go *wi"
"ld*."
msgstr ""
"Skoro jesteśmy już przy tym temacie, to pozwól, że dam Ci radę. Coś, czego nau"
"czyłem się przez lata kodowania muzyki na żywo - *błędów nie ma, są tylko nowe"
" możliwości*. Jest to zdanie, które często słyszy się w kontekście muzyki z ga"
"tunku jazz, ale sprawdza się równie dobrze w odniesieniu do kodowania na żywo."
" Nie ma znaczenia, jak dużo masz doświadczenia - niezależnie czy jesteś całkow"
"itym żółtodziobem, czy zaprawionym w bojach Algorejwerem, na pewno zdarzy Ci s"
"ię napisać kod, którego wynik po uruchomieniu będzie całkowicie niespodziewany"
". Czasami może brzmieć odlotowo - i w takim przypadku po prostu pozwól mu grać"
". Innym razem zdarzy się, że będzie brzmiał beznadziejnie i totalnie nie będzi"
"e pasował do reszty. Ale pamiętaj: to, że się to wydarzyło, jest całkowicie ni"
"eistotne - ważne jest to, co zrobisz dalej. Weź te brzmienie, zabaw się nim i "
"przekształć go w coś niesamowitego. Tłum będzie *szalał*."

#: 01.3-Learning-through-Play.md:24
msgid "Start Simple"
msgstr "Zacznij od czegoś prostego"

#: 01.3-Learning-through-Play.md:26
msgid ""
"When you're learning, it's tempting to want to do amazing things *now*. Howeve"
"r, just hold that thought and see it as a distant goal to reach *later*. For n"
"ow, instead think of the *simplest* thing you could write which would be fun a"
"nd rewarding that's a small step towards the amazing thing you have in your he"
"ad. Once you have an idea about that simple step, then try and build it, play "
"with it and then see what new ideas it gives you. Before long you'll be too bu"
"sy having fun and making real progress."
msgstr ""
"Zawsze kiedy się czegoś uczysz, istnieje pokusa, żeby robić niesamowite rzeczy"
" *tu i teraz*. Postaraj się jednak powstrzymać tę chęć i spójrz na nią jako od"
"legły cel, który uda się się osiągnąć *później*. Zamiast tego pomyśl o *najpro"
"stszej* rzeczy, jaką potrafisz napisać, która będzie fajna, a jednocześnie spr"
"awi, że będziesz czuł satysfakcję ze zrobienia małego kroku w kierunku realiza"
"cji wizji, która istnieje w Twojej głowie. Gdy już będziesz miał pomysł na ten"
" mały krok, spróbuj go wykonać - napisz kawałek kodu, uruchom go, baw się nim "
"i zobacz, jakie nowe pomysły przyjdą Ci do głowy. Zobaczysz, niedługo będziesz"
" w całości pochłonięty tą zabawą i będziesz robić szybkie postępy."

#: 01.3-Learning-through-Play.md:35
msgid "Just make sure to share your work with others!"
msgstr "Nie zapomnij tylko podzielić się swoją pracą z innymi!"

#: 02-Synths.md:1
msgid "2 Synths"
msgstr "2 Syntezatory"

#: 02-Synths.md:3 02.3-Switching-Synths.md:11
msgid "Synths"
msgstr "Syntezatory"

#: 02-Synths.md:5
msgid "OK, enough of the intros - let's get into some sound."
msgstr "OK, tyle tytułem wstępu - pora zająć się muzyką."

#: 02-Synths.md:7
msgid ""
"In this section we'll cover the basics of triggering and manipulating synths. "
"Synth is short for synthesiser which is a fancy word for something which creat"
"es sounds. Typically synths are quite complicated to use - especially analog s"
"ynths with many patch wires and modules. However, Sonic Pi gives you much of t"
"hat power in a very simple and approachable manner."
msgstr ""
"W tym rozdziale poznasz podstawy uruchamiania i operowania syntezatorami. Synt"
"ezator to taka fajna nazwa dla czegoś, co wytwarza dźwięk. Normalnie syntezato"
"ry są dość skomplikowane w użyciu. Zwłaszcza syntezatory analogowe zawierają w"
"iele różnych połączeń, kabelków i modułów. Natomiast Sonic Pi oddaje w Twoje r"
"ęce wiele z tych możliwości w bardzo prostej i przystępnej formie."

#: 02-Synths.md:14
msgid ""
"Don't be fooled by the immediate simplicity of Sonic Pi's interface. You can g"
"et very deep into very sophisticated sound manipulation if that's your thing. "
"Hold on to your hats..."
msgstr ""
"Nie daj się zwieść prostocie interfejsu Sonic Pi. Jeśli tylko będziesz tego ch"
"ciał, masz do swojej dyspozycji bardzo wyszukane możliwości manipulacji dźwięk"
"iem. Lepiej zapnij pasy..."

#: 02.1-Your-First-Beeps.md:1
msgid "2.1 Your First Beeps"
msgstr "2.1 Twoje pierwsze dźwięki"

#: 02.1-Your-First-Beeps.md:3
msgid "Your First Beeps"
msgstr "Twoje pierwsze dźwięki"

#: 02.1-Your-First-Beeps.md:5
msgid "Take a look at the following code:"
msgstr "Spójrz na poniższy kod:"

#: 02.1-Your-First-Beeps.md:7 02.4-Durations-with-Envelopes.md:49
#, no-wrap
msgid "play 70"
msgstr "play 70"

#: 02.1-Your-First-Beeps.md:11
msgid ""
"This is where it all starts. Go ahead, copy and paste it into the code window "
"at the top of the app (the big white space under the Run button). Now, press R"
"un..."
msgstr ""
"To jest miejsce, w którym wszystko się zaczyna. Śmiało, skopiuj powyższy kod i"
" wklej go do edytora kodu na górze aplikacji (duża biała przestrzeń tuż pod pr"
"zyciskiem *Run*). Kiedy już to zrobisz, naciśnij przycisk Run..."

#: 02.1-Your-First-Beeps.md:15
msgid "Beep!"
msgstr "Bip!"

#: 02.1-Your-First-Beeps.md:17
msgid "Intense. Press it again. And again. *And again...*"
msgstr "A teraz naciśnij przycisk jeszcze raz. I jeszcze raz. *I jeszcze raz...*"

#: 02.1-Your-First-Beeps.md:19
msgid ""
"Woah, crazy, I'm sure you could keep doing that all day. But wait, before you "
"lose yourself in an infinite stream of beeps, try changing the number:"
msgstr ""
"Łał, szaleństwo. Jestem pewien, że możesz tak przez cały dzień. Ale poczekaj. "
"Zanim zatracisz się w pętli nieskończonych bipów, spróbuj zmienić liczbę:"

#: 02.1-Your-First-Beeps.md:23
#, no-wrap
msgid "play 75"
msgstr "play 75"

#: 02.1-Your-First-Beeps.md:27
msgid "Can you hear the difference? Try a lower number:"
msgstr "Słyszysz różnicę? Teraz spróbuj mniejszej liczby:"

#: 02.1-Your-First-Beeps.md:29
#, no-wrap
msgid "play 60"
msgstr "play 60"

#: 02.1-Your-First-Beeps.md:33
msgid ""
"So, lower numbers make lower pitched beeps and higher numbers make higher pitc"
"hed beeps. Just like on a piano, the keys at the lower part of the piano (the "
"left hand side) play lower notes and the keys on the higher part of the piano "
"(the right hand side) play higher notes. In fact, the numbers actually relate "
"to notes on the piano. `play 47` actually means play the 47th note on the pian"
"o. Which means that `play 48` is one note up (the next note to the right). It "
"just so happens that the 4th octave C is number 60. Go ahead and play it: `pla"
"y 60`."
msgstr ""
"Zauważ, że mniejsze liczby generują dźwięki o niższym tonie, a większe liczby "
"generują dźwięki o wyższym tonie. Tak samo jak na pianinie - klawisze znajdują"
"ce się po lewej stronie instrumentu grają nuty o niższym brzmieniu, a klawisze"
" znajdujące się po prawej stronie grają nuty o wyższym brzmieniu. I faktycznie"
" powyższe liczby odpowiadają nutom na pianinie. Kod `play 47` znaczy nic inneg"
"o jak zagraj nutę znajdującą się pod 47 klawiszem na pianinie. Oznacza to, że "
"kod `play 48` to dźwięk o jedną nutę wyższy (następny klawisz po prawej). Tak "
"się składa, że nuta C w 4-tej oktawie odpowiada liczbie 60. Śmiało, spróbuj za"
"grać ten dźwięk: `play 60`."

#: 02.1-Your-First-Beeps.md:42
msgid ""
"*Don't worry* if this means nothing to you - it didn't to me when I first star"
"ted. All that matters right now is that you know that *low numbers make lower "
"beeps* and *high numbers make higher beeps*."
msgstr ""
"*Nie przejmuj się*, jeśli nic z tego nie rozumiesz - ja również nie rozumiałem"
", gdy zaczynałem, dokładnie jak Ty teraz. Wszystko, co się teraz liczy, to to,"
" że wiesz już, że *małe liczby generują dźwięki o niskim brzmieniu*, a *duże l"
"iczby generują dźwięki o wyższym brzmieniu*."

#: 02.1-Your-First-Beeps.md:46 08.2-Chords.md:3
msgid "Chords"
msgstr "Akordy"

#: 02.1-Your-First-Beeps.md:48
msgid ""
"Playing a note is quite fun, but playing many at the same time can be even bet"
"ter. Try it:"
msgstr ""
"Zagranie nuty jest całkiem fajne, ale zagranie kilku jednocześnie może być jes"
"zcze fajniejsze. Spróbuj:"

#: 02.1-Your-First-Beeps.md:51
#, no-wrap
msgid ""
"play 72\n"
"play 75\n"
"play 79"
msgstr ""
"play 72\n"
"play 75\n"
"play 79"

#: 02.1-Your-First-Beeps.md:57
msgid ""
"Jazzy! So, when you write multiple `play`s, they all play at the same time. Tr"
"y it for yourself - which numbers sound good together? Which sound terrible? E"
"xperiment, explore and find out for yourself."
msgstr ""
"Super! Zauważ, że kiedy napiszesz kilka razy komendę `play`, wszystkie dźwięki"
" zagrają w tym samym momencie. Teraz spróbuj sam - które dźwięki brzmią dobrze"
" razem? Które brzmią okropnie? Eksperymentuj, odkrywaj i przekonaj się na włas"
"nej skórze."

#: 02.1-Your-First-Beeps.md:61
msgid "Melody"
msgstr "Melodia"

#: 02.1-Your-First-Beeps.md:63
msgid ""
"So, playing notes and chords is fun - but how about a melody? What if you want"
"ed to play one note after another and not at the same time? Well, that's easy,"
" you just need to `sleep` between the notes:"
msgstr ""
"Granie nut i akordów jest fajne - a co powiesz na zagranie melodii? Co, jeśli "
"chciałbyś zagrać jedną nutę po drugiej, a nie obie w tym samym czasie? Nic pro"
"stszego, wystarczy że odczekasz chwilę pomiędzy zagraniem poszczególnych nut. "
"Możesz to zrobić, używając polecenia `sleep`:"

#: 02.1-Your-First-Beeps.md:67
#, no-wrap
msgid ""
"play 72\n"
"sleep 1\n"
"play 75\n"
"sleep 1\n"
"play 79"
msgstr ""
"play 72\n"
"sleep 1\n"
"play 75\n"
"sleep 1\n"
"play 79"

#: 02.1-Your-First-Beeps.md:75
msgid ""
"How lovely, a little arpeggio. So what does the `1` mean in `sleep 1`? Well it"
" means the *duration of the sleep*. It actually means sleep for one beat, but "
"for now we can think about it as sleeping for 1 second. So, what if we wanted "
"to make our arpeggio a little faster? Well, we need to use shorter sleep value"
"s. What about a half i.e. `0.5`:"
msgstr ""
"Cudownie, właśnie stworzyłeś małe arpeggio. No dobrze, ale co oznacza liczba `"
"1` w poleceniu `sleep 1`? Oznacza ona *długość trwania odstępu pomiędzy nutami"
"*. Zasadniczo oznacza to odstęp o długości jednego uderzenia, ale póki co może"
"sz myśleć o tym jako o przerwie trwającej jedną sekundę. Co powinniśmy w takim"
" razie zrobić, jeśli chcielibyśmy trochę przyśpieszyć nasze arpeggio? Jedyne, "
"co musimy zrobić, to użyć \"krótszych\" wartości dla polecenia sleep. Weźmy na p"
"rzykład połowę, czyli wartość `0.5`:"

#: 02.1-Your-First-Beeps.md:81
#, no-wrap
msgid ""
"play 72\n"
"sleep 0.5\n"
"play 75\n"
"sleep 0.5\n"
"play 79"
msgstr ""
"play 72\n"
"sleep 0.5\n"
"play 75\n"
"sleep 0.5\n"
"play 79"

#: 02.1-Your-First-Beeps.md:89
msgid ""
"Notice how it plays faster. Now, try for yourself, change the times - use diff"
"erent times and notes."
msgstr ""
"Zauważ, że arpeggio gra teraz szybciej. Teraz Twoja kolej, pobaw się tym kawał"
"kiem kodu, zmieniając czasy według własnego uznania oraz używając różnych nut."

#: 02.1-Your-First-Beeps.md:92
msgid ""
"One thing to try is in-between notes such as `play 52.3` and `play 52.63`. The"
"re's absolutely no need to stick to standard whole notes. Play around and have"
" fun."
msgstr ""
"Jest jeszcze jedna rzecz, którą warto wypróbować. Spróbuj użyć nut, które są \""
"pomiędzy\" całymi nutami, np. `play 52.3`, `play 52.63`. Nie ma absolutnie żadn"
"ej konieczności, abyś kurczowo trzymał się standardowych, pełnych nut. Pokombi"
"nuj z różnymi wartościami i baw się dobrze."

#: 02.1-Your-First-Beeps.md:97
msgid "Traditional Note Names"
msgstr "Tradycyjne Nazwy Nut"

#: 02.1-Your-First-Beeps.md:99
msgid ""
"For those of you that already know some musical notation (don't worry if you d"
"on't - you don't need it to have fun) you might want to write a melody using n"
"ote names such as C and F# rather than numbers. Sonic Pi has you covered. You "
"can do the following:"
msgstr ""
"Osoby, które aktualnie znają już trochę notację muzyczną (nie przejmuj się, je"
"śli jej nie znasz - nie potrzebujesz tego, żeby móc się dobrze bawić), być moż"
"e będą preferować pisanie melodii przy wykorzystaniu standardowych nazw nut, n"
"p. C lub F# (Fis) zamiast liczb. Sonic Pi na to pozwala. Nic nie stoi na przes"
"zkodzie, abyś napisał i uruchomił taki kod:"

#: 02.1-Your-First-Beeps.md:104
#, no-wrap
msgid ""
"play :C\n"
"sleep 0.5\n"
"play :D\n"
"sleep 0.5\n"
"play :E"
msgstr ""
"play :C\n"
"sleep 0.5\n"
"play :D\n"
"sleep 0.5\n"
"play :E"

#: 02.1-Your-First-Beeps.md:112
msgid ""
"Remember to put the colon `:` in front of your note name so that it goes pink."
" Also, you can specify the octave by adding a number after the note name:"
msgstr ""
"Pamiętaj tylko, żeby umieścić dwukropek `:` tuż przed nazwą Twojej nuty tak, ż"
"e zmieni ona kolor na różowy. Możesz również zdefiniować oktawę, umieszczając "
"odpowiednią liczbę tuż po nazwie nuty:"

#: 02.1-Your-First-Beeps.md:116
#, no-wrap
msgid ""
"play :C3\n"
"sleep 0.5\n"
"play :D3\n"
"sleep 0.5\n"
"play :E4"
msgstr ""
"play :C3\n"
"sleep 0.5\n"
"play :D3\n"
"sleep 0.5\n"
"play :E4"

#: 02.1-Your-First-Beeps.md:124
msgid ""
"If you want to make a note sharp, add an `s` after the note name such as `play"
" :Fs3` and if you want to make a note flat, add a `b` such as `play :Eb3`."
msgstr ""
"Jeśli chcesz sprawić, aby nuta brzmiała o pół tonu wyżej (uzyskanie dźwięku fi"
"s), dodaj `s` tuż za Twoją nutą, np. `play :Fs3`. Analogicznie - jeśli chcesz "
"obniżyć dźwięk nuty o połowę (uzyskanie dźwięku mol), dodaj na końcu Twojej nu"
"ty `b`, np. `play :Eb3`."

#: 02.1-Your-First-Beeps.md:127
msgid "Now go *crazy* and have fun making your own tunes."
msgstr "A teraz *zaszalej* i spróbuj stworzyć swoje własne melodie."

#: 02.2-Synth-Params.md:1
msgid "2.2 Synth Options"
msgstr "2.2 Opcje Syntezatorów"

#: 02.2-Synth-Params.md:3
msgid "Synth Options: Amp and Pan"
msgstr "Opcje Syntezatorów: Amplituda i Balans"

#: 02.2-Synth-Params.md:5
msgid ""
"As well as allowing you to control which note to play or which sample to trigg"
"er, Sonic Pi provides a whole range of options to craft and control the sounds"
". We'll be covering many of these in this tutorial and there's extensive docum"
"entation for each in the help system. However, for now we'll introduce two of "
"the most useful: *amplitude* and *pan*. First, let's look at what options actu"
"ally are."
msgstr ""
"Tak samo, jak masz kontrolę nad tym, którą nutę zagrać lub który sampel urucho"
"mić, Sonic Pi udostępnia cały asortyment parametrów umożliwiających kształtowa"
"nie i kontrolowanie dźwięków. Wiele z tych parametrów zostanie omówionych w ty"
"m samouczku. Ponadto w systemie pomocy jest obszerna dokumentacja, która szcze"
"gółowo opisuje każdy z nich. Tymczasem, przedstawimy dwa najbardziej przydatne"
": *aplituda* (amp) i *balans* (pan). Na początek, zobaczmy, czym są te paramet"
"ry w rzeczywistości."

#: 02.2-Synth-Params.md:13
msgid "Options"
msgstr "Opcje"

#: 02.2-Synth-Params.md:15
msgid ""
"Sonic Pi supports the notion of options (or opts for short) for its synths. Op"
"ts are controls you pass to `play` which modify and control aspects of the sou"
"nd you hear. Each synth has its own set of opts for finely tuning its sound. H"
"owever, there are common sets of opts shared by many sounds such as `amp:` and"
" envelope opts (covered in another section)."
msgstr ""
"Syntezatory obecne w Sonic Pi wspierają pojęcie opcji. Opcje to sterowniki, kt"
"óre po przekazaniu do polecenia `play` modyfikują i kontrolują różne aspekty o"
"dtwarzanego dźwięku, który słyszysz. Każdy z syntezatorów posiada własny zesta"
"w opcji, które pozwalają na subtelny tuning danego dźwięku. Jednakże istnieje "
"zestaw parametrów, które są wspólne dla wielu dźwięków. Przykładami takich par"
"ametrów są np. `amp:` czy opcje obwiedni dźwięku (zostaną omówione w dalszej c"
"zęści samouczka)."

#: 02.2-Synth-Params.md:22
msgid ""
"Opts have two major parts, their name (the name of the control) and their valu"
"e (the value you want to set the control at). For example, you might have a op"
"t called `cheese:` and want to set it with a value of `1`."
msgstr ""
"Opcje składają się z dwóch części: nazwy (kontrolowanej opcji) oraz wartości ("
"jaką chcemy ustawić dla podanej opcji). Na przykład możesz mieć opcję, która n"
"azywa się `ser:` i chciałbyś ustawić jej wartość na `1`."

#: 02.2-Synth-Params.md:27
msgid ""
"Opts are passed to calls to `play` by using a comma `,` and then the name of t"
"he opt such as `amp:` (don't forget the colon `:`) and then a space and the va"
"lue of the opt. For example:"
msgstr ""
"Opcje są przekazywane do polecenia `play` w następujący sposób: najpierw dodaj"
"emy tuż za poleceniem przecinek `,`, po nim wpisujemy nazwę opcji, np. `amp:` "
"(nie zapomnij o dwukropku `:`) i na końcu po spacji podajemy wartość tej opcji"
". Oto przykład:"

#: 02.2-Synth-Params.md:31
#, no-wrap
msgid "play 50, cheese: 1"
msgstr "play 50, ser: 1"

#: 02.2-Synth-Params.md:35
msgid "(Note that `cheese:` isn't a valid opt, we're just using it as an example)."
msgstr ""
"(Zauważ, że `ser:` nie jest poprawną opcją, używamy go tutaj tylko jako przykł"
"ad)."

#: 02.2-Synth-Params.md:37
msgid "You can pass multiple opts by separating them with a comma:"
msgstr "Możesz przekazać wiele opcji, oddzielając je przecinkami:"

#: 02.2-Synth-Params.md:39
#, no-wrap
msgid "play 50, cheese: 1, beans: 0.5"
msgstr "play 50, ser: 1, fasolki: 0.5"

#: 02.2-Synth-Params.md:43
msgid "The order of the opts doesn't matter, so the following is identical:"
msgstr ""
"Kolejność opcji nie ma znaczenia, poniższy kod też zadziała i da taki sam wyni"
"k:"

#: 02.2-Synth-Params.md:45
#, no-wrap
msgid "play 50, beans: 0.5, cheese: 1"
msgstr "play 50, fasolki: 0.5, ser: 1"

#: 02.2-Synth-Params.md:49
msgid ""
"Opts that aren't recognised by the synth are just ignored (like `cheese` and `"
"beans` which are clearly ridiculous opt names!)"
msgstr ""
"Opcje, które nie są rozpoznawane przez dany syntezator, są po prostu ignorowan"
"e (tak jak `ser` i `fasolki` jak w powyższym przypadku, które są po prostu śmi"
"esznymi nazwami dla opcji!)"

#: 02.2-Synth-Params.md:52
msgid ""
"If you accidentally use the same opt twice with different values, the last one"
" wins. For example, `beans:` here will have the value 2 rather than 0.5:"
msgstr ""
"Jeśli niechcący zdarzy Ci się dwa razy użyć opcji o tej samej nazwie, to wygry"
"wa ostatnia. Na przykład - ostateczna wartość dla opcji `fasolki:` w poniższym"
" przykładzie wyniesie 2 (a nie 0.5):"

#: 02.2-Synth-Params.md:56
#, no-wrap
msgid "play 50, beans: 0.5, cheese: 3, eggs: 0.1, beans: 2"
msgstr "play 50, fasolki: 0.5, ser: 3, jajka: 0.1, fasolki: 2"

#: 02.2-Synth-Params.md:60
msgid ""
"Many things in Sonic Pi accept opts, so just spend a little time learning how "
"to use them and you'll be set! Let's play with our first opt: `amp:`."
msgstr ""
"Wiele poleceń w Sonic Pi akceptuje opcje, warto więc, żebyś poświęcił parę chw"
"il, aby nauczyć się, jak ich używać, dzięki temu będziesz ustawiony! Spróbujmy"
" pobawić się trochę z naszą pierwszą opcją: `amp:`."

#: 02.2-Synth-Params.md:64 02.4-Durations-with-Envelopes.md:25
msgid "Amplitude"
msgstr "Amplituda"

#: 02.2-Synth-Params.md:66
msgid ""
"Amplitude is a computer representation of the loudness of a sound. A *high amp"
"litude produces a loud sound* and a *low amplitude produces a quiet sound*. Ju"
"st as Sonic Pi uses numbers to represent time and notes, it uses numbers to re"
"present amplitude. An amplitude of 0 is silent (you'll hear nothing) whereas a"
"n amplitude of 1 is normal volume. You can even crank up the amplitude higher "
"to 2, 10, 100. However, you should note that when the overall amplitude of all"
" the sounds gets too high, Sonic Pi uses what's called a compressor to squash "
"them all to make sure things aren't too loud for your ears. This can often mak"
"e the sound muddy and strange. So try to use low amplitudes, i.e. in the range"
" 0 to 0.5 to avoid compression."
msgstr ""
"Amplituda jest wielkością, która w świecie komputerów oznacza głośność dźwięku"
". *Wysoka amplituda powoduję głośny dźwięk*, a *niska amplituda powoduje cichy"
" dźwięk*. Jak już wcześniej widziałeś, Sonic Pi używa liczb do reprezentacji c"
"zasu oraz nut. W taki sam sposób liczby są używane do reprezentacji wielkości "
"amplitudy (głośności). Amplituda o wartości 0 to cisza (nie słyszysz nic). Nat"
"omiast amplituda o wartości 1 oznacza ustawienie głośności na standardowy pozi"
"om. Możesz podkręcić głośność wyżej, na 2, 10, 100. Musisz jednak wiedzieć, że"
" gdy całkowita amplituda wszystkich dźwięków stanie się zbyt wysoka, Sonic Pi "
"wykorzysta narzędzie zwane kompresorem, żeby zdusić dźwięk tak, że będzie mieć"
" pewność, iż dźwięk nie jest zbyt głośny dla Twoich uszu. Takie działanie może"
" spowodować, że dźwięk stanie się nieczysty i dziwny. Staraj się więc używać n"
"iskich wartości dla amplitudy, np. wartości w zakresie pomiędzy 0 a 0.5. Dzięk"
"i temu unikniesz mechanizmu kompresji."

#: 02.2-Synth-Params.md:79
msgid "Amp it up"
msgstr "Amplituda w górę"

#: 02.2-Synth-Params.md:81
msgid ""
"To change the amplitude of a sound, you can use the `amp:` opt. For example, t"
"o play at half amplitude pass 0.5:"
msgstr ""
"Aby zmienić amplitudę dźwięku, możesz użyć opcji `amp:`. Przykładowo: żeby zag"
"rać z głośnością na poziomie 0.5, napisz taki kawałek kodu i uruchom go:"

#: 02.2-Synth-Params.md:84
#, no-wrap
msgid "play 60, amp: 0.5"
msgstr "play 60, amp: 0.5"

#: 02.2-Synth-Params.md:88
msgid "To play at double amplitude pass 2:"
msgstr "Aby zagrać z podwójną głośnością, przekaż liczbę 2:"

#: 02.2-Synth-Params.md:90
#, no-wrap
msgid "play 60, amp: 2"
msgstr "play 60, amp: 2"

#: 02.2-Synth-Params.md:94
msgid ""
"The `amp:` opt only modifies the call to `play` it's associated with. So, in t"
"his example, the first call to play is at half volume and the second is back t"
"o the default (1):"
msgstr ""
"Opcja `amp:` modyfikuje tylko pojedyncze polecenie `play`, do którego została "
"przekazana. Zauważ, że w poniższym przykładzie pierwsze wywołanie polecenia pl"
"ay zostanie zagrane z głośnością na poziomie równym połowie standardowej głośn"
"ości, natomiast drugie polecenie zostanie zagrane z głośnością standardową (1)"
":"

#: 02.2-Synth-Params.md:98
#, no-wrap
msgid ""
"play 60, amp: 0.5\n"
"sleep 0.5\n"
"play 65"
msgstr ""
"play 60, amp: 0.5\n"
"sleep 0.5\n"
"play 65"

#: 02.2-Synth-Params.md:104
msgid "Of course, you can use different `amp:` values for each call to play:"
msgstr ""
"Nic nie stoi na przeszkodzie, żebyś użył różnych wartości opcji `amp:` dla każ"
"dego polecenia play:"

#: 02.2-Synth-Params.md:106
#, no-wrap
msgid ""
"play 50, amp: 0.1\n"
"sleep 0.25\n"
"play 55, amp: 0.2\n"
"sleep 0.25\n"
"play 57, amp: 0.4\n"
"sleep 0.25\n"
"play 62, amp: 1"
msgstr ""
"play 50, amp: 0.1\n"
"sleep 0.25\n"
"play 55, amp: 0.2\n"
"sleep 0.25\n"
"play 57, amp: 0.4\n"
"sleep 0.25\n"
"play 62, amp: 1"

#: 02.2-Synth-Params.md:116
msgid "Panning"
msgstr "Balansowanie"

#: 02.2-Synth-Params.md:118
msgid ""
"Another fun opt to use is `pan:` which controls the panning of a sound in ster"
"eo. Panning a sound to the left means that you hear it out of the left speaker"
", and panning it to the right means you hear it out of your right speaker. For"
" our values, we use a -1 to represent fully left, 0 to represent center and 1 "
"to represent fully right in the stereo field. Of course, we're free to use any"
" value between -1 and 1 to control the exact positioning of our sound."
msgstr ""
"Kolejną fajną opcją, z której można korzystać, jest `pan:`. Kontroluje ona bal"
"ans dźwięku w stereo. Balansowanie dźwiękiem w lewą stronę oznacza, że będzies"
"z go słyszał tylko w lewym głośniku (słuchawce). Z kolei balansowanie dźwiękie"
"m na prawą stronę oznacza, że będziesz go słyszał tylko w prawym głośniku (słu"
"chawce). W naszym przypadku używamy wartości -1 do reprezentacji dźwięku, któr"
"ego balans został w pełni ustawiony na lewą stronę, 0 dla ustawienia balansu p"
"o środku (wartość domyślna) oraz 1 dla dźwięku ustawionego na prawą stronę w p"
"olu stereo. Naturalnie nic nie stoi na przeszkodzie, abyśmy używali dowolnej w"
"artości znajdującej się pomiędzy -1 i 1 w celu dokładnej kontroli \"pozycji\" na"
"szego dźwięku."

#: 02.2-Synth-Params.md:126
msgid "Let's play a beep out of the left speaker:"
msgstr "Zagrajmy dźwięk bip z lewego głośnika:"

#: 02.2-Synth-Params.md:128
#, no-wrap
msgid "play 60, pan: -1"
msgstr "play 60, pan: -1"

#: 02.2-Synth-Params.md:132
msgid "Now, let's play it out of the right speaker:"
msgstr "A teraz zagrajmy go z prawego głośnika:"

#: 02.2-Synth-Params.md:134
#, no-wrap
msgid "play 60, pan: 1"
msgstr "play 60, pan: 1"

#: 02.2-Synth-Params.md:138
msgid "Finally let's play it back out of the center of both (the default position):"
msgstr "Na koniec zagrajmy go z powrotem z obu głośników po środku (domyślna pozycja):"

#: 02.2-Synth-Params.md:141
#, no-wrap
msgid "play 60, pan: 0"
msgstr "play 60, pan: 0"

#: 02.2-Synth-Params.md:145
msgid "Now, go and have fun changing the amplitude and panning of your sounds!"
msgstr ""
"Teraz kolej na Ciebie. Spróbuj samodzielnie pobawić się, zmieniając Twoje dźwi"
"ęki za pomocą opcji amplituda (amp:) i balans (pan:)!"

#: 02.3-Switching-Synths.md:1
msgid "2.3 Switching Synths"
msgstr "2.3 Zmienianie Syntezatorów"

#: 02.3-Switching-Synths.md:3
msgid "Switching Synths"
msgstr "Zmienianie Syntezatorów"

#: 02.3-Switching-Synths.md:5
msgid ""
"So far we've had quite a lot of fun making beeps. However, you're probably sta"
"rting to get bored of the basic beep noise. Is that all Sonic Pi has to offer?"
" Surely there's more to live coding than just playing beeps? Yes there is, and"
" in this section we'll explore the exciting range of sounds that Sonic Pi has "
"to offer."
msgstr ""
"Do tej pory bawiliśmy się całkiem nieźle, tworząc wiele fajnych dźwięków. Jest"
" jednak bardzo prawdopodobne, że ten  podstawowy dźwięk zaczyna Cię już powoli"
" nudzić. Czy to jest wszystko, na co stać Sonic Pi? Przecież kodowanie na żywo"
" na pewno daje dużo więcej możliwości, niż tylko granie jednego prostego dźwię"
"ku bip? Owszem, są inne możliwości. W tym rozdziale poznasz fascynującą paletę"
" dźwięków, jaką oferuje Ci Sonic Pi."

#: 02.3-Switching-Synths.md:13
msgid ""
"Sonic Pi has a range of instruments it calls synths which is *short for synthe"
"sisers*. Whereas samples represent pre-recorded sounds, synths are capable of "
"generating new sounds depending on how you control them (which we'll explore l"
"ater in this tutorial). Sonic Pi's synths are very powerful and expressive and"
" you'll have a lot of fun exploring and playing with them. First, let's learn "
"how to select the current synth to use."
msgstr ""
"Sonic Pi posiada szeroki wachlarz instrumentów, które nazywa *syntezatorami*. "
"Zważywszy na to, że sample (próbki) reprezentują nagrane dźwięki, syntezatory "
"mają możliwość generowania nowych dźwięków, które są zależne od tego, jak je k"
"ontrolujesz (w tym samouczku dowiesz się o tym później). Syntezatory Sonic Pi "
"są bardzo potężne i ekspresyjne. Będziesz miał dużo przyjemności podczas pozna"
"wania i zabawy nimi. Na początku jednak nauczmy się, jak wybierać aktualnie gr"
"ający syntezator."

#: 02.3-Switching-Synths.md:21
msgid "Buzzy saws and prophets"
msgstr "Brzęczące syntezatory saw i prophet"

#: 02.3-Switching-Synths.md:23
msgid "A fun sound is the *saw wave* - let's give it a try:"
msgstr "Fajnym dźwiękiem jest *sawdźwięk piły* - spróbujmy:"

#: 02.3-Switching-Synths.md:25
#, no-wrap
msgid ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.25"
msgstr ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.25"

#: 02.3-Switching-Synths.md:35
msgid "Let's try another sound - the *prophet*:"
msgstr "A teraz spróbujmy innego dźwięku - syntezatora *prophet*:"

#: 02.3-Switching-Synths.md:37
#, no-wrap
msgid ""
"use_synth :prophet\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.25"
msgstr ""
"use_synth :prophet\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.25"

#: 02.3-Switching-Synths.md:47
msgid "How about combining two sounds. First one after another:"
msgstr "Co powiesz na połączenie dwóch dźwięków. Jeden po drugim:"

#: 02.3-Switching-Synths.md:49
#, no-wrap
msgid ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57\n"
"sleep 0.25"
msgstr ""
"use_synth :saw\n"
"play 38\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57\n"
"sleep 0.25"

#: 02.3-Switching-Synths.md:60
msgid "Now at the same time:"
msgstr "A teraz w tym samym czasie:"

#: 02.3-Switching-Synths.md:62
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play 38\n"
"sleep 0.25\n"
"use_synth :dsaw\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57\n"
"sleep 0.25"
msgstr ""
"use_synth :tb303\n"
"play 38\n"
"sleep 0.25\n"
"use_synth :dsaw\n"
"play 50\n"
"sleep 0.25\n"
"use_synth :prophet\n"
"play 57\n"
"sleep 0.25"

#: 02.3-Switching-Synths.md:74
msgid ""
"Notice that the `use_synth` command only affects the following calls to `play`"
". Think of it like a *big switch* - new calls to `play` will play whatever syn"
"th it's currently pointing to. You can move the switch to a new synth with `us"
"e_synth`."
msgstr ""
"Zauważ, że polecenie `use_synth` wywiera wpływ tylko kolejne polecenia `play`."
" Pomyśl o tym poleceniu jako o *dużym przełączniku* - kolejne wywołania polece"
"nia `play` będą używać syntezatora, który jest w danym momencie wskazany. Może"
"sz zmienić aktualny syntezator na inny, używając przełącznika `use_synth`."

#: 02.3-Switching-Synths.md:80
msgid "Discovering Synths"
msgstr "Odkrywanie Syntezatorów"

#: 02.3-Switching-Synths.md:82
msgid ""
"To see which synths Sonic Pi has for you to play with take a look at the Synth"
"s option in the far left vertical menu (above Fx). There are over 20 to choose"
" from. Here are a few of my favourites:"
msgstr ""
"Aby zobaczyć, jakie syntezatory Sonic Pi ma dla Ciebie do zabawy, zerknij na o"
"pcję Synths w lewym dolnym rogu (obok Fx). Znajdziesz tam ponad 20 do wyboru. "
"Oto kilka moich ulubionych:"

#: 02.3-Switching-Synths.md:86
msgid "`:prophet`"
msgstr "`:prophet`"

#: 02.3-Switching-Synths.md:87
msgid "`:dsaw`"
msgstr "`:dsaw`"

#: 02.3-Switching-Synths.md:88
msgid "`:fm`"
msgstr "`:fm`"

#: 02.3-Switching-Synths.md:89
msgid "`:tb303`"
msgstr "`:tb303`"

#: 02.3-Switching-Synths.md:90
msgid "`:pulse`"
msgstr "`:pulse`"

#: 02.3-Switching-Synths.md:92
msgid ""
"Now play around with *switching synths during your music*. Have fun combining "
"synths to make new sounds as well as using different synths for different sect"
"ions of your music."
msgstr ""
"Teraz pobaw się, *zmieniając syntezatory, gdy Twoja muzyka wciąż gra*. Próbuj "
"bawić się, łącząc ze sobą różne dźwięki, aby tworzyć nowe brzmienia, jak równi"
"eż używając różnych syntezatorów w różnych sekcjach Twojego utworu."

#: 02.4-Durations-with-Envelopes.md:1
msgid "2.4 Duration with Envelopes"
msgstr "2.4 Czas trwania obwiedni dźwięku"

#: 02.4-Durations-with-Envelopes.md:3
msgid "Duration with Envelopes"
msgstr "Czas trwania obwiedni dźwięku"

#: 02.4-Durations-with-Envelopes.md:5
msgid ""
"In an earlier section, we looked at how we can use the `sleep` command to cont"
"rol when to trigger our sounds. However, we haven't yet been able to control t"
"he duration of our sounds."
msgstr ""
"W poprzedniej sekcji zobaczyliśmy, w jaki sposób możemy używać polecenia  `sle"
"ep`, aby kontrolować, kiedy dźwięki zaczynają grać. Nie wiemy jednak jeszcze, "
"w jaki sposób kontrolować długość trwania naszych dźwięków."

#: 02.4-Durations-with-Envelopes.md:9
msgid ""
"In order to give us a simple, yet powerful means of *controlling the duration*"
" of our sounds, Sonic Pi provides the notion of an *ADSR amplitude envelope* ("
"we'll cover what ADSR means later in this section). An amplitude envelope offe"
"rs two useful aspects of control:"
msgstr ""
"Aby móc korzystać z prostej, ale jakże potężnej możliwości *kontrolowania dług"
"ości trwania* naszych dźwięków, Sonic Pi udostępnia pojęcie *obwiedni dźwięku "
"dla amplitudy ADSR* (czym jest ADSR dowiesz się za chwilę w kolejnych sekcjach"
" tego rozdziału). Obwiednia amplitudy udostępnia dwa przydatne aspekty kontrol"
"i:"

#: 02.4-Durations-with-Envelopes.md:14
msgid "control over the duration of a sound"
msgstr "kontrolę nad długością trwania dźwięku"

#: 02.4-Durations-with-Envelopes.md:15
msgid "control over the amplitude of a sound"
msgstr "kontrolę poziomu głośności (amplitudy) dźwięku"

#: 02.4-Durations-with-Envelopes.md:17
msgid "Duration"
msgstr "Długość trwania dźwięku (ang. Duration)"

#: 02.4-Durations-with-Envelopes.md:19
msgid ""
"The duration is the length the sound lasts for. A longer duration means that y"
"ou hear the sound for longer. Sonic Pi's sounds all have a controllable amplit"
"ude envelope, and the total duration of that envelope is the duration of the s"
"ound. Therefore, by controlling the envelope you control the duration."
msgstr ""
"Długość trwania mówi o tym, jak długo słychać dany dźwięk. Im długość trwania "
"jest większa, tym dłużej słyszysz dźwięk. Wszystkie dźwięki w Sonic Pi posiada"
"ją kontrolowalną obwiednię amplitudy, a całkowita długości trwania tej obwiedn"
"i   to długość trwania dźwięku. Dlatego też kontrolując obwiednię, kontrolujes"
"z długość trwania całego dźwięku."

#: 02.4-Durations-with-Envelopes.md:27
msgid ""
"The ADSR envelope not only controls duration, it also gives you *fine control "
"over the amplitude of the sound*. All audible sounds start and end silent and "
"contain some non-silent part in-between. Envelopes allow you to slide and hold"
" the amplitude of non-silent parts of the sound. It's like giving someone inst"
"ructions on how to turn up and down the volume of a guitar amplifier. For exam"
"ple you might ask someone to \"start at silence, slowly move up to full volume,"
" hold it for a bit, then quickly fall back to silence.\" Sonic Pi allows you to"
" program exactly this behaviour with envelopes."
msgstr ""
"Obwiednia ADSR kontroluje nie tylko długość trwania, lecz pozwala Ci również n"
"a *precyzyjną kontrolę amplitudy dźwięku*. Wszystkie dźwięki zaczynają się i k"
"ończą ciszą. Pomiędzy tymi ciszami jest moment, podczas którego słychać dźwięk"
". Obwiednie pozwalają Ci przesuwać i kontrolować głośność tej części, w której"
" słychać dźwięk. Jest to analogiczne do sytuacji, w której powiedziałbyś komuś"
", kiedy powinien zwiększać i zmniejszać głośność  wzmacniacza gitarowego. Na p"
"rzykład - możesz poprosić kogoś \"zacznij od ciszy, potem powoli zwiększaj pozi"
"om głośności, utrzymaj go na tym poziomie przez chwilę, po czym szybko wycisz\""
". Sonic Pi pozwala Ci na zaprogramowanie tego za pomocą obwiedni."

#: 02.4-Durations-with-Envelopes.md:37
msgid ""
"Just to recap, as we have seen before, an amplitude of 0 is silence and an amp"
"litude of 1 is normal volume."
msgstr ""
"Jak widzieliśmy już w poprzedniej sekcji samouczka, amplituda o wartości 0 to "
"cisza, natomiast amplituda o wartości 1 to głośność normalna."

#: 02.4-Durations-with-Envelopes.md:40
msgid "Now, let us look at each of the parts of the envelopes in turn."
msgstr "A teraz przyjrzyjmy się kolejno każdej ze składowych obwiedni."

#: 02.4-Durations-with-Envelopes.md:42
msgid "Release Phase"
msgstr "Faza zanikania (z ang. Release Phase)"

#: 02.4-Durations-with-Envelopes.md:44
msgid ""
"The only part of the envelope that's used by default is the release time. This"
" is the time it takes for the synth's sound to fade out. All synths have a rel"
"ease time of 1 which means that by default they have a duration of 1 beat (whi"
"ch at the default BPM of 60 is 1 second):"
msgstr ""
"Jedyną częścią obwiedni dźwięku, która jest domyślnie używana, to faza zwolnie"
"nia (release). Odpowiada ona za czas, podczas którego następuje wyciszenie dźw"
"ięku.  Domyślnie wszystkie syntezatory posiadają czas zanikania amplitudy równ"
"y 1. Oznacza to, że trwa to 1 uderzenie (przy domyślnej wartości BPM jest to 1"
" sekunda):"

#: 02.4-Durations-with-Envelopes.md:53
msgid ""
"The note will be audible for 1 second. Go ahead and time it :-) This is short "
"hand for the longer more explicit version:"
msgstr ""
"Nuta będzie odtwarzana przez 1 sekundę. Weź do ręki stoper i sprawdź :-) Jest "
"to skrót dla dłuższej, bardziej dokładnej wersji:"

#: 02.4-Durations-with-Envelopes.md:56
#, no-wrap
msgid "play 70, release: 1"
msgstr "play 70, release: 1"

#: 02.4-Durations-with-Envelopes.md:60
msgid ""
"Notice how this sounds exactly the same (the sound lasts for one second). Howe"
"ver, it's now very easy to change the duration by modifying the value of the `"
"release:` opt:"
msgstr ""
"Zauważ, że brzmienie jest dokładnie takie samo (dźwięk trwa przez jedną sekund"
"ę). Jednakże teraz bardzo łatwo możemy zmienić czas trwania przez zmianę warto"
"ści opcji `release`:"

#: 02.4-Durations-with-Envelopes.md:64
#, no-wrap
msgid "play 60, release: 2"
msgstr "play 60, release: 2"

#: 02.4-Durations-with-Envelopes.md:68
msgid ""
"We can make the synth sound for a very short amount of time by using a very sm"
"all release time:"
msgstr ""
"Możemy też sprawić, aby syntezator brzmiał przez bardzo krótką chwilę. Wystarc"
"zy użyć bardzo małej wartości dla czasu zanikania amplitudy:"

#: 02.4-Durations-with-Envelopes.md:71
#, no-wrap
msgid "play 60, release: 0.2"
msgstr "play 60, release: 0.2"

#: 02.4-Durations-with-Envelopes.md:75
msgid ""
"The duration of the release of the sound is called the *release phase* and by "
"default is a linear transition (i.e. a straight line). The following diagram i"
"llustrates this transition:"
msgstr ""
"Czas, podczas którego zmniejsza się głośność dźwięku, jest to tak zwana *faza "
"zanikania (ang. release phase)* i domyślnie jest to przejście liniowe (tzn. ob"
"niżające się w linii prostej). Poniższy diagram ilustruje to przejście:"

#: 02.4-Durations-with-Envelopes.md:79
msgid "![release envelope](../images/tutorial/env-release.png)"
msgstr "![release envelope](../images/tutorial/env-release.png)"

#: 02.4-Durations-with-Envelopes.md:81
msgid ""
"The vertical line at the far left of the diagram shows that the sound starts a"
"t 0 amplitude, but goes up to full amplitude immediately (this is the attack p"
"hase which we'll cover next). Once at full amplitude it then moves in a straig"
"ht line down to zero taking the amount of time specified by `release:`. *Longe"
"r release times produce longer synth fade outs.*"
msgstr ""
"Pionowa linia po lewej stronie diagramu pokazuje, że dźwięk zaczyna się z ampl"
"itudą równą 0, ale osiąga pełną głośność momentalnie (jest to faza narastania,"
" omówimy ją za chwilę). Gdy pełna głośność zostanie już osiągnięta, następuje "
"zmniejszanie głośności po linii prostej aż do wartości zero i zajmuje to tyle "
"czasu, ile zostało ustawione za pomocą opcji zanikania `release:`. *Im czas za"
"nikania jest dłuższy, tym dłuższy będzie czas wyciszania dźwięku syntezatora.*"

#: 02.4-Durations-with-Envelopes.md:88
msgid ""
"You can therefore change the duration of your sound by changing the release ti"
"me. Have a play adding release times to your music."
msgstr ""
"Możesz zatem zmieniać długość trwania Twoich dźwięków, zmieniając czas trwania"
" fazy zanikania. Spróbuj teraz pobawić się, dodając do Twojej muzyki różne cza"
"sy dla fazy zanikania."

#: 02.4-Durations-with-Envelopes.md:91
msgid "Attack Phase"
msgstr "Faza narastania (z ang. Attack Phase)"

#: 02.4-Durations-with-Envelopes.md:93
msgid ""
"By default, the *attack phase* is 0 for all synths which means they move from "
"0 amplitude to 1 immediately. This gives the synth an initial percussive sound"
". However, you may wish to fade your sound in. This can be achieved with the `"
"attack:` opt. Try fading in some sounds:"
msgstr ""
"Domyślnie faza ataku jest równa 0 dla wszystkich syntezatorów. Oznacza to, że "
"przejście od amplitudy 0 do amplitudy 1 jest natychmiastowe. Nadaje to synteza"
"torowi perkusyjne brzmienie na początku. Mimo to może się zdarzyć, że będziesz"
" chciał, aby Twój dźwięk zaczynał brzmieć stopniowo. Aby to zrobić, wystarczy "
"wykorzystać opcję 'attack:'. Spróbuj użyć takiego stopniowego wejścia w kilku "
"różnych dźwiękach:"

#: 02.4-Durations-with-Envelopes.md:98
#, no-wrap
msgid ""
"play 60, attack: 2\n"
"sleep 3\n"
"play 65, attack: 0.5"
msgstr ""
"play 60, attack: 2\n"
"sleep 3\n"
"play 65, attack: 0.5"

#: 02.4-Durations-with-Envelopes.md:104
msgid ""
"You may use multiple opts at the same time. For example for a short attack and"
" a long release try:"
msgstr ""
"Zauważ, że możesz używać wielu opcji w tym samym czasie. Na przykład dla krótk"
"iej fazy ataku i długiej fazy zanikania spróbuj napisać i uruchomić coś takieg"
"o:"

#: 02.4-Durations-with-Envelopes.md:107
#, no-wrap
msgid "play 60, attack: 0.7, release: 4"
msgstr "play 60, attack: 0.7, release: 4"

#: 02.4-Durations-with-Envelopes.md:111
msgid ""
"This short attack and long release envelope is illustrated in the following di"
"agram:"
msgstr ""
"Taka obwiednia z krótką fazą ataku i długą zanikania została zilustrowana na p"
"oniższym rysunku:"

#: 02.4-Durations-with-Envelopes.md:114
msgid "![attack release envelope](../images/tutorial/env-attack-release.png)"
msgstr "![attack release envelope](../images/tutorial/env-attack-release.png)"

#: 02.4-Durations-with-Envelopes.md:116
msgid ""
"Of course, you may switch things around. Try a long attack and a short release"
":"
msgstr ""
"Oczywiście możesz zmieniać opcje według swoich upodobań. Spróbuj teraz długiej"
" fazy ataku i krótkiej fazy zanikania:"

#: 02.4-Durations-with-Envelopes.md:119
#, no-wrap
msgid "play 60, attack: 4, release: 0.7"
msgstr "play 60, attack: 4, release: 0.7"

#: 02.4-Durations-with-Envelopes.md:123
msgid ""
"![long attack short release envelope](../images/tutorial/env-long-attack-short"
"-release.png)"
msgstr ""
"![long attack short release envelope](../images/tutorial/env-long-attack-short"
"-release.png)"

#: 02.4-Durations-with-Envelopes.md:125
msgid ""
"Finally, you can also have both short attack and release times for shorter sou"
"nds."
msgstr ""
"Na koniec możesz też spróbować ustawić obie wartości dla czasu narastania i za"
"nikania na małe wartości, aby uzyskać krótsze dźwięki."

#: 02.4-Durations-with-Envelopes.md:128
#, no-wrap
msgid "play 60, attack: 0.5, release: 0.5"
msgstr "play 60, attack: 0.5, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:132
msgid ""
"![short attack short release envelope](../images/tutorial/env-short-attack-sho"
"rt-release.png)"
msgstr ""
"![short attack short release envelope](../images/tutorial/env-short-attack-sho"
"rt-release.png)"

#: 02.4-Durations-with-Envelopes.md:134
msgid "Sustain Phase"
msgstr "Faza podtrzymania (z ang. Sustain Phase)"

#: 02.4-Durations-with-Envelopes.md:136
msgid ""
"In addition to specifying attack and release times, you may also specify a sus"
"tain time to control the *sustain phase*. This is the time for which the sound"
" is maintained at full amplitude between the attack and release phases."
msgstr ""
"Oprócz możliwości ustawiania czasu narastania i czasu zanikania dźwięku, możes"
"z również kontrolować fazę podtrzymania (z ang. Sustain Phase). Jest to moment"
", w którym dźwięk jest utrzymany na pełnej amplitudzie pomiędzy fazami narasta"
"nia i zanikania."

#: 02.4-Durations-with-Envelopes.md:141
#, no-wrap
msgid "play 60, attack: 0.3, sustain: 1, release: 1"
msgstr "play 60, attack: 0.3, sustain: 1, release: 1"

#: 02.4-Durations-with-Envelopes.md:145
msgid "![ASR envelope](../images/tutorial/env-attack-sustain-release.png)"
msgstr "![ASR envelope](../images/tutorial/env-attack-sustain-release.png)"

#: 02.4-Durations-with-Envelopes.md:147
msgid ""
"The sustain time is useful for important sounds you wish to give full presence"
" in the mix before entering an optional release phase. Of course, it's totally"
" valid to set both the `attack:` and `release:` opts to 0 and just use the sus"
"tain to have absolutely no fade in or fade out to the sound. However, be warne"
"d, a release of 0 can produce clicks in the audio and it's often better to use"
" a very small value such as 0.2."
msgstr ""
"Czas podtrzymania (ang. sustain) jest bardzo przydatny dla ważnych dźwięków, k"
"tórym chciałbyś dać pełną obecność w miksie tuż przed wejściem w opcjonalną fa"
"zę zanikania. Oczywiście całkowicie dopuszczalne jest ustawienie obu opcji, za"
"równo fazy ataku jak i fazy zanikania na wartość 0, a także użycie tylko fazy "
"podtrzymania, żeby nie mieć absolutnie żadnej fazy wejścia lub wyjścia dla dan"
"ego dźwięku. Bądź jednak ostrożny i wiedz, że ustawienie fazy zanikania na 0 m"
"oże spowodować dziwne kliki w dźwiękach i bardzo często zamiast tego dużo lepi"
"ej jest użyć bardzo małej wartości, np. 0.2."

#: 02.4-Durations-with-Envelopes.md:154
msgid "Decay Phase"
msgstr "Faza opadania (z ang. Decay Phase)"

#: 02.4-Durations-with-Envelopes.md:156
msgid ""
"For an extra level of control, you can also specify a decay time. This is a ph"
"ase of the envelope that fits between the attack and sustain phases and specif"
"ies a time where the amplitude will drop from the `attack_level:` to the `deca"
"y_level:` (which unless you explicitly set it will be set to the `sustain_leve"
"l:`). By default, the `decay:` opt is 0 and both the attack and sustain levels"
" are 1 so you'll need to specify them for the decay time to have any effect:"
msgstr ""
"Na sam koniec: dla momentów, gdzie potrzebujesz dodatkowego poziomu kontroli, "
"masz możliwość skorzystania z fazy opadania (ang. decay). Jest to taki moment "
"obwiedni dźwięku, który znajduje się pomiędzy fazą ataku a fazą podtrzymania i"
" określa moment, w którym amplituda spada z poziomu ataku `attack_level` do po"
"ziomu podtrzymania `sustain_level`. Domyślnym argumentem dla fazy opadania jes"
"t 0, natomiast poziomy ataku i podtrzymania posiadają domyślną wartość 1. W zw"
"iązku z tym musisz określić dla nich czas opadania, aby uzyskać jakikolwiek ef"
"ekt:"

#: 02.4-Durations-with-Envelopes.md:164
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, sustain_level: 0.4, sustain"
": 1, release: 0.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, sustain_level: 0.4, sustain"
": 1, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:168
msgid "![ADSR envelope](../images/tutorial/env-attack-decay-sustain-release.png)"
msgstr "![ADSR envelope](../images/tutorial/env-attack-decay-sustain-release.png)"

#: 02.4-Durations-with-Envelopes.md:170
msgid "Decay Level"
msgstr "Poziom opadania"

#: 02.4-Durations-with-Envelopes.md:172
msgid ""
"One last trick is that although the `decay_level:` opt defaults to be the same"
" value as `sustain_level:` you can explicitly set them to different values for"
" full control over the envelope. This allows you to to create envelopes such a"
"s the following:"
msgstr ""
"Ostatnia sztuczka polega na tym, że pomimo iż domyślna wartość opcji `decay_le"
"vel:` jest taka sama jak wartość opcji `sustain_level:`, to możesz bezpośredni"
"o zmienić jej wartość, aby mieć pełną kontrolę nad całą obwiednią dźwięku. Poz"
"wala Ci to na tworzenie obwiedni takich, jak poniższa:"

#: 02.4-Durations-with-Envelopes.md:177
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, decay_level: 0.3, sustain: "
"1, sustain_level: 0.4, release: 0.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 1, decay: 0.2, decay_level: 0.3, sustain: "
"1, sustain_level: 0.4, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:181
msgid "![ASR envelope](../images/tutorial/env-decay-level.png)"
msgstr "![ASR envelope](../images/tutorial/env-decay-level.png)"

#: 02.4-Durations-with-Envelopes.md:183
msgid ""
"It's also possible to set the `decay_level:` to be higher than `sustain_level:"
"`:"
msgstr ""
"Jest również możliwe ustawienie opcji `decay_level:` na wartość wyższą niż poz"
"iom `sustain_level:`:"

#: 02.4-Durations-with-Envelopes.md:185
#, no-wrap
msgid ""
"play 60, attack: 0.1, attack_level: 0.1, decay: 0.2, decay_level: 1, sustain: "
"0.5, sustain_level: 0.8, release: 1.5"
msgstr ""
"play 60, attack: 0.1, attack_level: 0.1, decay: 0.2, decay_level: 1, sustain: "
"0.5, sustain_level: 0.8, release: 1.5"

#: 02.4-Durations-with-Envelopes.md:189
msgid "![ASR envelope](../images/tutorial/env-decay-level-2.png)"
msgstr "![ASR envelope](../images/tutorial/env-decay-level-2.png)"

#: 02.4-Durations-with-Envelopes.md:191
msgid "ADSR Envelopes"
msgstr "Obwiednia dźwięku ADSR"

#: 02.4-Durations-with-Envelopes.md:193
msgid "So to summarise, Sonic Pi's ADSR envelopes have the following phases:"
msgstr "Podsumowując, obwiednia dźwięku ADSR w Sonic Pi posiada następujące fazy:"

#: 02.4-Durations-with-Envelopes.md:195
msgid "*attack* - time from 0 amplitude to the `attack_level`,"
msgstr ""
"*attack* - czas narastania amplitudy od wartości 0 do poziomu maksymalnego, kt"
"órego wysokość jest określana przez opcję `attack_level`,"

#: 02.4-Durations-with-Envelopes.md:196
msgid "*decay* - time to move amplitude from `attack_level` to `decay_level`,"
msgstr ""
"*decay* - czas opadania amplitudy od poziomu maksymalnego (`attack_level`) do "
"poziomu opadania (`decay_level`),"

#: 02.4-Durations-with-Envelopes.md:197
msgid "*sustain* - time to move the amplitude from `decay_level` to `sustain_level`,"
msgstr ""
"*sustain* - czas, który jest potrzebny, żeby zmienić poziom głośności dźwięku "
"od wartości określonej przez opcję `decay_level` do wartości określonej przez "
"opcję `sustain_level`,"

#: 02.4-Durations-with-Envelopes.md:198
msgid "*release* - time to move amplitude from `sustain_level` to 0"
msgstr ""
"*release* - czas zanikania amplitudy od poziomu podtrzymania (`sustain_level`)"
" do wartości 0"

#: 02.4-Durations-with-Envelopes.md:200
msgid ""
"It's important to note that the duration of a sound is the summation of the ti"
"mes of each of these phases. Therefore the following sound will have a duratio"
"n of 0.5 + 1 + 2 + 0.5 = 4 beats:"
msgstr ""
"Należy tu zwrócić uwagę na fakt, że całkowita długość trwania dźwięku jest sum"
"ą czasu trwania każdej z faz ustawionych na danym dźwięku. Dlatego też poniższ"
"y dźwięk będzie miał długość 0.5 + 1 + 2 + 0.5 = 4 uderzeń:"

#: 02.4-Durations-with-Envelopes.md:204
#, no-wrap
msgid ""
"play 60, attack: 0.5, attack_level: 1, decay: 1, sustain_level: 0.4, sustain: "
"2, release: 0.5"
msgstr ""
"play 60, attack: 0.5, attack_level: 1, decay: 1, sustain_level: 0.4, sustain: "
"2, release: 0.5"

#: 02.4-Durations-with-Envelopes.md:208
msgid "Now go and have a play adding envelopes to your sounds..."
msgstr ""
"Tyle teorii, teraz zabaw się i spróbuj dodać różne obwiednie dźwięku do Twoich"
" melodii..."

#: 03-Samples.md:1
msgid "3 Samples"
msgstr "3 Sample"

#: 03-Samples.md:3
msgid "Samples"
msgstr "Sample"

#: 03-Samples.md:5
msgid ""
"Another great way to develop your music is to use pre-recorded sounds. In grea"
"t hip-hop tradition, we call these pre-recorded sounds *samples*. So, if you t"
"ake a microphone outside, go and record the gentle sound of rain hitting canva"
"s, you've just created a sample."
msgstr ""
"Innym świetnym sposobem tworzenia Twojej muzyki jest wykorzystanie nagranych w"
"cześniej dźwięków. Technika ta ma swoje korzenie w muzyce hip hop i takie nagr"
"ane wcześniej dźwięki nazywamy *samplami*. Innymi słowy, jeśli weźmiesz mikrof"
"on i nagrasz subtelny dźwięk kropel deszczu uderzających o szybę, to właśnie s"
"tworzyłeś swój pierwszy sampel."

#: 03-Samples.md:10
msgid ""
"Sonic Pi lets you do lots of fun things with samples. Not only does it ship wi"
"th 130 public domain samples ready for you to jam with, it lets you play and m"
"anipulate your own. Let's get to it..."
msgstr ""
"Sonic Pi pozwala Ci robić wiele fajnych rzeczy z samplami. Poza tym, że na pok"
"ładzie jest ponad 90 sampli, które tylko czekają na to, abyś zaczął się nimi b"
"awić, to masz też możliwość manipulowania nimi oraz korzystania z Twoich własn"
"ych. Bierzmy się do zabawy..."

#: 03.1-Triggering-Samples.md:1
msgid "3.1 Triggering Samples"
msgstr "3.1 Uruchamianie Sampli"

#: 03.1-Triggering-Samples.md:3
msgid "Triggering Samples"
msgstr "Uruchamianie Sampli"

#: 03.1-Triggering-Samples.md:5
msgid ""
"Playing beeps is only the beginning. Something that's a lot of fun is triggeri"
"ng pre-recorded samples. Try it:"
msgstr ""
"Granie prostych dźwięków to dopiero początek. Coś, co jest dużo fajniejsze, to"
" uruchamianie nagranych wcześniej sampli. Spróbuj tego:"

#: 03.1-Triggering-Samples.md:8
#, no-wrap
msgid "sample :ambi_lunar_land"
msgstr "sample :ambi_lunar_land"

#: 03.1-Triggering-Samples.md:12
msgid ""
"Sonic Pi includes many samples for you to play with. You can use them just lik"
"e you use the `play` command. To play multiple samples and notes just write th"
"em one after another:"
msgstr ""
"Sonic Pi posiada wiele sampli, których możesz używać do tworzenia swojej muzyk"
"i. Możesz używać ich tak samo, jak używasz polecenia `play'. Aby zagrać kilka "
"sampli i nut, po prostu napisz je jeden po drugim:"

#: 03.1-Triggering-Samples.md:16
#, no-wrap
msgid ""
"play 36\n"
"play 48\n"
"sample :ambi_lunar_land\n"
"sample :ambi_drone"
msgstr ""
"play 36\n"
"play 48\n"
"sample :ambi_lunar_land\n"
"sample :ambi_drone"

#: 03.1-Triggering-Samples.md:23
msgid "If you want to space them out in time, use the `sleep` command:"
msgstr "Jeśli chcesz oddzielić je od siebie, wykorzystaj polecenie `sleep`:"

#: 03.1-Triggering-Samples.md:25
#, no-wrap
msgid ""
"sample :ambi_lunar_land\n"
"sleep 1\n"
"play 48\n"
"sleep 0.5\n"
"play 36\n"
"sample :ambi_drone\n"
"sleep 1\n"
"play 36"
msgstr ""
"sample :ambi_lunar_land\n"
"sleep 1\n"
"play 48\n"
"sleep 0.5\n"
"play 36\n"
"sample :ambi_drone\n"
"sleep 1\n"
"play 36"

#: 03.1-Triggering-Samples.md:36
msgid ""
"Notice how Sonic Pi doesn't wait for a sound to finish before starting the nex"
"t sound. The `sleep` command only describes the separation of the *triggering*"
" of the sounds. This allows you to easily layer sounds together creating inter"
"esting overlap effects. Later in this tutorial we'll take a look at controllin"
"g the *duration* of sounds with envelopes."
msgstr ""
"Zauważ, że Sonic Pi nie czeka, aż dźwięk przestanie grać, zanim zacznie grać k"
"olejny dźwięk. Polecenie `sleep` tylko opisuje rozdzielenie *wyzwalania* poszc"
"zególnych dźwięków. Takie podejście pozwala na łatwe nawarstwianie kolejnych d"
"źwięków, które razem mogą tworzyć ciekawe efekty nakładania się na siebie. W d"
"alszej części tego samouczka pokażemy, w jaki sposób można kontrolować długość"
" trwania dźwięków przy użyciu obwiedni."

#: 03.1-Triggering-Samples.md:44
msgid "Discovering Samples"
msgstr "Odkrywanie Sampli"

#: 03.1-Triggering-Samples.md:46
msgid ""
"There are two ways to discover the range of samples provided in Sonic Pi. Firs"
"t, you can use this help system. Click on Samples in the far left vertical men"
"u, choose your category and then you'll see a list of available sounds."
msgstr ""
"Są dwa sposoby na odkrywanie wielu sampli, które są dostępne w Sonic Pi. Po pi"
"erwsze, możesz korzystać z systemu pomocy. Kliknij na sekcję Sample w lewym do"
"lnym menu, wybierz kategorię, a zobaczysz listę dostępnych dźwięków."

#: 03.1-Triggering-Samples.md:51
msgid ""
"Alternatively you can use the *auto-completion system*. Simply type the start "
"of a sample group such as: `sample :ambi_` and you'll see a drop-down of sampl"
"e names appear for you to select. Try the following category prefixes:"
msgstr ""
"Alternatywnie możesz skorzystać z *systemu autopodpowiadania*. Wystarczy, że w"
"piszesz początek wybranej grupy sampli, np. `sample :ambi_`, a Twoim oczom uka"
"że się rozwijana lista sampli do wyboru. Wypróbuj następujące prefiksy kategor"
"ii:"

#: 03.1-Triggering-Samples.md:56
msgid "`:ambi_`"
msgstr "`:ambi_`"

#: 03.1-Triggering-Samples.md:57
msgid "`:bass_`"
msgstr "`:bass_`"

#: 03.1-Triggering-Samples.md:58
msgid "`:elec_`"
msgstr "`:elec_`"

#: 03.1-Triggering-Samples.md:59
msgid "`:perc_`"
msgstr "`:perc_`"

#: 03.1-Triggering-Samples.md:60
msgid "`:guit_`"
msgstr "`:guit_`"

#: 03.1-Triggering-Samples.md:61
msgid "`:drum_`"
msgstr "`:drum_`"

#: 03.1-Triggering-Samples.md:62
msgid "`:misc_`"
msgstr "`:misc_`"

#: 03.1-Triggering-Samples.md:63
msgid "`:bd_`"
msgstr "`:bd_`"

#: 03.1-Triggering-Samples.md:65
msgid "Now start mixing samples into your compositions!"
msgstr "A teraz zacznij wplatać sample w Twoje własne kompozycje!"

#: 03.2-Sample-Params.md:1
msgid "3.2 Sample Parameters"
msgstr "3.2 Parametry Sampli"

#: 03.2-Sample-Params.md:3
msgid "Sample Parameters: Amp and Pan"
msgstr "Parametry Sampli: Amp i Pan"

#: 03.2-Sample-Params.md:5
msgid ""
"As we saw with synths, we can easily control our sounds with parameters. Sampl"
"es support exactly the same parameterisation mechanism. Let's revisit our frie"
"nds `amp:` and `pan:`."
msgstr ""
"Tak samo jak w przypadku Syntezatorów, możemy łatwo kontrolować nasze dźwięki "
"za pomocą parametrów. Sample wspierają taki sam mechanizm parametrów. Przyjrzy"
"jmy się ponownie naszym kolegom `amp:` i `pan:`."

#: 03.2-Sample-Params.md:9
msgid "Amping samples"
msgstr "Zmiana głośności sampli"

#: 03.2-Sample-Params.md:11
msgid ""
"You can change the amplitude of samples with exactly the same approach you use"
"d for synths:"
msgstr ""
"Możesz zmieniać głośność sampli dokładnie w taki sam sposób, jakiego używałeś "
"dla syntezatorów:"

#: 03.2-Sample-Params.md:14
#, no-wrap
msgid "sample :ambi_lunar_land, amp: 0.5"
msgstr "sample :ambi_lunar_land, amp: 0.5"

#: 03.2-Sample-Params.md:18
msgid "Panning samples"
msgstr "Przesuwanie sampli na różne kanały"

#: 03.2-Sample-Params.md:20
msgid ""
"We're also able to use the `pan:` parameter on samples. For example, here's ho"
"w we'd play the amen break in the left ear and then half way through play it a"
"gain through the right ear:"
msgstr ""
"Możemy również używać parametru `pan:` dla sampli. Na przykład: oto, jak możem"
"y zagrać breakbeat amen, aby brzmiał tylko w lewym głośniku, a potem w połowie"
" czasu, żeby zaczął grać też w prawym głośniku:"

#: 03.2-Sample-Params.md:24
#, no-wrap
msgid ""
"sample :loop_amen, pan: -1\n"
"sleep 0.877\n"
"sample :loop_amen, pan: 1"
msgstr ""
"sample :loop_amen, pan: -1\n"
"sleep 0.877\n"
"sample :loop_amen, pan: 1"

#: 03.2-Sample-Params.md:30
msgid "Note that 0.877 is half the duration of the `:loop_amen` sample in seconds."
msgstr ""
"Zauważ, że liczba 0.877 jest połową czasu trwania sampla `:loop_amen` wyrażoną"
" w sekundach."

#: 03.2-Sample-Params.md:33
msgid ""
"Finally, note that if you set some synth defaults with `use_synth_defaults` (w"
"hich we will discuss later), these will be ignored by `sample`."
msgstr ""
"Na koniec należy zauważyć, że jeśli ustawisz pewne wartości domyślne syntezato"
"rów za pomocą parametru `use_synth_defaults` (zostanie on omówiony później), t"
"o będą one ignorowane przez polecenie `sample`."

#: 03.3-Stretching-Samples.md:1
msgid "3.3 Stretching Samples"
msgstr "3.3 Rozciąganie Sampli"

#: 03.3-Stretching-Samples.md:3
msgid "Stretching Samples"
msgstr "Rozciąganie Sampli"

#: 03.3-Stretching-Samples.md:5
msgid ""
"Now that we can play a variety of synths and samples to create some music, it'"
"s time to learn how to modify both the synths and samples to make the music ev"
"en more unique and interesting. First, let's explore the ability to *stretch* "
"and *squash* samples."
msgstr ""
"Teraz, gdy już umiemy grać za pomocą różnorodnych syntezatorów i sampli, przys"
"zedł czas, aby nauczyć się, w jaki sposób można modyfikować syntezatory i samp"
"le, aby sprawić, by muzyka była jeszcze bardziej unikalna i interesująca. Na p"
"oczątek poznajmy możliwość rozciągania (*stretch*) i ściskania (*squash*) samp"
"li."

#: 03.3-Stretching-Samples.md:10
msgid "Sample Representation"
msgstr "Reprezentacja Sampla"

#: 03.3-Stretching-Samples.md:12
msgid ""
"Samples are pre-recorded sounds stored as numbers which represent how to move "
"the speaker cone to reproduce the sound. The speaker cone can move in and out,"
" and so the numbers just need to represent how far in and out the cone needs t"
"o be for each moment in time. To be able to faithfully reproduce a recorded so"
"und the sample typically needs to store many thousands of numbers per second! "
"Sonic Pi takes this list of numbers and feeds them at the right speed to move "
"your computer's speaker in and out in just the right way to reproduce the soun"
"d. However, it's also fun to change the speed with which the numbers are fed t"
"o the speaker to change the sound."
msgstr ""
"Sample to nagrane dźwięki, które są przechowywane niczym liczby, które mówią o"
" tym, jak poruszyć stożek głośnika, by zreprodukować dany dźwięk. Stożek głośn"
"ika może poruszać się do środka i na zewnątrz, tak samo liczby muszą jedynie p"
"rzedstawiać, jak daleko do środka lub na zewnątrz powinien znajdować się stoże"
"k głośnika w danym momencie. Aby móc wiernie odwzorować nagrany dźwięk sampla,"
" zazwyczaj potrzeba do tego wiele tysięcy liczb na sekundę! Sonic Pi bierze tę"
" listę liczb i zasila nimi głośniki z odpowiednią prędkością tak, aby głośniki"
" Twojego komputera poruszały się do przodu i do tyłu w taki właśnie sposób, by"
" zreprodukować dany dźwięk. Mimo to, całkiem fajnie jest zmieniać prędkość, z "
"jaką te liczby są przekazywane do głośnika, aby w ten sposób zmieniać brzmieni"
"e."

#: 03.3-Stretching-Samples.md:23
msgid "Changing Rate"
msgstr "Zmiana tempa"

#: 03.3-Stretching-Samples.md:25
msgid ""
"Let's play with one of the ambient sounds: `:ambi_choir`. To play it with the "
"default rate, you can pass a `rate:` opt to `sample`:"
msgstr ""
"Pobawmy się jednym z dźwięków z [gatunku ambient](https://pl.wikipedia.org/wik"
"i/Ambient): `:ambi_choir`. Aby zagrać go w domyślnym tempie, możesz przekazać "
"opcję `rate:` do polecenia sample:"

#: 03.3-Stretching-Samples.md:28
#, no-wrap
msgid "sample :ambi_choir, rate: 1"
msgstr "sample :ambi_choir, rate: 1"

#: 03.3-Stretching-Samples.md:32
msgid ""
"This plays it at normal rate (1), so nothing special yet. However, we're free "
"to change that number to something else. How about `0.5`:"
msgstr ""
"Takie polecenie sprawi, że sampel zostanie zagrany w normalnym tempie (1), wię"
"c póki co nic specjalnego się nie dzieje. Nic jednak nie stoi nam na przeszkod"
"zie, abyśmy zmienili tę liczbę na coś innego. Co powiesz na wartość `0.5`:"

#: 03.3-Stretching-Samples.md:35
#, no-wrap
msgid "sample :ambi_choir, rate: 0.5"
msgstr "sample :ambi_choir, rate: 0.5"

#: 03.3-Stretching-Samples.md:39
msgid ""
"Woah! What's going on here? Well, two things. Firstly, the sample takes twice "
"as long to play, secondly the sound is an octave lower. Let's explore these th"
"ings in a little more detail."
msgstr ""
"Łał! Co się tutaj dzieje? Otóż dwie rzeczy. Po pierwsze, odtworzenie naszego s"
"ampla zajmuje drugie tyle czasu. Po drugie, dźwięk jest niższy o oktawę. Przyj"
"rzyjmy się tym dwóm tematom nieco bardziej szczegółowo."

#: 03.3-Stretching-Samples.md:43
msgid "Let's stretch"
msgstr "Rozciągamy"

#: 03.3-Stretching-Samples.md:45
msgid ""
"A sample that's fun to stretch and compress is the Amen Break. At normal rate,"
" we might imagine throwing it into a *drum 'n' bass* track:"
msgstr ""
"Sampel, który jest bardzo fajny do rozciągania i kompresji, to Amen Break. Prz"
"y normalnym tempie, możemy wyobrazić sobie wrzucenie go do utworu *drum 'n' ba"
"ss*:"

#: 03.3-Stretching-Samples.md:48 03.4-Enveloped-Samples.md:17
#: 03.5-Partial-Samples.md:9 A.03-coded-beats.md:33 A.12-sample-slicing.md:22
#, no-wrap
msgid "sample :loop_amen"
msgstr "sample :loop_amen"

#: 03.3-Stretching-Samples.md:52
msgid ""
"However by changing the rate we can switch up genres. Try half speed for *old "
"school hip-hop*:"
msgstr ""
"Jednak gdy zmienimy tempo, możemy bardzo szybko zmienić gatunek. Spróbuj połow"
"y prędkości, aby stworzyć *oldschool'owy hip hop*:"

#: 03.3-Stretching-Samples.md:55 03.5-Partial-Samples.md:16
#, no-wrap
msgid "sample :loop_amen, rate: 0.5"
msgstr "sample :loop_amen, rate: 0.5"

#: 03.3-Stretching-Samples.md:59
msgid "If we speed it up, we enter *jungle* territory:"
msgstr "Jeśli przyśpieszymy, to wejdziemy na terytorium *jungle*:"

#: 03.3-Stretching-Samples.md:61
#, no-wrap
msgid "sample :loop_amen, rate: 1.5"
msgstr "sample :loop_amen, rate: 1.5"

#: 03.3-Stretching-Samples.md:65
msgid ""
"Now for our final party trick - let's see what happens if we use a negative ra"
"te:"
msgstr ""
"A teraz nasz ulubiony trik imprezowy - zobaczmy, co się stanie, jeśli użyjemy "
"ujemnego tempa:"

#: 03.3-Stretching-Samples.md:68
#, no-wrap
msgid "sample :loop_amen, rate: -1"
msgstr "sample :loop_amen, rate: -1"

#: 03.3-Stretching-Samples.md:72
msgid ""
"Woah! It plays it *backwards*! Now try playing with lots of different samples "
"at different rates. Try very fast rates. Try crazy slow rates. See what intere"
"sting sounds you can produce."
msgstr ""
"Łał! Sampel jest odtwarzany *od tyłu*! A teraz spróbuj sam pokombinować z różn"
"ymi samplami, ustawiając im różne tempa. Spróbuj bardzo szybkich temp. Spróbuj"
" niewiarygodnie niskich temp. Sprawdź, jak różne i interesujące dźwięki możesz"
" stworzyć."

#: 03.3-Stretching-Samples.md:76
msgid "A Simple Explanation of Sample Rate"
msgstr "Proste Wyjaśnienie Częstotliwości Próbkowania"

#: 03.3-Stretching-Samples.md:78
msgid ""
"A useful way to think of samples is as springs. Playback rate is like squashin"
"g and stretching the spring. If you play the sample at rate 2, you're *squashi"
"ng the spring* to half its normal length. The sample therefore takes half the "
"amount of time to play as it's shorter. If you play the sample at half rate, y"
"ou're *stretching the spring* to double its length. The sample therefore takes"
" twice the amount of time to play as it's longer. The more you squash (higher "
"rate), the shorter it gets, the more you stretch (lower rate), the longer it g"
"ets."
msgstr ""
"Przydatnym sposobem myślenia o samplach jest myślenie o nich jak o sprężynkach"
". Z tempem (szybkością) odtwarzania jest tak jak ze ściskaniem i rozciąganiem "
"sprężyny. Zagranie sampla w tempie równym 2 spowoduje, że *ściśniesz sprężynę*"
" do połowy jej normalnej długości. Dlatego też zagranie takiego sampla zajmie "
"o połowę mniej czasu. Jeśli zagrasz sampel w tempie równym połowę normalnego, "
"to wtedy *rozciągasz sprężynę tak, że podwaja swoją długość*. W takim przypadk"
"u zagranie całego sampla zajmie dwa razy więcej czasu. Im bardziej ściśniesz s"
"prężynę (wyższe tempo), tym stanie się krótsza. Analogicznie, im bardziej rozc"
"iągniesz (niższe tempo), tym będzie dłuższa."

#: 03.3-Stretching-Samples.md:87
msgid ""
"Compressing a spring increases its density (the number of coils per cm) - this"
" is similar to the sample sounding *higher pitched*. Stretching the spring dec"
"reases its density and is similar to the sound having a *lower pitch*."
msgstr ""
"Ściskanie sprężyny zwiększa jej gęstość (liczba zwojów na cm) - jest to podobn"
"e do tego, gdy sampel brzmi na *wyższym poziomie* (pitch). Rozciąganie zmniejs"
"za gęstość i jest podobne to dźwięku posiadającego *niższy poziom* (pitch)."

#: 03.3-Stretching-Samples.md:93
msgid "The Maths Behind Sample Rate"
msgstr "Matematyka Stojąca Za Częstotliwością Próbkowania"

#: 03.3-Stretching-Samples.md:95
msgid ""
"(This section is provided for those that are interested in the details. Please"
" feel free to skip it...)"
msgstr ""
"(Ta sekcja została przygotowana dla tych osób, które są zainteresowane szczegó"
"łami. Jeśli nie jesteś, możesz ją po prostu pominąć...)"

#: 03.3-Stretching-Samples.md:98
msgid ""
"As we saw above, a sample is represented by a big long list of numbers represe"
"nting where the speaker should be through time. We can take this list of numbe"
"rs and use it to draw a graph which would look similar to this:"
msgstr ""
"Jak zauważyliśmy już powyżej, sampel jest reprezentowany przez wielką, długą l"
"istę liczb, które definiują to, w jakiej pozycji powinien znajdować się głośni"
"k w danym momencie czasu. Możemy wziąć te liczby i wykorzystać je do narysowan"
"ia wykresu graficznego, który mógłby wyglądać bardzo podobnie do tego:"

#: 03.3-Stretching-Samples.md:103
msgid "![sample graph](../images/tutorial/sample.png)"
msgstr "![sample graph](../images/tutorial/sample.png)"

#: 03.3-Stretching-Samples.md:105
msgid ""
"You might have seen pictures like this before. It's called the *waveform* of a"
" sample. It's just a graph of numbers. Typically a waveform like this will hav"
"e 44100 points of data per second (this is due to the Nyquist-Shannon sampling"
" theorem). So, if the sample lasts for 2 seconds, the waveform will be represe"
"nted by 88200 numbers which we would feed to the speaker at a rate of 44100 po"
"ints per second. Of course, we could feed it at double rate which would be 882"
"00 points per second. This would therefore take only 1 second to play back. We"
" could also play it back at half rate which would be 22050 points per second t"
"aking 4 seconds to play back."
msgstr ""
"Być może widziałeś już podobne obrazki. Nazywa się ją *przebiegiem fali* sampl"
"a. Jest to nic innego, jak tylko wykres prezentujący liczby. Zazwyczaj przebie"
"g fali takiej jak ta będzie miał 44100 punktów z danymi na sekundę (jest związ"
"ane z twierdzeniem Kotelnikowa-Shanona). Więc jeśli sampel trwa przez 2 sekund"
"y, to *przebieg fali* będzie reprezentowany przez 88200 liczb, które przekażem"
"y do głośnika z prędkością 44100 punktów na sekundę. Odtworzenie tego powinno "
"zatem zająć tylko 1 sekundę. Możemy spróbować również odtworzyć go w tempie o "
"połowę mniejszym, co dałoby wartość 22050 punktów na sekundę i odtworzenie zaj"
"ęłoby 4 sekundy."

#: 03.3-Stretching-Samples.md:116
msgid "The duration of the sample is affected by the playback rate:"
msgstr "Na czas trwania sampli ma wpływ szybkość odtwarzania:"

#: 03.3-Stretching-Samples.md:118
msgid "Doubling the playback rate halves the playback time,"
msgstr "Podwojenie szybkości odtwarzania skraca o połowę czas odtwarzania,"

#: 03.3-Stretching-Samples.md:119
msgid "Halving the playback rate doubles the playback time,"
msgstr "Skrócenie szybkości odtwarzania o połowę podwaja czas odtwarzania,"

#: 03.3-Stretching-Samples.md:120
msgid "Using a playback rate of one fourth quadruples the playback time,"
msgstr ""
"Ustawienie szybkości odtwarzania równej jednej czwartej sprawi, że czas odtwar"
"zania będzie czterokrotnie dłuższy,"

#: 03.3-Stretching-Samples.md:121
msgid "Using a playback rate of 1/10 makes playback last 10 times longer."
msgstr ""
"Ustawienie szybkości odtwarzania na poziomie 1/10 spowoduje, że czas odtwarzan"
"ia zajmie 10 razy dłużej."

#: 03.3-Stretching-Samples.md:123
msgid "We can represent this with the formula:"
msgstr "Możemy przedstawić to za pomocą następującego wzoru:"

#: 03.3-Stretching-Samples.md:125
#, no-wrap
msgid "new_sample_duration = (1 / rate) * sample_duration "
msgstr "nowy_czas_trwania_sampla = (1 / tempo) * czas_trwania_sampla "

#: 03.3-Stretching-Samples.md:129
msgid ""
"Changing the playback rate also affects the pitch of the sample. The frequency"
" or pitch of a waveform is determined by how fast it moves up and down. Our br"
"ains somehow turn fast movement of speakers into high notes and slow movement "
"of speakers into low notes. This is why you can sometimes even see a big bass "
"speaker move as it pumps out super low bass - it's actually moving a lot slowe"
"r in and out than a speaker producing higher notes."
msgstr ""
"Zmiana szybkości odtwarzania wpływa również na wysokość tonu (pitch) sampla. C"
"zęstotliwość lub wysokość tonu, widoczna na fali dźwięku, jest determinowana p"
"rzez to, jak szybko się ona zmienia w górę i w dół. Nasze mózgi w jakiś sposób"
" zmieniają szybkie ruchy głośnika na wysokie nuty oraz wolne ruchy głośników n"
"a niskie nuty. To jest właśnie przyczyną tego, że czasami możesz nawet zobaczy"
"ć ruch dużego głośnika basowego, gdy wydaje on z siebie super niski bas - w za"
"sadzie to porusza się on wtedy znacznie wolniej w tę i z powrotem niż wtedy, g"
"dy głośnik produkuje wyższe dźwięki."

#: 03.3-Stretching-Samples.md:137
msgid ""
"If you take a waveform and squash it it will move up and down more times per s"
"econd. This will make it sound higher pitched. It turns out that doubling the "
"amount of up and down movements (oscillations) doubles the frequency. So, *pla"
"ying your sample at double rate will double the frequency you hear it*. Also, "
"*halving the rate will halve the frequency*. Other rates will affect the frequ"
"ency accordingly."
msgstr ""
"Jeśli weźmie się falę dźwięku i ściśnie się, to wtedy będzie się ona poruszać "
"w górę i w dół więcej razy na sekundę. Spowoduje to, że dany dźwięk będzie mia"
"ł wyższy ton. Oznacza to, że podwojenie ruchów w górę i w dół (oscylacji) zwię"
"ksza częstotliwość dwukrotnie. Podsumowując, *zagranie twojego sampla z podwój"
"ną prędkością spowoduje, że częstotliwość, którą usłyszysz będzie dwa razy wyż"
"sza*. Analogicznie, *obniżenie tempa o połowę spowoduje, że częstotliwość będz"
"ie też niższa o połowę*. Inne wartości tempa będą będą oddziaływać na częstotl"
"iwość odpowiednio."

#: 03.4-Enveloped-Samples.md:1
msgid "3.4 Enveloped Samples"
msgstr "3.4 Opakowane Sample"

#: 03.4-Enveloped-Samples.md:3
msgid "Enveloped Samples"
msgstr "Opakowane Sample"

#: 03.4-Enveloped-Samples.md:5
msgid ""
"It is also possible to modify the *duration* and *amplitude* of a sample using"
" an ADSR envelope. However, this works slightly differently to the ADSR envelo"
"pe available on synths. Sample envelopes only allow you to reduce the amplitud"
"e and duration of a sample - and never to increase it. The sample will stop wh"
"en either the sample has finished playing or the envelope has completed - whic"
"hever is first. So, if you use a very long `release:`, it won't extend the dur"
"ation of the sample."
msgstr ""
"Korzystając z obwiedni ADSR, możliwa jest również modyfikacja *czasu trwania* "
"oraz *amplitudy* sampli. Jednakże działanie jest w tym przypadku trochę inne n"
"iż w przypadku syntezatorów. Obwiednie sampli pozwalają Ci tylko na zmniejszan"
"ie amplitudy oraz czasu trwania sampla - natomiast nigdy nie jest możliwe zwię"
"kszanie wartości tych parametrów. Sampel przestanie grać, gdy się skończy lub "
"gdy zakończy się obwiednia - obojętne co skończy się szybciej. Jeśli więc użyj"
"esz bardzo długiego parametru `release:`, to nie spowoduje to, że wydłuży się "
"czas odtwarzania sampla."

#: 03.4-Enveloped-Samples.md:13
msgid "Amen Envelopes"
msgstr "Obwiednie Amen"

#: 03.4-Enveloped-Samples.md:15
msgid "Let's return to our trusty friend the Amen Break:"
msgstr "Wróćmy do naszego sprawdzonego kolegi Amen Break:"

#: 03.4-Enveloped-Samples.md:21
msgid ""
"With no opts, we hear the full sample at full amplitude. If we want to fade th"
"is in over 1 second we can use the `attack:` param:"
msgstr ""
"Bez podawania żadnych parametrów słyszymy całego sampla na pełnej głośności. J"
"eśli chcemy, aby dźwięk pojawiał się stopniowo przez 1 sekundę, możemy użyć pa"
"rametru `attack:`:"

#: 03.4-Enveloped-Samples.md:24
#, no-wrap
msgid "sample :loop_amen, attack: 1"
msgstr "sample :loop_amen, attack: 1"

#: 03.4-Enveloped-Samples.md:28
msgid "For a shorter fade in, choose a shorter attack value:"
msgstr ""
"Jeśli chcemy, aby wejście trwało krócej, wystarczy że użyjemy krótszej wartośc"
"i dla fazy ataku:"

#: 03.4-Enveloped-Samples.md:30
#, no-wrap
msgid "sample :loop_amen, attack: 0.3"
msgstr "sample :loop_amen, attack: 0.3"

#: 03.4-Enveloped-Samples.md:34
msgid "Auto Sustain"
msgstr "Automatyczne Podtrzymanie (Auto Sustain)"

#: 03.4-Enveloped-Samples.md:36
msgid ""
"Where the ADSR envelope's behaviour differs from the standard synth envelope i"
"s in the *sustain* value. In the standard synth envelope, the sustain defaulte"
"d to 0 unless you set it manually. With samples, the sustain value defaults to"
" an *automagical* value - the time left to play the rest of the sample. This i"
"s why we hear the full sample when we pass no defaults. If the attack, decay, "
"sustain and release values were all 0 we'd never hear a peep. Sonic Pi therefo"
"re calculates how long the sample is, deducts any attack, decay and release ti"
"mes and uses the result as your sustain time. If the attack, decay and release"
" values add up to more than the duration of the sample, the sustain is simply "
"set to 0."
msgstr ""
"Miejsce, w którym zachowanie obwiedni ADSR dla sampli różni się od obwiedni dl"
"a syntezatorów, jest wartość parametru *sustain*. Domyślnie w obwiedni synteza"
"torów, parametr fazy podtrzymania domyślnie otrzymuje wartość 0, o ile nie zmi"
"enimy jej ręcznie. W przypadku sampli, faza podtrzymania domyślnie otrzymuje w"
"artość *automagiczną* - czas potrzebny na odtworzenie pozostałej części sampla"
". Jest to właśnie przyczyną, dla której słyszymy całego sampla, kiedy nie usta"
"wimy żadnej wartości dla fazy podtrzymania. Jeśli domyślne wartości dla parame"
"trów ataku, opadania, podtrzymania i zanikania były ustawione na 0, nigdy nie "
"usłyszelibyśmy nawet jednego piknięcia. Sonic Pi sam oblicza, jak długi jest c"
"zas trwania sampla, obcina fazy ataku, opadania oraz zanikania i używa wyniku "
"jako czasu dla fazy podtrzymania. Jeśli wartości podane dla ataku, opadania lu"
"b zanikania po zsumowaniu dają wartość większą od czasu trwania sampla, to faz"
"a podtrzymania otrzymuje po prostu wartość 0."

#: 03.4-Enveloped-Samples.md:48
msgid "Fade Outs"
msgstr "Płynne Zanikanie (Fade Outs)"

#: 03.4-Enveloped-Samples.md:50
msgid ""
"To explore this, let's consider our Amen break in more detail. If we ask Sonic"
" Pi how long the sample is:"
msgstr ""
"Aby to zbadać, przyjrzyjmy się bardziej szczegółowo naszej pętli Amen Loop. Je"
"śli zapytamy Sonic Pi o to, jak długo trwa ten sampel:"

#: 03.4-Enveloped-Samples.md:53
#, no-wrap
msgid "print sample_duration :loop_amen"
msgstr "print sample_duration :loop_amen"

#: 03.4-Enveloped-Samples.md:57
msgid ""
"It will print out `1.753310657596372` which is the length of the sample in sec"
"onds. Let's just round that to `1.75` for convenience here. Now, if we set the"
" release to `0.75`, something surprising will happen:"
msgstr ""
"To wyświetli liczbę `1.753310657596372` i jest ona długością sampla wyrażoną w"
" sekundach. Dla wygody zaokrąglijmy ją tutaj do wartości `1.75`. Teraz, jeśli "
"ustawimy fazę zanikania (release) na wartość `0.75`, to wydarzy się coś niespo"
"dziewanego:"

#: 03.4-Enveloped-Samples.md:61
#, no-wrap
msgid "sample :loop_amen, release: 0.75"
msgstr "sample :loop_amen, release: 0.75"

#: 03.4-Enveloped-Samples.md:65
msgid ""
"It will play the first second of the sample at full amplitude before then fadi"
"ng out over a period of 0.75 seconds. This is the *auto sustain* in action. By"
" default, the release always works from the end of the sample. If our sample w"
"as 10.75 seconds long, it would play the first 10 seconds at full amplitude be"
"fore fading out over 0.75s."
msgstr ""
"Pierwsza sekunda sampla zostanie zagrana z pełną amplitudą, po czym zacznie st"
"opniowo zanikać przez okres 0.75 sekundy. To jest właśnie *auto sustain* w akc"
"ji (automatyczne ustawianie czasu trwania dla fazy podtrzymania). Domyślnie, f"
"aza zanikania (release) zawsze działa (jest ustawiana) od końca sampla. Jeśli "
"nasz sample trwałby 10.75 sekundy, to najpierw pierwsze 10 sekund zostałoby za"
"grane z pełną amplitudą, po czym zaczęłoby się stopniowe zanikanie (fade out),"
" trwające przez 0.75s."

#: 03.4-Enveloped-Samples.md:71
msgid "Remember: by default, `release:` fades out at the end of a sample."
msgstr "Zapamiętaj: domyślnie faza zanikania (`release:`) wchodzi pod koniec sampla."

#: 03.4-Enveloped-Samples.md:73
msgid "Fade In and Out"
msgstr "Wejście i Wyjście (Fade In i Fade Out)"

#: 03.4-Enveloped-Samples.md:75
msgid ""
"We can use both `attack:` and `release:` together with the auto sustain behavi"
"our to fade both in and out over the duration of the sample:"
msgstr ""
"Możemy używać jednocześnie parametrów dla ustawiania fazy ataku `attack:` oraz"
" fazy zanikania `release:`, z wykorzystaniem automatycznego ustawiania fazy po"
"dtrzymania (sustain), aby użyć stopniowego pojawienia się i stopniowego zanika"
"nia przez cały czas trwania sampla:"

#: 03.4-Enveloped-Samples.md:78
#, no-wrap
msgid "sample :loop_amen, attack: 0.75, release: 0.75"
msgstr "sample :loop_amen, attack: 0.75, release: 0.75"

#: 03.4-Enveloped-Samples.md:82
msgid ""
"As the full duration of the sample is 1.75s and our attack and release phases "
"add up to 1.5s, the sustain is automatically set to 0.25s. This allows us to e"
"asily fade the sample in and out."
msgstr ""
"Jako że pełny czas trwania naszego sampla to 1.75s, a nasze fazy ataku i zanik"
"ania dają w sumie 1.5 s, to czas trwania fazy podtrzymania (sustain) automagic"
"znie ustawia się na wartość 0.25s. Pozwala nam to na łatwe tworzenie łagodnych"
" wejść i wyjść w samplach."

#: 03.4-Enveloped-Samples.md:86
msgid "Explicit sustain"
msgstr "Sprecyzowana faza podtrzymania (sustain)"

#: 03.4-Enveloped-Samples.md:88
msgid ""
"We can easily get back to our normal synth ADSR behaviour by manually setting "
"`sustain:` to a value such as 0:"
msgstr ""
"Możemy bardzo łatwo przywrócić normalne zachowanie ADSR znane z syntezatorów p"
"oprzez manualne ustawienie wartości parametru `sustain:` na wartość 0:"

#: 03.4-Enveloped-Samples.md:91
#, no-wrap
msgid "sample :loop_amen, sustain: 0, release: 0.75"
msgstr "sample :loop_amen, sustain: 0, release: 0.75"

#: 03.4-Enveloped-Samples.md:95
msgid ""
"Now, our sample only plays for 0.75 seconds in total. With the default for `at"
"tack:` and `decay:` at 0, the sample jumps straight to full amplitude, sustain"
"s there for 0s then releases back down to 0 amplitude over the release period "
"- 0.75s."
msgstr ""
"Teraz nasz sampel zostanie zagrany tylko przez 0.75 sekundy w sumie. Używając "
"domyślnych wartości dla parametrów ataku `attack:` i opadania `decay:` na pozi"
"omie 0, sampel przeskakuje bezpośrednio do pełnej amplitudy, przechodzi w fazę"
" podtrzymania na 0s, po czym zanika z powrotem do amplitudy równej zero, przy "
"czym czas zanikania to 0.75s."

#: 03.4-Enveloped-Samples.md:100
msgid "Percussive cymbals"
msgstr "Talerze perkusyjne"

#: 03.4-Enveloped-Samples.md:102
msgid ""
"We can use this behaviour to good effect to turn longer sounding samples into "
"shorter, more percussive versions. Consider the sample `:drum_cymbal_open`:"
msgstr ""
"Możemy wykorzystać to zachowania, aby uzyskać dobry efekt, sprawiając że sampl"
"e trwające dłużej będą krótsze, bardziej perkusyjne. Przyjrzyjmy się samplowi "
"`:drum_cymbal_open`:"

#: 03.4-Enveloped-Samples.md:106
#, no-wrap
msgid "sample :drum_cymbal_open"
msgstr "sample :drum_cymbal_open"

#: 03.4-Enveloped-Samples.md:110
msgid ""
"You can hear the cymbal sound ringing out over a period of time. However, we c"
"an use our envelope to make it more percussive:"
msgstr ""
"Słyszysz dźwięk talerza, który brzmi przez chwilę czasu. Możemy jednak skorzys"
"tać z naszej obwiedni, aby sprawić, by ten dźwięk stał się bardziej perkusyjny"
":"

#: 03.4-Enveloped-Samples.md:113
#, no-wrap
msgid "sample :drum_cymbal_open, attack: 0.01, sustain: 0, release: 0.1"
msgstr "sample :drum_cymbal_open, attack: 0.01, sustain: 0, release: 0.1"

#: 03.4-Enveloped-Samples.md:117
msgid ""
"You can then emulate hitting the cymbal and then dampening it by increasing th"
"e sustain period:"
msgstr ""
"Następnie możesz spróbować zasymulować uderzenie w talerz i stłumienie go popr"
"zez zwiększenie wartości parametru podtrzymania:"

#: 03.4-Enveloped-Samples.md:120
#, no-wrap
msgid "sample :drum_cymbal_open, attack: 0.01, sustain: 0.3, release: 0.1"
msgstr "sample :drum_cymbal_open, attack: 0.01, sustain: 0.3, release: 0.1"

#: 03.4-Enveloped-Samples.md:124
msgid ""
"Now go and have fun putting envelopes over the samples. Try changing the rate "
"too for really interesting results."
msgstr ""
"A teraz spróbuj się pobawić, nakładając obwiednie na sample. Próbuj również zm"
"ieniać wartości różnych parametrów obwiedni, aby otrzymać naprawdę ciekawe rez"
"ultaty."

#: 03.5-Partial-Samples.md:1
msgid "3.5 Partial Samples"
msgstr "3.5 Kawałki Sampli"

#: 03.5-Partial-Samples.md:3
msgid "Partial Samples"
msgstr "Kawałki Sampli"

#: 03.5-Partial-Samples.md:5
msgid ""
"This section will conclude our exploration of Sonic Pi's sample player. Let's "
"do a quick recap. So far we've looked at how we can trigger samples:"
msgstr ""
"Ta sekcja sfinalizuje nasze odkrywanie odtwarzacza sampli dostępnego w Sonic P"
"i. Zróbmy szybkie podsumowanie. Do tej pory wiemy już, w jaki sposób uruchamia"
"ć sample:"

#: 03.5-Partial-Samples.md:13
msgid ""
"We then looked at how we can change the rate of samples such as playing them a"
"t half speed:"
msgstr ""
"Następnie dowiedzieliśmy się, w jaki sposób można zmieniać parametry sampli, n"
"p. w jaki sposób możemy zagrać wybraną próbkę w tempie równym połowie normalne"
"go:"

#: 03.5-Partial-Samples.md:20
msgid "Next, we looked at how we could fade a sample in (let's do it at half speed):"
msgstr ""
"Kolejną rzeczą, jakiej się nauczyliśmy, była umiejętność stopniowego wchodzeni"
"a sampla (spróbujmy zrobić to dla sampla zagranego w połowie jego normalnego t"
"empa):"

#: 03.5-Partial-Samples.md:23
#, no-wrap
msgid "sample :loop_amen, rate: 0.5, attack: 1"
msgstr "sample :loop_amen, rate: 0.5, attack: 1"

#: 03.5-Partial-Samples.md:27
msgid ""
"We also looked at how we could use the start of a sample percussively by givin"
"g `sustain:` an explicit value and setting both the attack and release to be s"
"hort values:"
msgstr ""
"Dowiedzieliśmy się również, że za pomocą podania konkretnych krótkich wartości"
" dla parametrów podtrzymania `sustain:` oraz ataku, możemy uzyskać perkusyjne "
"brzmienie:"

#: 03.5-Partial-Samples.md:31
#, no-wrap
msgid "sample :loop_amen, rate: 2, attack: 0.01, sustain: 0, release: 0.35"
msgstr "sample :loop_amen, rate: 2, attack: 0.01, sustain: 0, release: 0.35"

#: 03.5-Partial-Samples.md:35
msgid ""
"However, wouldn't it be nice if we didn't have to always start at the beginnin"
"g of the sample? Wouldn't it also be nice if we didn't have to always finish a"
"t the end of the sample?"
msgstr ""
"Jednakże, czy nie byłoby fajnie, gdybyśmy nie musieli zawsze zaczynać odtwarza"
"nia sampla od jego początku? Czy nie byłoby fajnie, gdybyśmy nie musieli też z"
"awsze kończyć odtwarzania sampla dopiero w momencie jego końca?"

#: 03.5-Partial-Samples.md:39
msgid "Choosing a starting point"
msgstr "Wybór momentu startu"

#: 03.5-Partial-Samples.md:41
msgid ""
"It is possible to choose an arbitrary starting point in the sample as a value "
"between 0 and 1 where 0 is the start of the sample, 1 is the end and 0.5 is ha"
"lf way through the sample. Let's try playing only the last half of the amen br"
"eak:"
msgstr ""
"Możliwe jest wybranie bezwzględnego momentu startu, od którego uruchomimy samp"
"el za pomocą podania liczby o wielkości od 0 do 1, gdzie 0 to początek sampla,"
" 1 oznacza koniec sampla, a 0.5 to połowa sampla. Spróbujmy zagrać tylko drugą"
" połowę sampla amen break:"

#: 03.5-Partial-Samples.md:46
#, no-wrap
msgid "sample :loop_amen, start: 0.5"
msgstr "sample :loop_amen, start: 0.5"

#: 03.5-Partial-Samples.md:50
msgid "How about the last quarter of the sample:"
msgstr "A teraz spróbujmy zagrać ostatnią ćwiartkę sampla:"

#: 03.5-Partial-Samples.md:52
#, no-wrap
msgid "sample :loop_amen, start: 0.75"
msgstr "sample :loop_amen, start: 0.75"

#: 03.5-Partial-Samples.md:56
msgid "Choosing a finish point"
msgstr "Wybór momentu zakończenia"

#: 03.5-Partial-Samples.md:58
msgid ""
"Similarly, it is possible to choose an arbitrary finish point in the sample as"
" a value between 0 and 1. Let's finish the amen break half way through:"
msgstr ""
"Analogicznie jest również możliwy wybór bezwzględnego momentu końca odtwarzani"
"a sampla za pomocą wartości pomiędzy 0 a 1. Spróbujmy skończyć sampel amen bre"
"ak w połowie czasu:"

#: 03.5-Partial-Samples.md:62 A.12-sample-slicing.md:62
#, no-wrap
msgid "sample :loop_amen, finish: 0.5"
msgstr "sample :loop_amen, finish: 0.5"

#: 03.5-Partial-Samples.md:66
msgid "Specifying start and finish"
msgstr "Ustawianie startu i zakończenia"

#: 03.5-Partial-Samples.md:68
msgid ""
"Of course, we can combine these two to play arbitrary segments of the audio fi"
"le. How about only a small section in the middle:"
msgstr ""
"Nic nam nie stoi na przeszkodzie, abyśmy połączyli oba powyższe parametry, by "
"zagrać wybrane kawałki z danego sampla. Co powiesz na wycięcie tylko małego ka"
"wałka ze środka?:"

#: 03.5-Partial-Samples.md:71
#, no-wrap
msgid "sample :loop_amen, start: 0.4, finish: 0.6"
msgstr "sample :loop_amen, start: 0.4, finish: 0.6"

#: 03.5-Partial-Samples.md:75
msgid "What happens if we choose a start position after the finish position?"
msgstr ""
"Co się stanie, jeśli ustawimy moment startu tak, aby znajdował się po momencie"
" końca?"

#: 03.5-Partial-Samples.md:78
#, no-wrap
msgid "sample :loop_amen, start: 0.6, finish: 0.4"
msgstr "sample :loop_amen, start: 0.6, finish: 0.4"

#: 03.5-Partial-Samples.md:82
msgid "Cool! It plays it backwards!"
msgstr "Świetnie! Wybrany kawałek jest odtwarzany od końca!"

#: 03.5-Partial-Samples.md:84
msgid "Combining with rate"
msgstr "Łączenie z tempem"

#: 03.5-Partial-Samples.md:86
msgid ""
"We can combine this new ability to play arbitrary segments of audio with our f"
"riend `rate:`. For example, we can play a very small section of the middle of "
"the amen break very slowly:"
msgstr ""
"Możemy teraz połączyć tę nową możliwość odtwarzania wybranych części dźwięku z"
" naszym starym dobrym znajomym, parametrem tempa `rate:`. Dla przykładu: możem"
"y zagrać bardzo mały kawałek ze środka sampla amen break w bardzo wolnym tempi"
"e:"

#: 03.5-Partial-Samples.md:90
#, no-wrap
msgid "sample :loop_amen, start: 0.5, finish: 0.7, rate: 0.2"
msgstr "sample :loop_amen, start: 0.5, finish: 0.7, rate: 0.2"

#: 03.5-Partial-Samples.md:94
msgid "Combining with envelopes"
msgstr "Łączenie z obwiedniami"

#: 03.5-Partial-Samples.md:96
msgid ""
"Finally, we can combine all of this with our ADSR envelopes to produce interes"
"ting results:"
msgstr ""
"Na sam koniec możemy połączyć wszytkie powyższe możliwości z naszą obwiednią A"
"DSR, aby stworzyć bardzo ciekawe rezultaty:"

#: 03.5-Partial-Samples.md:99
#, no-wrap
msgid ""
"sample :loop_amen, start: 0.5, finish: 0.8, rate: -0.2, attack: 0.3, release: "
"1"
msgstr ""
"sample :loop_amen, start: 0.5, finish: 0.8, rate: -0.2, attack: 0.3, release: "
"1"

#: 03.5-Partial-Samples.md:103
msgid "Now go and have a play mashing up samples with all of this fun stuff..."
msgstr ""
"A teraz idź i spróbuj pobawić się, zmieniając sample, wykorzystując cały ten k"
"ram..."

#: 03.6-External-Samples.md:1
msgid "3.6 External Samples"
msgstr "3.6 Sample Zewnętrzne"

#: 03.6-External-Samples.md:3
msgid "External Samples"
msgstr "Sample Zewnętrzne"

#: 03.6-External-Samples.md:5
msgid ""
"Whilst the built-in samples can get you up and started quickly, you might wish"
" to experiment with other recorded sounds in your music. Sonic Pi totally supp"
"orts this. First though, let's have a quick discussion on the portability of y"
"our piece."
msgstr ""
"Podczas gdy wbudowane sample pomogą Ci zacząć dość szybko, być może chciałbyś "
"poeksperymentować z innymi nagraniami, które posiadasz w swojej bibliotece muz"
"ycznej. Sonic Pi całkowicie to wspiera. Zanim jednak pokażemy, jak można tego "
"dokonać, przeprowadźmy krótką dyskusję dotyczącą przenośności Twoich utworów."

#: 03.6-External-Samples.md:10
msgid "Portability"
msgstr "Przenośność"

#: 03.6-External-Samples.md:12
msgid ""
"When you compose your piece purely with built-in synths and samples, the code "
"is all you need to faithfully reproduce your music. Think about that for a mom"
"ent - that's amazing! A simple piece of text you can email around or stick in "
"a [Gist](https://gist.github.com) represents everything you need to reproduce "
"your sounds. That makes it *really easy to share* with your friends as they ju"
"st need to get hold of the code."
msgstr ""
"Kiedy komponujesz swoje utwory, opierając się tylko i wyłącznie na wbudowanych"
" syntezatorach i samplach, kod to jedna rzecz, która jest niezbędna, aby wiern"
"ie odtworzyć Twoją muzykę. Pomyśl o tym przez chwilę - to jest niesamowite! Pr"
"osty kawałek tekstu, który możesz wysłać pocztą lub trzymać jako [Gist](https:"
"//gist.github.com), przedstawia wszystko, czego potrzebujesz, aby odtworzyć tw"
"oje kawałki. Takie podejście sprawia, że *dzielenie się tą muzyką z twoimi zna"
"jomymi jest naprawdę proste*, gdyż jedyne, co muszą zrobić, to zdobyć kod."

#: 03.6-External-Samples.md:19
msgid ""
"However, if you start using your own pre-recorded samples, you lose this porta"
"bility. This is because to reproduce your music other people not only need you"
"r code, they need your samples too. This limits the ability for others to mani"
"pulate, mash-up and experiment with your work. Of course this shouldn't stop y"
"ou from using your own samples, it's just something to consider."
msgstr ""
"Jednakże, gdy zaczniesz używać swoich własnych sampli, stracisz tę przenośność"
". Stanie się tak dlatego, że do odtworzenia Twojej muzyki inni ludzie będą pot"
"rzebować nie tylko twojego kodu, będą potrzebować również Twoich sampli. Takie"
" podejście ogranicza innymi możliwość manipulowania, zmieniania i eksperymento"
"wania z Twoją pracą. Oczywiście nie powinno to powstrzymać Cię od używania wła"
"snych sampli, to tylko coś, co musisz wziąć pod uwagę, gdy się na to zdecyduje"
"sz."

#: 03.6-External-Samples.md:26
msgid "Local Samples"
msgstr "Sample Lokalne"

#: 03.6-External-Samples.md:28
msgid ""
"So how do you play any arbitrary WAV, AIFF or FLAC file on your computer? All "
"you need to do is pass the path of that file to `sample`:"
msgstr ""
"W jaki sposób możesz więc zagrać dowolny plik WAV lub AIFF, który znajduje się"
" na Twoim komputerze? Jedyne, co musisz zrobić, to przekazać ścieżkę do tego p"
"liku do polecenia `sample`:"

#: 03.6-External-Samples.md:31
#, no-wrap
msgid ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\"\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\""
msgstr ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\"\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\""

#: 03.6-External-Samples.md:38
msgid ""
"Sonic Pi will automatically load and play the sample. You can also pass all th"
"e standard params you're used to passing `sample`:"
msgstr ""
"Sonic Pi automatycznie załaduje i zagra wybrany sampel. Możesz również przekaz"
"ać wszystkie standardowe parametry, które do tej pory przekazywałeś do polecen"
"ia `sample`:"

#: 03.6-External-Samples.md:41
#, no-wrap
msgid ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3"
msgstr ""
"# Raspberry Pi, Mac, Linux\n"
"sample \"/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3\n"
"# Windows\n"
"sample \"C:/Users/sam/Desktop/my-sound.wav\", rate: 0.5, amp: 0.3"

#: 03.7-Sample-Packs.md:1
msgid "3.7 Sample Packs"
msgstr "3.7 Paczki z samplami"

#: 03.7-Sample-Packs.md:3
msgid "Sample Packs"
msgstr "Paczki z samplami"

#: 03.7-Sample-Packs.md:5
msgid ""
"**Note: this section of the tutorial covers the advanced topic of working with"
" large directories of your own samples. This will be the case if you've downlo"
"aded or bought your own sample packs and wish to use them within Sonic Pi.**"
msgstr ""
"**Uwaga: Ten rozdział samouczka omawia kwestię pracy z dużymi katalogami zawie"
"rającymi twoje sample. Jest to przypadek, w którym pobrałeś lub kupiłeś swoje "
"własne paczki z samplami i chciałbyś ich użyć w Sonic Pi.**"

#: 03.7-Sample-Packs.md:10
msgid "**Feel free to skip this if you're happy working with the built-in samples.**"
msgstr ""
"**Możesz spokojnie pominąć ten rozdział, jeśli wystarcza Ci zestaw sampli domy"
"ślnie dostarczonych z Sonic Pi.**"

#: 03.7-Sample-Packs.md:13
msgid ""
"When working with large folders of external samples it can be cumbersome to ha"
"ve to type the whole path every time to trigger an individual sample."
msgstr ""
"Kiedy pracujemy z katalogami zawierającymi duże ilości zewnętrznych sampli, wp"
"isywanie ścieżki do każdego pliku może być bardzo uciążliwe."

#: 03.7-Sample-Packs.md:17
msgid "For example, say you have the following folder on your machine:"
msgstr "Na przykład, przypuśćmy że masz na swoim komputerze następujący folder:"

#: 03.7-Sample-Packs.md:19
#, no-wrap
msgid "/path/to/my/samples/"
msgstr "/path/to/my/samples/"

#: 03.7-Sample-Packs.md:23
msgid "When we look inside that folder we find the following samples:"
msgstr "Kiedy zajrzymy do tego katalogu, znajdziemy w nim następujące sample:"

#: 03.7-Sample-Packs.md:25 03.7-Sample-Packs.md:86
msgid "`100_A#_melody1.wav`"
msgstr "`100_A#_melody1.wav`"

#: 03.7-Sample-Packs.md:26 03.7-Sample-Packs.md:87
msgid "`100_A#_melody2.wav`"
msgstr "`100_A#_melody2.wav`"

#: 03.7-Sample-Packs.md:27 03.7-Sample-Packs.md:88
msgid "`100_A#_melody3.wav`"
msgstr "`100_A#_melody3.wav`"

#: 03.7-Sample-Packs.md:28 03.7-Sample-Packs.md:89
msgid "`120_A#_melody4.wav`"
msgstr "`120_A#_melody4.wav`"

#: 03.7-Sample-Packs.md:29 03.7-Sample-Packs.md:90
msgid "`120_Bb_guit1.wav`"
msgstr "`120_Bb_guit1.wav`"

#: 03.7-Sample-Packs.md:30 03.7-Sample-Packs.md:91
msgid "`120_Bb_piano1.wav`"
msgstr "`120_Bb_piano1.wav`"

#: 03.7-Sample-Packs.md:32
msgid "Typically in order to play the piano sample we can use the full path:"
msgstr ""
"Zazwyczaj jeśli chcielibyśmy użyć sampla pianino (piano) możemy użyć pełnej śc"
"ieżki do danego pliku:"

#: 03.7-Sample-Packs.md:34
#, no-wrap
msgid "sample \"/path/to/my/samples/120_Bb_piano1.wav\""
msgstr "sample \"/path/to/my/samples/120_Bb_piano1.wav\""

#: 03.7-Sample-Packs.md:38
msgid "If we want to then play the guitar sample we can use its full path too:"
msgstr ""
"Jeśli chcemy później użyć sampla o brzmieniu gitary (guitar) to też możemy uży"
"ć pełnej ścieżki:"

#: 03.7-Sample-Packs.md:40
#, no-wrap
msgid "sample \"/path/to/my/samples/120_Bb_guit.wav\""
msgstr "sample \"/path/to/my/samples/120_Bb_guit.wav\""

#: 03.7-Sample-Packs.md:44
msgid ""
"However, both of these calls to sample requires us to *know* the names of the "
"samples within our directory. What if we just want to listen to each sample in"
" turn quickly?"
msgstr ""
"Jednakże, w obu tych przypadkach polecenie sample wymaga od nas żebyśmy *znali"
"* nazwy sampli znajdujących się w naszym katalogu. A co jeśli chcielibyśmy tyl"
"ko szybko  przesłuchać każdy z nich?"

#: 03.7-Sample-Packs.md:48
msgid "Indexing Sample Packs"
msgstr "Sporządzanie indeksu dla paczki z samplami"

#: 03.7-Sample-Packs.md:50
msgid ""
"If we want to play the first sample in a directory we just need to pass the di"
"rectory's name to `sample` and the index `0` as follows:"
msgstr ""
"Jeśli chcemy pierwszy sampel znajdujący się w danym katalogu, wystarczy, że pr"
"zekażemy do polecenia  `sample`  nazwę tego katalogu oraz indeks `0`, tak jak "
"poniżej:"

#: 03.7-Sample-Packs.md:53
#, no-wrap
msgid "sample \"/path/to/my/samples/\", 0"
msgstr "sample \"/path/to/my/samples/\", 0"

#: 03.7-Sample-Packs.md:57
msgid "We can even make a shortcut to our directory path using a variable:"
msgstr "Możemy nawet stworzyć skrót do naszego katalogu używając zmiennej:"

#: 03.7-Sample-Packs.md:59
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 0"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 0"

#: 03.7-Sample-Packs.md:64
msgid ""
"Now, if we want to play the second sample in our directory, we just need to ad"
"d 1 to our index:"
msgstr ""
"Teraz, jeśli chcielibyśmy zagrać drugi sampel z naszego katalogu wystarczy, że"
" do naszego indeksu dodamy 1:"

#: 03.7-Sample-Packs.md:67
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 1"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, 1"

#: 03.7-Sample-Packs.md:72
msgid ""
"Notice that we no longer need to know the names of the samples in the director"
"y - we just need to know the directory itself (or have a shortcut to it). If w"
"e ask for an index which is larger than the number of samples, it simply wraps"
" round just like Rings. Therefore, whatever number we use we're guaranteed to "
"get one of the samples in that directory."
msgstr ""
"Zauważ, że nie potrzebujemy znać nazw sampli znajdujących się naszym katalogu "
"- musimy tylko wiedzieć gdzie znajduje się ten katalog (lub posiadać skrót do "
"niego). Jeśli użyjemy indeksu, który jest większy niż ilość sampli w danym kat"
"alogu, to wrócimy znowu do pierwszego sampla, tak samo jak w przypadku pracy z"
" pierścieniami. Dlatego też niezależnie od tego jakiej liczby użyjemy to zawsz"
"e mamy zagwarantowane, że otrzymamy jakiegoś sampla znajdującego się w naszym "
"katalogu."

#: 03.7-Sample-Packs.md:79
msgid "Filtering Sample Packs"
msgstr "Filtrowanie paczek z samplami"

#: 03.7-Sample-Packs.md:81
msgid ""
"Usually indexing is enough, but sometimes we need more power to sort and organ"
"ise our samples. Luckily many sample packs add useful information in the filen"
"ames. Let's take another look at the sample file names in our directory:"
msgstr ""
"Zazwyczaj indeksowanie jest wystarczające, ale czasami potrzebujemy więcej moż"
"liwości , aby móc sortować i organizować nasze sample. Na szczęście wiele pacz"
"ek z samplami umieszcza przydatne informacje w nazwach poszczególnych sampli. "
"Spójrzmy jeszcze raz na nazwy sampli znajdujących się w naszym katalogu:"

#: 03.7-Sample-Packs.md:93
msgid ""
"Notice that in these filenames we have quite a bit of information. Firstly, we"
" have the BPM of the sample (beats per minute) at the start. So, the piano sam"
"ple is at 120 BPM and our first three melodies are at 100 BPM. Also, our sampl"
"e names contain the key. So the guitar sample is in Bb and the melodies are in"
" A#. This information is very useful for mixing in these samples with our othe"
"r code. For example, we know we can only play the piano sample with code that'"
"s in 120 BPM and in the key of Bb."
msgstr ""
"Zauważ, ze nazwy plików zawierają całkiem sporo informacji. Po pierwsze mamy i"
"nformację o tempie sampla wyrażonym w BPM (ilość uderzeń na minutę, z ang. bea"
"ts per minute). Widać więc, że sampel z dźwiękiem pianina ma 120 BPM, a pozost"
"ałe trzy próbki mają po 100 BPM. Ponadto nazwy sampli zawierają informację o t"
"onacji. Sampel z gitarą ma więc tonację B mol (Bb), a pozostałe melodie są w t"
"onacji A fis (A#). Informacje te są bardzo przydatne gdy chcemy użyć danego sa"
"mpla w naszym kodzie. Na przykład, wiemy że możemy użyć sampla z pianinem tylk"
"o wtedy gdy nasz kod ma tempo 120 BPM i jest w tonacji B mol (Bb)."

#: 03.7-Sample-Packs.md:102
msgid ""
"It turns out that we can use this particular naming convention of our sample s"
"ets in the code to help us filter out the ones we want. For example, if we're "
"working at 120 BPM, we can filter down to all the samples that contain the str"
"ing `\"120\"` with the following:"
msgstr ""
"Okazuje się, że możemy użyć tej specyficznej konwencji nazewnictwa dla naszych"
" sampli w kodzie, żeby móc filtrować i znajdywać te, których właśnie potrzebuj"
"emy. Na przykład, jeśli akurat pracujemy w tempie 120 BPM, to możemy odfiltrow"
"ać tylko takie sample, które posiadają ciast znaków `\"120\"` w następujący spos"
"ób:"

#: 03.7-Sample-Packs.md:107
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\""
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\""

#: 03.7-Sample-Packs.md:112
msgid ""
"This will play us the first match. If we want the second match we just need to"
" use the index:"
msgstr ""
"Spowoduje to, że zagramy pierwszy pasujący do tego wzorca dźwięk. Jeśli chcemy"
" drugi sampel, który pasuje do tego wzorca, wystarczy że użyjemy indeksu:"

#: 03.7-Sample-Packs.md:115
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", 1"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", 1"

#: 03.7-Sample-Packs.md:120
msgid ""
"We can even use multiple filters at the same time. For example, if we want a s"
"ample whose filename contains both the substrings \"120\" and \"A#\" we can find i"
"t easily with the following code:"
msgstr ""
"Możemy nawet używać wielu filtrów jednocześnie. Na przykład, jeśli chcemy wszy"
"stkie sample, których nazwa pliku zawiera zarówno ciąg znaków\"120\" oraz \"A#\" m"
"ożemy znaleźć je bardzo łatwo wykorzystując taki kawałek kodu:"

#: 03.7-Sample-Packs.md:124
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"A#\""
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"A#\""

#: 03.7-Sample-Packs.md:129
msgid "Finally, we're still free to add our usual opts to the call to `sample`:"
msgstr "Oczywiście wciąż możemy dodawać do poleceń `sample` nasze standardowe opcje:"

#: 03.7-Sample-Packs.md:131
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"Bb\", 1, lpf: 70, amp: 2"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"sample samps, \"120\", \"Bb\", 1, lpf: 70, amp: 2"

#: 03.7-Sample-Packs.md:136
msgid "Sources"
msgstr "Źródła"

#: 03.7-Sample-Packs.md:138
msgid ""
"The sample filter pre-arg system understands two types of information: sources"
" and filters. Sources are information used to create the list of potential can"
"didates. A source can take two forms:"
msgstr ""
"System wstępnego przetwarzania parametrów dla funkcji filtrującej sample rozum"
"ie dwa typy informacji: źródła oraz filtry. Źródła są informacją wykorzystywan"
"ą do stworzenia listy potencjalnych kandydatów. Źródło może przyjmować 2 formy"
":"

#: 03.7-Sample-Packs.md:142
msgid "\"/path/to/samples\" - a string representing a valid path to a directory"
msgstr "\"/ścieżka/do/sampli\" - ciąg znaków reprezentujący poprawną ścieżkę do katalogu"

#: 03.7-Sample-Packs.md:143
msgid "\"/path/to/samples/foo.wav\" - a string representing a valid path to a sample"
msgstr ""
"\"/ścieżka/do/sampli/foo.wav\" - ciąg znaków reprezentujący poprawną ścieżkę do "
"sampla"

#: 03.7-Sample-Packs.md:145
msgid ""
"The `sample` fn will first gather all sources and use them to create a large l"
"ist of candidates. This list is constructed by first adding all valid paths an"
"d then by adding all the valid `.flac`, `.aif`, `.aiff`, `.wav`, `.wave` files"
" contained within the directories."
msgstr ""
"Funkcja `sample` najpierw zbierze wszystkie źródła, następnie użyje ich do stw"
"orzenia dużej listy kandydatów. Lista ta jest konstruowana najpierw poprzez do"
"danie wszystkich poprawnych ścieżek, następnie zostają dodane wszystkie popraw"
"ne pliki o rozszerzeniach `.flac`, `.aif`, `.aiff`, `.wav`, `.wave`, które zna"
"jdują się w podanych katalogach."

#: 03.7-Sample-Packs.md:150
msgid "For example, take a look at the following code:"
msgstr "Dla przykładu, przyjrzyjmy się następującemu kawałkowi kodu:"

#: 03.7-Sample-Packs.md:152
#, no-wrap
msgid ""
"samps = \"/path/to/my/samples/\"\n"
"samps2 = \"/path/to/my/samples2/\"\n"
"path = \"/path/to/my/samples3/foo.wav\"\n"
"sample samps, samps2, path, 0"
msgstr ""
"samps = \"/path/to/my/samples/\"\n"
"samps2 = \"/path/to/my/samples2/\"\n"
"path = \"/path/to/my/samples3/foo.wav\"\n"
"sample samps, samps2, path, 0"

#: 03.7-Sample-Packs.md:160
msgid ""
"Here, we're combining the contents of the samples within two directories and a"
"dding a specific sample. If `\"/path/to/my/samples/\"` contained 3 samples and `"
"\"/path/to/my/samples2/\"` contained 12, we'd have 16 potential samples to index"
" and filter (3 + 12 + 1)."
msgstr ""
"W powyższym przykładzie łączymy wykorzystanie sampli znajdujących się w dwóch "
"katalogach oraz dodaniu jednego konkretnego sampla. Jeśli `\"/path/to/my/sample"
"s/\"` zawiera 3 sample a `\"/path/to/my/samples2/\"` zawiera 12, to mamy w sumie "
"16 potencjalnych sampli do dodania do naszego indesku i filtrów (3 + 12 + 1)."

#: 03.7-Sample-Packs.md:165
msgid ""
"By default, only the sample files within a directory are gathered into the can"
"didate list. Sometimes you might have a number of nested folders of samples yo"
"u wish to search and filter within. You can therefore do a recursive search fo"
"r all samples within all subfolders of a particular folder by adding `**` to t"
"he end of the path:"
msgstr ""
"Domyślnie, tylko do listy kandydatów zostają dołączone tylko sample znajdujące"
" się w danym katalogu. Czasami może się zdarzyć, że będziesz posiadał wiele za"
"gnieżdżonych katalogów z samplami, które chciałbyś móc przeszukiwać i filtrowa"
"ć. Możesz wykonać wyszukiwanie rekurencyjne wszystkich sampli we wszystkich po"
"dfolderach danego katalogu poprzez dodanie na końcu ścieżki `**`:"

#: 03.7-Sample-Packs.md:171
#, no-wrap
msgid ""
"samps = \"/path/to/nested/samples/**\"\n"
"sample samps, 0"
msgstr ""
"samps = \"/path/to/nested/samples/**\"\n"
"sample samps, 0"

#: 03.7-Sample-Packs.md:176
msgid ""
"Take care though as searching through a very large set of folders may take a l"
"ong time. However, the contents of all folder sources are cached, so the delay"
" will only happen the first time."
msgstr ""
"Przeglądanie i wyszukiwanie sampli wśród wielu katalogów może zająć sporo czas"
"u. Jednakże, zawartość wszystkich katalogów jest buforowana, opóźnienie wystąp"
"i więc tylko za pierwszym razem."

#: 03.7-Sample-Packs.md:180
msgid ""
"Finally, note that the sources *must go first*. If no source is given, then th"
"e set of built-in samples will be selected as the default list of candidates t"
"o work with."
msgstr ""
"Na koniec zauważ, że źródła *muszą iść jako pierwsze*. Jeśli żadne źródła nie "
"zostaną podane, wtedy zestaw wbudowanych sampli będzie wybrany jako domyślna l"
"ista kandydatów, z którymi będziesz pracować."

#: 03.7-Sample-Packs.md:184
msgid "Filters"
msgstr "Filtry"

#: 03.7-Sample-Packs.md:186
msgid ""
"Once you have a list of candidates you may use the following filtering types t"
"o further reduce the selection:"
msgstr ""
"Gdy już masz listę kandydatów, możesz wtedy użyć następującego filtrowania typ"
"ów aby ograniczyć wybór:"

#: 03.7-Sample-Packs.md:189
msgid ""
"`\"foo\"` Strings will filter on substring occurrence within file name (minus di"
"rectory path and extension)."
msgstr ""
"`\"foo\"` ciągi znaków filtrują podzbiór znaków występujących w danej nazwie pli"
"ku (z pominięciem ścieżki katalogu oraz rozszerzenia)."

#: 03.7-Sample-Packs.md:190
msgid ""
"`/fo[oO]/` Regular Expressions will filter on pattern matching of file name (m"
"inus directory path and extension)."
msgstr ""
"`/fo[oO]/` Wyrażenie Regularne odfiltruje wszystkie nazwy plików pasujące do p"
"odanego wzorca (pomijając ścieżkę do pliku i rozszerzenie)."

#: 03.7-Sample-Packs.md:191
msgid ""
"`:foo` - Keywords will filter candidates on whether the keyword is a direct ma"
"tch of the filename (minus directory path and extension)."
msgstr ""
"`:foo` - słowa kluczowe odfiltrują kandydatów dla których słowo kluczowe  jest"
" dokładnym dopasowaniem do nazwy pliku (bez ścieżki do katalogu i rozszerzenia"
" tego pliku)."

#: 03.7-Sample-Packs.md:192
msgid ""
"`lambda{|a| ... }` - Procs with one argument will be treated as a candidate fi"
"lter or generator function. It will be passed the list of current candidates a"
"nd must return a new list of candidates (a list of valid paths to sample files"
")."
msgstr ""
"`lambda{|a| ... }` - prócz z jednym argumentem będą traktowane jako kandydat d"
"o odfiltrowania lub jako funkcja generującą. Zostanie do niej przekazana lustr"
"a aktualnych kandydatów i musi sycić nową listę kandydatów (listę poprawnych ś"
"cieżek do plików z samplami)."

#: 03.7-Sample-Packs.md:193
msgid ""
"`1` - Numbers will select the candidate with that index (wrapping round like a"
" ring if necessary)."
msgstr ""
"`1` - Liczby spowodują wybranie kandydata pod podanym indeksem (zataczając run"
"dę tak jak pierścień jeśli będzie to konieczne)."

#: 03.7-Sample-Packs.md:195
msgid ""
"For example, we can filter over all the samples in a directory containing the "
"string `\"foo\"` and play the first matching sample at half speed:"
msgstr ""
"Na przykład, możemy odfiltrować wszystkie sample z danego katalogu, które zawi"
"erają ciąg znaków `\"foo\"` i zagrać pierwszy pasujący sampel z prędkością równe"
"j połowie normalnego tempa:"

#: 03.7-Sample-Packs.md:199
#, no-wrap
msgid "sample \"/path/to/samples\", \"foo\", rate: 0.5"
msgstr "sample \"/path/to/samples\", \"foo\", rate: 0.5"

#: 03.7-Sample-Packs.md:203
msgid ""
"See the help for `sample` for many detailed usage examples. Note that the orde"
"ring of the filters is honoured."
msgstr ""
"Zajrzyj do pomocy gdzie opisane jest polecenie `sample` żeby zobaczyć wiele sz"
"czegółowych przykładów użycia. Zwróć uwagę na to, że kolejność nakładania filt"
"rów ma znaczenie."

#: 03.7-Sample-Packs.md:206
msgid "Composites"
msgstr "Kompozyty (obiekty złożone)"

#: 03.7-Sample-Packs.md:208
msgid ""
"Finally, you may use lists wherever you may place a source or filter. The list"
" will be automatically flattened and the contents will be treated as regular s"
"ources and filters. Therefore the following calls to `sample` are semantically"
" equivalent:"
msgstr ""
"I na koniec , chciałbym żebyś wiedział, że wszędzie tam gdzie wykorzystujesz ź"
"ródła i filtry możesz użyć list. Lista zostanie automatycznie spłaszczona a je"
"j zawartość zostanie użyta w taki sam sposób jak regularne źródła i filtry. Dl"
"atego też poniższe użycia polecenia `sample` są semantycznie tożsame:"

#: 03.7-Sample-Packs.md:213
#, no-wrap
msgid ""
"sample \"/path/to/dir\", \"100\", \"C#\"\n"
"sample [\"/path/to/dir\", \"100\", \"C#\"]\n"
"sample \"/path/to/dir\", [\"100\", \"C#\"]\n"
"sample [\"/path/to/dir\", [\"100\", [\"C#\"]]]"
msgstr ""
"sample \"/path/to/dir\", \"100\", \"C#\"\n"
"sample [\"/path/to/dir\", \"100\", \"C#\"]\n"
"sample \"/path/to/dir\", [\"100\", \"C#\"]\n"
"sample [\"/path/to/dir\", [\"100\", [\"C#\"]]]"

#: 03.7-Sample-Packs.md:220
msgid "Wrapping Up"
msgstr "Pakowanie"

#: 03.7-Sample-Packs.md:222
msgid ""
"This was an advanced section for people that need real power to manipulate and"
" use sample packs. If most of this section didn't make too much sense, don't w"
"orry. It's likely you don't need any of this functionality just yet. However, "
"you'll know when you do need it and you can come back and re-read this when yo"
"u start working with large directories of samples."
msgstr ""
"To była zaawansowana sekcja dla osób, które potrzebują potężnego narzędzia do "
" manipulacji paczkami sampli. Nie przejmuj się jeśli znaczna część tej sekcji "
"jest dla Ciebie niezrozumiała. Bardzo prawdopodobne jest to, że na razie nie b"
"ędzie Ci to do niczego potrzebne. Jednak będziesz wiedział, że jest Ci to potr"
"zebne kiedy nadejdzie odpowiednia pora. Możesz wtedy wrócić do tej sekcji i po"
"nownie przeczytać w jaki sposób można radzić sobie z dużymi katalogami sampli."

#: 04-Randomisation.md:1
msgid "4 Randomisation"
msgstr "4 Losowość"

#: 04-Randomisation.md:3
msgid "Randomisation"
msgstr "Losowość"

#: 04-Randomisation.md:5
msgid ""
"A great way to add some interest into your music is using some random numbers."
" Sonic Pi has some great functionality for adding randomness to your music, bu"
"t before we start we need to learn a shocking truth: in Sonic Pi *random is no"
"t truly random*. What on earth does this mean? Well, let's see."
msgstr ""
"Wspaniałym sposobem, aby dodać odrobine intrygi do Twojej muzyki, jest wykorzy"
"stanie paru losowych liczb. Sonic Pi posiada kilka fajnych funkcjonalności, kt"
"óre umożliwiają dodanie przypadkowości do Twojej muzyki. Zanim jednak zaczniem"
"y musimy nauczyć się jednej szokującej prawdy: w Soni Pi *losowość nie jest ta"
"k naprawdę losowa*. Co to do diaska znaczy? No cóż, zobaczmy."

#: 04-Randomisation.md:11
msgid "Repeatability"
msgstr "Powtarzalność"

#: 04-Randomisation.md:13
msgid ""
"A really useful random function is `rrand` which will give you a random value "
"between two numbers - a *min* and a *max*. (`rrand` is short for ranged random"
"). Let's try playing a random note:"
msgstr ""
"Bardzo przydatną funkcją do generowania liczb losowych jest `rrand`, która zwr"
"óca losową wartość pomiędzy dwoma liczbami - minimum *min* i maksimum *max*. ("
"`rrand` to skrót od angielskiego ranged random - liczba losowa z określonego p"
"rzedziału). Spróbujmy zagrać losową nutę:"

#: 04-Randomisation.md:17
#, no-wrap
msgid "play rrand(50, 95)"
msgstr "play rrand(50, 100)"

#: 04-Randomisation.md:21
msgid ""
"Ooh, it played a random note. It played note `83.7527`. A nice random note bet"
"ween 50 and 95. Woah, wait, did I just predict the exact random note you got t"
"oo? Something fishy is going on here. Try running the code again. What? It cho"
"se `83.7527` again? That can't be random!"
msgstr ""
"Oh, została zagrana losowa nuta. Zagrana nuta to `77.4407`. Fajna liczba losow"
"a pomiędzy 50 a 100. Zaraz zaraz, czy przypadkiem nie zgadłem dokładnej wartoś"
"ci losowej nuty, którą przed chwilą otrzymałeś? Dzieje się tu coś podejrzanego"
". Spróbuj uruchomić kod ponownie. I co? Znowu została wybrana liczba `77.4407`"
"? Toć to nie jest liczba losowa!"

#: 04-Randomisation.md:26
msgid ""
"The answer is that it is not truly random, it's pseudo-random. Sonic Pi will g"
"ive you random-like numbers in a repeatable manner. This is very useful for en"
"suring that the music you create on your machine sounds identical on everybody"
" else's machine - even if you use some randomness in your composition."
msgstr ""
"Odpowiedzią jest fakt, że tak naprawdę wynik nie jest losowy, jest pseudo loso"
"wy. Sonic Pi wygeneruje dla Ciebie liczby, które wyglądają jak losowe, lecz w "
"sposób powtarzalny. Takie podejście jest bardzo przydatne, jeśli chcesz być pe"
"wny, że muzyka, którą tworzysz na swojej maszynie, będzie brzmieć identycznie "
"na każdym innym komputerze - nawet jeśli używasz w swojej kompozycji pewnej lo"
"sowości."

#: 04-Randomisation.md:32
msgid ""
"Of course, in a given piece of music, if it 'randomly' chose `83.7527` every t"
"ime, then it wouldn't be very interesting. However, it doesn't. Try the follow"
"ing:"
msgstr ""
"Oczywiście, jeśli w danym utworze ta 'losowo wybrana liczba' będzie za każdym "
"razem miała wartość `77.4407`, to nie będzie to zbyt interesujące. Jednakże je"
"st inaczej. Spróbuj poniższego kawałka kodu:"

#: 04-Randomisation.md:36
#, no-wrap
msgid ""
"loop do\n"
"  play rrand(50, 95)\n"
"  sleep 0.5\n"
"end "
msgstr ""
"loop do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end "

#: 04-Randomisation.md:43
msgid ""
"Yes! It finally sounds random. Within a given *run* subsequent calls to random"
" functions will return random values. However, the next run will produce exact"
"ly the same sequence of random values and sound exactly the same. It's as if a"
"ll Sonic Pi code went back in time to exactly the same point every time the Ru"
"n button was pressed. It's the Groundhog Day of music synthesis!"
msgstr ""
"Tak! Wreszcie uzyskaliśmy losowe dźwięki. W ramach danego *uruchomienia* kolej"
"nych wywołań funkcji losującej, zostaną zwrócone wartości losowe. Jednakże, ko"
"lejne uruchomienie spowoduje wyprodukowanie dokładnie takiej samej sekwencji l"
"osowych wartości i brzmienie będzie takie same, jak przy pierwszym uruchomieni"
"u. To tak, jakby cały kod Sonic Pi cofnął się w czasie dokładnie do tego sameg"
"o punktu za każdym razem, gdy zostaje wciśnięty przycisk Run (Uruchom). Toć to"
" Dzien Świstaka dla syntezy muzycznej!"

#: 04-Randomisation.md:50
msgid "Haunted Bells"
msgstr "Haunted Bells (Nawiedzone Dzwony)"

#: 04-Randomisation.md:52
msgid ""
"A lovely illustration of randomisation in action is the haunted bells example "
"which loops the `:perc_bell` sample with a random rate and sleep time between "
"bell sounds:"
msgstr ""
"Piękną ilustracją randomizacji w akcji jest przykład nawiedzonych dzwonów (Hau"
"nted Bells), który zapętla sampel `:perc_bell`, nadając mu przy tym losowe tem"
"po (parametr rate) oraz czas przerwy (polecenie sleep) pomiędzy poszczególnymi"
" dźwiękami dzwonów:"

#: 04-Randomisation.md:56
#, no-wrap
msgid ""
"loop do\n"
"  sample :perc_bell, rate: (rrand 0.125, 1.5)\n"
"  sleep rrand(0.2, 2)\n"
"end"
msgstr ""
"loop do\n"
"  sample :perc_bell, rate: (rrand 0.125, 1.5)\n"
"  sleep rrand(0.2, 2)\n"
"end"

#: 04-Randomisation.md:63
msgid "Random cutoff"
msgstr "Losowe odcięcie"

#: 04-Randomisation.md:65
msgid ""
"Another fun example of randomisation is to modify the cutoff of a synth random"
"ly. A great synth to try this out on is the `:tb303` emulator:"
msgstr ""
"Innym ciekawym przykładem losowości jest modyfikacja odcięcia syntezatora loso"
"wo. Świetnym syntezatorem, na którym możemy tego spróbować, jest syntezator em"
"ulujący `:tb303`:"

#: 04-Randomisation.md:69
#, no-wrap
msgid ""
"use_synth :tb303\n"
"loop do\n"
"  play 50, release: 0.1, cutoff: rrand(60, 120)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_synth :tb303\n"
"loop do\n"
"  play 50, release: 0.1, cutoff: rrand(60, 120)\n"
"  sleep 0.125\n"
"end"

#: 04-Randomisation.md:78
msgid "Random seeds"
msgstr "Losowe zarzewie"

#: 04-Randomisation.md:80
msgid ""
"So, what if you don't like this particular sequence of random numbers Sonic Pi"
" provides? Well it's totally possible to choose a different starting point via"
" `use_random_seed`. The default seed happens to be 0, so choose a different se"
"ed for a different random experience!"
msgstr ""
"A co, jeśli nie podoba Ci się ta konkretna sekwencja liczb losowych, które gen"
"eruje Sonic Pi? Nic nie stoi na przeszkodzie, abyś wybrał inny punkt rozpoczęc"
"ia za pomocą polecenia `use_random_seed`. Domyślną wartością dla funkcji odsie"
"wu (seed) jest 0, zatem wybierz różny odsiew dla różnych doświadczeń losowych!"

#: 04-Randomisation.md:85
msgid "Consider the following:"
msgstr "Weźmy pod uwagę poniższy przykład:"

#: 04-Randomisation.md:87
#, no-wrap
msgid ""
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"
msgstr ""
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"

#: 04-Randomisation.md:94
msgid ""
"Every time you run this code, you'll hear the same sequence of 5 notes. To get"
" a different sequence simply change the seed:"
msgstr ""
"Za każdym razem, gdy uruchomisz powyższy kod, usłyszysz sekwencję tych samych "
"5-ciu nut. Aby uzyskać inną sekwencję, wystarczy zmienić wartość odsiewu (seed"
"):"

#: 04-Randomisation.md:97
#, no-wrap
msgid ""
"use_random_seed 40\n"
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_random_seed 40\n"
"5.times do\n"
"  play rrand(50, 100)\n"
"  sleep 0.5\n"
"end"

#: 04-Randomisation.md:105
msgid ""
"This will produce a different sequence of 5 notes. By changing the seed and li"
"stening to the results you can find something that you like - and when you sha"
"re it with others, they will hear exactly what you heard too."
msgstr ""
"Spowoduje to wygenerowanie sekwencji 5-ciu innych losowych nut. Zmieniając par"
"ametr odsiewu (seed) i słuchając wyników, jakie to spowodowało, możesz w końcu"
" znaleźć taką sekwencję, która Ci się spodoba - a gdy wtedy podzielisz się nią"
" z innymi, usłyszą oni dokładnie to samo, co Ty."

#: 04-Randomisation.md:110
msgid "Let's have a look at some other useful random functions."
msgstr ""
"A teraz przyjrzyjmy się kilku innym, przydatnym funkcjom generującym wartości "
"losowe."

#: 04-Randomisation.md:113
msgid "choose"
msgstr "choose (wybierz)"

#: 04-Randomisation.md:115
msgid ""
"A very common thing to do is to choose an item randomly from a list of known i"
"tems. For example, I may want to play one note from the following: 60, 65 or 7"
"2. I can achieve this with `choose` which lets me choose an item from a list. "
"First, I need to put my numbers in a list which is done by wrapping them in sq"
"uare brackets and separating them with commas: `[60, 65, 72]`. Next I just nee"
"d to pass them to `choose`:"
msgstr ""
"Bardzo popularną rzeczą jest wybór losowego obiektu z listy znanych nam obiekt"
"ów. Przykładowo mogę chcieć zagrać jedną z następujących nut: 60, 65 lub 72. Ż"
"eby to osiągnąć, mogę użyć funkcji `choose`, która pozwala mi na wybór jednego"
" obiektu z istniejącej listy obiektów. Po pierwsze, muszę wsadzić moje liczby "
"(nuty) do listy. Aby tego dokonać, wystarczy że opakujemy nasze liczby w nawia"
"sy kwadratowe i oddzielimy każdą z nich przecinkiem: `[60, 65, 72]`. Następnie"
" wystarczy przekazać je jako parametr do polecenia `choose`:"

#: 04-Randomisation.md:122
#, no-wrap
msgid "choose([60, 65, 72])"
msgstr "choose([60, 65, 72])"

#: 04-Randomisation.md:126
msgid "Let's hear what that sounds like:"
msgstr "Posłuchajmy zatem, jak to brzmi:"

#: 04-Randomisation.md:128
#, no-wrap
msgid ""
"loop do\n"
"  play choose([60, 65, 72])\n"
"  sleep 1\n"
"end"
msgstr ""
"loop do\n"
"  play choose([60, 65, 72])\n"
"  sleep 1\n"
"end"

#: 04-Randomisation.md:135
msgid "rrand"
msgstr "rrand"

#: 04-Randomisation.md:137
msgid ""
"We've already seen `rrand`, but let's run over it again. It returns a random n"
"umber between two values exclusively. That means it will never return either t"
"he top or bottom number - always something in between the two. The number will"
" always be a float - meaning it's not a whole number but a fraction of a numbe"
"r. Examples of floats returned by `rrand(20, 110)`:"
msgstr ""
"Widzieliśmy już w akcji funkcję `rrand`, ale spróbujmy uruchomić ją raz jeszcz"
"e. Zwraca ona losową liczbę z podanego przedziału, który jest w tym wypadku pr"
"zedziałem otwartym. Oznacza to, że żadna z podanych liczb, jako wartości minim"
"alna i maksymalna, nigdy nie zostanie zwrócona - zawsze coś pomiędzy tymi dwom"
"a liczbami. Zwrócona liczba będzie liczbą zmiennoprzecinkową - oznacza to, że "
"nie jest to liczba całkowita, tylko ułamek. Oto kilka przykładów liczb zmienno"
"przecinkowych zwracanych przez polecenie `rrand(20,110)`:"

#: 04-Randomisation.md:148
msgid "rrand_i"
msgstr "rrand_i"

#: 04-Randomisation.md:150
msgid ""
"Occasionally you'll want a whole random number, not a float. This is where `rr"
"and_i` comes to the rescue. It works similarly to `rrand` except it may return"
" the min and max values as potential random values (which means it's inclusive"
" rather than exclusive of the range). Examples of numbers returned by `rrand_i"
"(20, 110)` are:"
msgstr ""
"Sporadycznie może się zdarzyć, że będziesz potrzebował liczbę losową, która je"
"st liczbą całkowitą, a nie zmiennoprzecinkową. W tym przypadku z pomocą przych"
"odzi polecenie `rrand_i`. Polecenie to działa bardzo podobnie do `rrand`, z tą"
" jednak różnicą, że może zwracać teź liczbę minimalną i maksymalną z podanego "
"przedziału jako potencjalna wartość losowa (co oznacza, że podawany przedział "
"jest domknięty, a nie otwarty). Poniżej przykłady liczb losowych, które mogą z"
"ostać zwrócone przez polecenie `rrand_i(20, 110)`:"

#: 04-Randomisation.md:160
msgid "rand"
msgstr "rand"

#: 04-Randomisation.md:162
msgid ""
"This will return a random float between 0 (inclusive) and the max value you sp"
"ecify (exclusive). By default it will return a value between 0 and one. It's t"
"herefore useful for choosing random `amp:` values:"
msgstr ""
"Te polecenie zwraca losową liczbę zmiennoprzecinkową pomiędzy 0 (przedział dom"
"knięty) a maksymalną liczbą, którą podajesz jako parametr (przedział otwarty)."
" Domyślnie (jeśli nie podamy parametru) zostanie zwrócona liczba z przedziału "
"od 0 do 1. Warto zauważyć, że polecenie to może być bardzo użyteczne do ustawi"
"ania losowego poziomu poziomu amplitudy `amp:`:"

#: 04-Randomisation.md:167
#, no-wrap
msgid ""
"loop do\n"
"  play 60, amp: rand\n"
"  sleep 0.25\n"
"end"
msgstr ""
"loop do\n"
"  play 60, amp: rand\n"
"  sleep 0.25\n"
"end"

#: 04-Randomisation.md:174
msgid "rand_i"
msgstr "rand_i"

#: 04-Randomisation.md:176
msgid ""
"Similar to the relationship between `rrand_i` and `rrand`, `rand_i` will retur"
"n a random whole number between 0 and the max value you specify."
msgstr ""
"Przy tym poleceniu mamy relację podobną jak w przypadku poleceń `rrand_i` i `r"
"rand`. Polecenie `rand_i` zwraca losową liczbę całkowitą z zakresu od 0 do mak"
"symalnej wartości, którą podasz."

#: 04-Randomisation.md:179
msgid "dice"
msgstr "dice (kostka do gry)"

#: 04-Randomisation.md:181
msgid ""
"Sometimes you want to emulate a dice throw - this is a special case of `rrand_"
"i` where the lower value is always 1. A call to `dice` requires you to specify"
" the number of sides on the dice. A standard dice has 6 sides, so `dice(6)` wi"
"ll act very similarly - returning values of either 1, 2, 3, 4, 5, or 6. Howeve"
"r, just like fantasy role-play games, you might find value in a 4 sided dice, "
"or a 12 sided dice, or a 20 sided dice - perhaps even a 120 sided dice!"
msgstr ""
"Czasami chciałbyś zasymulować rzut kostką - jest to specyficzny przypadek dla "
"polecenia `rrand_i`, dla którego najniższa liczba to zawsze 1. Uruchomienie po"
"lecenia rzut kostką `dice` wymaga, abyś podał liczbę oczek na kostce. Standard"
"owa kostka ma 6 oczek, więc polecenie `dice(6)` zachowa się bardzo podobnie - "
"każde uruchomienie będzie zwracać jedną z wartości 1, 2, 3, 4, 5 lub 6. Jednak"
"że, tak samo jak w grach RPG (role-playing games), może się zdarzyć, że będzie"
"sz potrzebować kostki o 4 oczkach albo o 12, albo o 20 - być może będziesz pot"
"rzebować nawet kostki, która będzie miała 120 oczek!"

#: 04-Randomisation.md:189
msgid "one_in"
msgstr "one_in"

#: 04-Randomisation.md:191
msgid ""
"Finally you may wish to emulate throwing the top score of a dice such as a 6 i"
"n a standard dice. `one_in` therefore returns true with a probability of one i"
"n the number of sides on the dice. Therefore `one_in(6)` will return true with"
" a probability of 1 in 6 or false otherwise. True and false values are very us"
"eful for `if` statements which we will cover in a subsequent section of this t"
"utorial."
msgstr ""
"Na koniec może się zdarzyć, że będziesz chciał zasymulować wyrzucenie najlepsz"
"ego wyniku dla danej kostki, np. 6 oczek dla standardowej kostki. Polecenie `o"
"ne_in` zwraca prawdę (true) z prawdopodobieństwem, że zostało wyrzucone jedno "
"oczko. Idąc dalej polecenie `one_in(6)` zwróci prawdę (true) z prawdopodobieńs"
"twem 1 do 6-ciu lub fałsz. Wartości prawda (true) i fałsz (false) są bardzo pr"
"zydatne przy korzystaniu z polecenie warunkowego `if`, które omówimy w jednej "
"z kolejnych sekcji tego tutoriala."

#: 04-Randomisation.md:198
msgid "Now, go and jumble up your code with some randomness!"
msgstr "A teraz spróbuj trochę zagmatwać Twój kod i muzykę odrobiną losowości!"

#: 05-Programming-Structures.md:1
msgid "5 Programming Structures"
msgstr "5 Konstrukcje Programistyczne"

#: 05-Programming-Structures.md:3
msgid "Programming Structures"
msgstr "Konstrukcje Programistyczne"

#: 05-Programming-Structures.md:5
msgid ""
"Now that you've learned the basics of creating sounds with `play` and `sample`"
" and creating simple melodies and rhythms by `sleep`ing between sounds, you mi"
"ght be wondering what else the world of code can offer you..."
msgstr ""
"Teraz, kiedy nauczyłeś się podstaw tworzenia dźwięków z wykorzystaniem poleceń"
" `play` i `sample` oraz utworzyłeś swoje pierwsze proste melodie i rytmy, korz"
"ystając z polecenia `sleep` do tworzenia odstępów między poszczególnymi dźwięk"
"ami, zastanawiasz się zapewne, co takiego może Ci jeszcze zaoferować świat kod"
"owania..."

#: 05-Programming-Structures.md:10
msgid ""
"Well, you're in for an exciting treat! It turns out that basic programming str"
"uctures such as looping, conditionals, functions and threads give you amazingl"
"y powerful tools to express your musical ideas."
msgstr ""
"Dobrze, jesteś przygotowany na ekscytującą ucztę. Okazuje się, że proste konst"
"rukcje programistyczne, takie jak pętle (looping), instrukcje warunkowe oraz f"
"unkcje, mogą stać się dla Ciebie niesamowicie potężnymi narzędziami do wyrażen"
"ia Twoich muzycznych pomysłów."

#: 05-Programming-Structures.md:14
msgid "Let's get stuck in with the basics..."
msgstr "Zakasaj rękawy i zabieramy się do podstaw..."

#: 05.1-Blocks.md:1
msgid "5.1 Blocks"
msgstr "5.1 Bloki kodu"

#: 05.1-Blocks.md:3
msgid "Blocks"
msgstr "Bloki kodu"

#: 05.1-Blocks.md:5
msgid ""
"A structure you'll see a lot in Sonic Pi is the block. Blocks allow us to do u"
"seful things with large chunks of code. For example, with synth and sample par"
"ameters we were able to change something that happened on a single line. Howev"
"er, sometimes we want to do something meaningful to a number of lines of code."
" For example, we may wish to loop it, to add reverb to it, to only run it 1 ti"
"me out of 5, etc. Consider the following code:"
msgstr ""
"Struktura, którą będzie Ci dane zobaczyć w Sonic Pi niezwykle często, to blok "
"kodu. Bloki pozwalają nam na robienie wielu przydatnych rzeczy z dużymi kawałk"
"ami kodu. Na przykład, w przypadku parametrów syntezatorów i sampli, byliśmy w"
" stanie zmieniać coś, co działo się w obrębie jednej linii. Jednakże czasami c"
"hcielibyśmy zrobić coś znaczącego dla kilku linii kodu. Przykładowo chcielibyś"
"my zapętlić coś, potem nałożyć na to efekt reverb tak, żeby uruchomił się tylk"
"o przy 1-wszym przebiegu pętli z wszystkich 5-ciu, itd. Przyjrzyj się poniższe"
"mu kawałkowi kodu:"

#: 05.1-Blocks.md:13
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_plip\n"
"sleep 0.5\n"
"play 62"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_plip\n"
"sleep 0.5\n"
"play 62"

#: 05.1-Blocks.md:21
msgid ""
"To do something with a chunk of code, we need to tell Sonic Pi where the code "
"block *starts* and where it *ends*. We use `do` for start and `end` for end. F"
"or example:"
msgstr ""
"Abyśmy mogli zrobić coś z kawałkiem kodu, musimy powiedzieć Sonic Pi, gdzie *z"
"aczyna się* i *kończy* dany blok kodu. Aby określić początek takiego bloku, uż"
"ywamy polecenia *do*, natomiast polecenie *end* służy do określenia, gdzie dan"
"y blok się kończy. Na przykład `do`:"

#: 05.1-Blocks.md:25
#, no-wrap
msgid ""
"do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 05.1-Blocks.md:35
msgid ""
"However, this isn't yet complete and won't work (try it and you'll get an erro"
"r) as we haven't told Sonic Pi what we want to do with this *do/end block*. We"
" tell Sonic Pi this by writing some special code before the `do`. We'll see a "
"number of these special pieces of code later on in this tutorial. For now, it'"
"s important to know that wrapping your code within `do` and `end` tells Sonic "
"Pi you wish to do something special with that chunk of code."
msgstr ""
"Jednakże nie jest to jeszcze całość i nie zadziała (spróbuj uruchomić powyższy"
" kod, a zobaczysz błąd), ponieważ nie powiedzieliśmy jeszcze Sonic Pi, co chci"
"elibyśmy zrobić z naszym *blokiem* zawartym pomiędzy poleceniami *do/end*. Aby"
" powiedzieć Sonic Pi, co chcemy zrobić z tym kawałkiem, musimy napisać kawałek"
" specjalnego kodu przed poleceniem `do`. Zobaczysz jeszcze wiele takich różnyc"
"h specjalnych kawałków kodu w kolejnych sekcjach tego samouczka. Na razie najw"
"ażniejsze jest, abyś wiedział, że umieszczenie Twojego kodu pomiędzy polecenia"
" `do` i `end`, mówi Sonic Pi, że chciałbyś zrobić z tym kawałkiem kodu coś spe"
"cjalnego."

#: 05.2-Iteration-and-Loops.md:1
msgid "5.2 Iteration and Loops"
msgstr "5.2 Iteracja i Pętle"

#: 05.2-Iteration-and-Loops.md:3
msgid "Iteration and Loops"
msgstr "Iteracja i Pętle"

#: 05.2-Iteration-and-Loops.md:5
msgid ""
"So far we've spent a lot of time looking at the different sounds you can make "
"with `play` and `sample` blocks. We've also learned how to trigger these sound"
"s through time using `sleep`."
msgstr ""
"Do tej pory spędziliśmy sporo czasu, patrząc na różne dźwięki, które możesz zr"
"obić użyciem bloków `play` i `sample`. Nauczyliśmy się również, w jaki sposób "
"uruchamiać te dźwięki na przestrzeni czasu, używając polecenia `sleep`."

#: 05.2-Iteration-and-Loops.md:9
msgid ""
"As you've probably found out, there's a *lot* of fun you can have with these b"
"asic building blocks. However, a whole new dimension of fun opens up when you "
"start using the power of code to structure your music and compositions. In the"
" next few sections we'll explore some of these powerful new tools. First up is"
" iteration and loops."
msgstr ""
"Jak zapewne już zauważyłeś, przy korzystaniu z tych kilku podstawowych bloków,"
" możesz mieć *całą masę frajdy*. Jednakże kiedy zaczniesz wykorzystywać możliw"
"ości kodu do porządkowania Twojej muzyki i kompozycji, Twoim oczom ukaże się z"
"upełnie nowy wymiar możliwości i zabawy. W najbliższych kilku sekcjach poznasz"
" kilka z tych potężnych narzędzi. Na początek zaczniemy od iteracji i pętli."

#: 05.2-Iteration-and-Loops.md:15
msgid "Repetition"
msgstr "Powtórzenie"

#: 05.2-Iteration-and-Loops.md:17
msgid ""
"Have you written some code you'd like to repeat a few times? For example, you "
"might have something like this:"
msgstr ""
"Czy zdarzyło Ci się napisać kawalek kodu, który chciałbyś powtórzyć kilka razy"
"? Przypuścmy, że napisałeś coś w tym stylu:"

#: 05.2-Iteration-and-Loops.md:20
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"

#: 05.2-Iteration-and-Loops.md:29
msgid ""
"What if we wished to repeat this 3 times? Well, we could do something simple a"
"nd just copy and paste it three times:"
msgstr ""
"Co, jeśli chciałeś, aby powyższy kawałek powtórzył się 3 razy? Najprostszą rze"
"czą, którą mógłbyś zrobić, to po prostu skopiować i wkleić powyższy kawałek ko"
"du trzy razy:"

#: 05.2-Iteration-and-Loops.md:32
#, no-wrap
msgid ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"
msgstr ""
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25\n"
"play 50\n"
"sleep 0.5\n"
"sample :elec_blup\n"
"sleep 0.5\n"
"play 62\n"
"sleep 0.25"

#: 05.2-Iteration-and-Loops.md:55
msgid ""
"Now that's a lot of code! What happens if you want to change the sample to `:e"
"lec_plip`? You're going to have to find all the places with the original `:ele"
"c_blup` and switch them over. More importantly, what if you wanted to repeat t"
"he original piece of code 50 times or 1000? Now that would be a lot of code, a"
"nd a lot of lines of code to alter if you wanted to make a change."
msgstr ""
"Zobacz, ile kodu! Pomyśl, co trzeba by było zrobić, gdybyś chciał zmienić samp"
"el na `:elec_plip`? Musiałbyś wtedy znaleźć w kodzie wszystkie miejsca, gdzie "
"użyłeś oryginalnego sampla `:elec_blup`, a zmienić je ręcznie. Ale to i tak ni"
"c. Pomyśl, co by było, gdybyś chciał powtórzyć oryginalny blok kodu 50 albo 10"
"00 razy? Dopiero teraz byłoby to dużo kodu, bardzo dużo kodu, który musiałbyś "
"zmienić, gdybyś chciał dokonać tak prostej zmiany, jak przełączenie się na inn"
"y sampel."

#: 05.2-Iteration-and-Loops.md:62
msgid "Iteration"
msgstr "Iteracja"

#: 05.2-Iteration-and-Loops.md:64
msgid ""
"In fact, repeating the code should be as easy as saying *do this three times*."
" Well, it pretty much is. Remember our old friend the code block? We can use i"
"t to mark the start and end of the code we'd like to repeat three times. We th"
"en use the special code `3.times`. So, instead of writing *do this three times"
"*, we write `3.times do` - that's not too hard. Just remember to write `end` a"
"t the end of the code you'd like to repeat:"
msgstr ""
"W rzeczywistości powtórzenie kodu powinno być tak proste, jak powiedzenie *zró"
"b to trzy razy*. Dobrze, w dużym stopniu tak jest. Pamiętasz naszego starego d"
"obrego znajomego - blok kodu? Możemy użyć go, aby zaznaczyć miejsce początku i"
" końca kodu, który chcielibyśmy powtórzyć 3 razy. Następnie wystarczy, że użyj"
"emy specjalnego kawałka kodu `3.times` (3.razy). Zamiast więc napisać *zrób to"
" trzy razy*, napiszemy `3.times do` - to nie jest zbyt trudne. Pamiętaj tylko,"
" aby napisać polecenie `end` na końcu bloku kodu, który zamierzać powtórzyć:"

#: 05.2-Iteration-and-Loops.md:72
#, no-wrap
msgid ""
"3.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_blup\n"
"  sleep 0.5\n"
"  play 62\n"
"  sleep 0.25\n"
"end"
msgstr ""
"3.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_blup\n"
"  sleep 0.5\n"
"  play 62\n"
"  sleep 0.25\n"
"end"

#: 05.2-Iteration-and-Loops.md:83
msgid ""
"Now isn't that much neater than cutting and pasting! We can use this to create"
" lots of nice repeating structures:"
msgstr ""
"Przyznasz, że takie podejście jest dużo bardziej eleganckie niż kopiowanie i w"
"klejanie! Możemy użyć tego specjalnego polecenia to tworzenia wielu fajnych po"
"wtarzających się struktur:"

#: 05.2-Iteration-and-Loops.md:86
#, no-wrap
msgid ""
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end\n"
"8.times do\n"
"  play 55, release: 0.2\n"
"  sleep 0.25\n"
"end\n"
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end"
msgstr ""
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end\n"
"8.times do\n"
"  play 55, release: 0.2\n"
"  sleep 0.25\n"
"end\n"
"4.times do\n"
"  play 50\n"
"  sleep 0.5\n"
"end"

#: 05.2-Iteration-and-Loops.md:103
msgid "Nesting Iterations"
msgstr "Zagnieżdżanie Iteracji"

#: 05.2-Iteration-and-Loops.md:105
msgid ""
"We can put iterations inside other iterations to create interesting patterns. "
"For example:"
msgstr ""
"Możemy umieszczać jedne iteracje wewnątrz innych iteracji do utworzenia ciekaw"
"ych wzorców. Na przykład:"

#: 05.2-Iteration-and-Loops.md:108
#, no-wrap
msgid ""
"4.times do\n"
"  sample :drum_heavy_kick\n"
"  2.times do\n"
"    sample :elec_blip2, rate: 2\n"
"    sleep 0.25\n"
"  end\n"
"  sample :elec_snare\n"
"  4.times do\n"
"    sample :drum_tom_mid_soft\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"4.times do\n"
"  sample :drum_heavy_kick\n"
"  2.times do\n"
"    sample :elec_blip2, rate: 2\n"
"    sleep 0.25\n"
"  end\n"
"  sample :elec_snare\n"
"  4.times do\n"
"    sample :drum_tom_mid_soft\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 05.2-Iteration-and-Loops.md:123
msgid "Looping"
msgstr "Zapętlanie"

#: 05.2-Iteration-and-Loops.md:125
msgid ""
"If you want something to repeat a lot of times, you might find yourself using "
"really large numbers such as `1000.times do`. In this case, you're probably be"
"tter off asking Sonic Pi to repeat forever (at least until you press the stop "
"button!). Let's loop the amen break forever:"
msgstr ""
"Jeśli chcesz powtórzyć coś wiele razy, możesz złapać się na tym, że będziesz p"
"odawał naprawdę bardzo duże liczby jako parametr iteracji, na przykład `1000.t"
"imes do`. W takim przypadku zapewne dużo lepiej byłoby poprosić Sonic Pi aby p"
"owtarzać dany wzorzec w nieskończoność (a przynajmniej do momentu, w którym na"
"ciśniesz przycisk Stop, aby zatrzymać odtwarzanie!). Spróbujmy zapętlić w nies"
"kończoność sampel amen break:"

#: 05.2-Iteration-and-Loops.md:130
#, no-wrap
msgid ""
"loop do\n"
"  sample :loop_amen\n"
"  sleep sample_duration :loop_amen\n"
"end"
msgstr ""
"loop do\n"
"  sample :loop_amen\n"
"  sleep sample_duration :loop_amen\n"
"end"

#: 05.2-Iteration-and-Loops.md:137
msgid ""
"The important thing to know about loops is that they act like black holes for "
"code. Once the code enters a loop it can never leave until you press stop - it"
" will just go round and round the loop forever. This means if you have code af"
"ter the loop you will *never* hear it. For example, the cymbal after this loop"
" will never play:"
msgstr ""
"Bardzo ważną rzeczą do zapamiętania o pętlach jest to, że dla kodu mają one ta"
"kie same zachowanie jak czarne dziury. Jak tylko kod raz już wejdzie w daną pę"
"tlę, może już jej nigdy nie opuścić, chyba że naciśniesz przycisk Stop - nasza"
" pętla będzie się kręcić w kółko w nieskończoność. Oznacza to, że jeśli masz j"
"akiś kod, który jest umieszczony po pętli, to *nigdy* go nie usłyszysz. Na prz"
"ykład talerz, który znajduje się poniżej poniższej pętli, nie zostanie zagrany"
" nigdy:"

#: 05.2-Iteration-and-Loops.md:143
#, no-wrap
msgid ""
"loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"sample :drum_cymbal_open"
msgstr ""
"loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"sample :drum_cymbal_open"

#: 05.2-Iteration-and-Loops.md:152
msgid "Now, get structuring your code with iteration and loops!"
msgstr "A teraz spróbuj poprawić strukturę Twojego kodu za pomocą iteracji i pętli!"

#: 05.3-Conditionals.md:1
msgid "5.3 Conditionals"
msgstr "5.3 Instrukcje Warunkowe"

#: 05.3-Conditionals.md:3
msgid "Conditionals"
msgstr "Instrukcje Warunkowe"

#: 05.3-Conditionals.md:5
msgid ""
"A common thing you'll likely find yourself wanting to do is to not only play a"
" random note (see the previous section on randomness) but also make a random d"
"ecision and based on the outcome run some code or some other code. For example"
", you might want to randomly play a drum or a cymbal. We can achieve this with"
" an `if` statement."
msgstr ""
"Bardzo prawdopodobne jest, że często będziesz chciał zagrać nie tylko losową n"
"utę (patrz poprzednia sekcja dot. losowości), lecz również będziesz chciał pod"
"ejmować losowe decyzje i na podstawie ich wyniku uruchomić taki lub inny kod. "
"Na przykład mógłbyś chcieć, aby losowo zagrać bęben lub talerz perkusji. Możem"
"y tego dokonać, używając polecenia warunkowego `if` (jeśli)."

#: 05.3-Conditionals.md:11
msgid "Flipping a Coin"
msgstr "Rzut Monetą"

#: 05.3-Conditionals.md:13
msgid ""
"So, let's flip a coin: if it's heads, play a drum, if it's tails, play a cymba"
"l. Easy. We can emulate a coin flip with our `one_in` function (introduced in "
"the section on randomness) specifying a probability of 1 in 2: `one_in(2)`. We"
" can then use the result of this to decide between two pieces of code, the cod"
"e to play the drum and the code to play the cymbal:"
msgstr ""
"Spróbujmy rzucić monetą: jeśli (if) wypadnie orzeł, zagraj bęben, jeśli wypadn"
"ie reszka (else), zagraj talerz. Proste. Możemy zasymulować rzut monetą, wykor"
"zystując naszą funkcję `one_in` (poznaliśmy ją w sekcji dotyczącej losowości),"
" określając prawdopodobieństwo wyboru 1 z 2: `one_in(2)`. Następnie możemy uży"
"ć tego wyniku, aby wybrać do zagrania jeden z dwóch kawałków kodu - jeden, któ"
"ry zagra bęben i drugi, który zagra talerz:"

#: 05.3-Conditionals.md:20
#, no-wrap
msgid ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"  end\n"
"  \n"
"  sleep 0.5\n"
"  \n"
"end"
msgstr ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"  end\n"
"  \n"
"  sleep 0.5\n"
"  \n"
"end"

#: 05.3-Conditionals.md:34
msgid "Notice that `if` statements have three parts:"
msgstr "Zauważ, że polecenie warunkowe `if` posiada 3 części:"

#: 05.3-Conditionals.md:36
msgid "The question to ask"
msgstr "Postawienie pytania (warunku)"

#: 05.3-Conditionals.md:37
msgid "The first choice of code to run (if the answer to the question is yes)"
msgstr ""
"Pierwszy wybór kodu do uruchomienia (jeśli odpowiedź na nasze pytanie/warunek "
"brzmi tak)"

#: 05.3-Conditionals.md:38
msgid "The second choice of code to run (if the answer to the question is no)"
msgstr ""
"Drugi wybór kodu do uruchomienia (jeśli odpowiedź na nasze pytanie/warunek brz"
"mi nie)"

#: 05.3-Conditionals.md:40
msgid ""
"Typically in programming languages, the notion of yes is represented by the te"
"rm `true` and the notion of no is represented by the term `false`. So we need "
"to find a question that will give us a `true` or `false` answer which is exact"
"ly what `one_in` does."
msgstr ""
"Zazwyczaj w językach programowania pojęcie odpowiedzi \"tak\" jest reprezentowan"
"e przez termin `true` (prawda), natomiast pojęcie odpowiedzi \"nie\" jest reprez"
"entowane przez termin `false' (nieprawda, fałsz). Do nas więc należy znalezien"
"ie odpowiedniego pytania, którego zadanie zwróci nam odpowiedź `true` (prawda)"
" lub `false` (fałsz). W tym przypadku naszym pytaniem jest uruchomienie funkcj"
"i `one_in`."

#: 05.3-Conditionals.md:45
msgid ""
"Notice how the first choice is wrapped between the `if` and the `else` and the"
" second choice is wrapped between the `else` and the `end`. Just like do/end b"
"locks you can put multiple lines of code in either place. For example:"
msgstr ""
"Zauważ, że pierwszy wybór jest wpasowany pomiędzy polecenia `if` (jeśli) a `el"
"se` (w przeciwnym razie), natomiast drugi wybór mieści się pomiędzy poleceniam"
"i `else` i `end` (koniec). Tak samo, jak w przypadku bloków kodu do/end, pomię"
"dzy obiema tymi przestrzeniami możesz napisać wiele linii kodu. Oto przykład:"

#: 05.3-Conditionals.md:50
#, no-wrap
msgid ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"    sleep 0.5\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"    sleep 0.25\n"
"  end\n"
"  \n"
"end"
msgstr ""
"loop do\n"
"  if one_in(2)\n"
"    sample :drum_heavy_kick\n"
"    sleep 0.5\n"
"  else\n"
"    sample :drum_cymbal_closed\n"
"    sleep 0.25\n"
"  end\n"
"end"

#: 05.3-Conditionals.md:64
msgid ""
"This time we're sleeping for a different amount of time depending on which cho"
"ice we make."
msgstr ""
"Tym razem, w zależności od tego, jaka decyzja została wylosowana, śpimy (`slee"
"p`) przez różne długości czasu."

#: 05.3-Conditionals.md:68
msgid "Simple if"
msgstr "Proste polecenie if"

#: 05.3-Conditionals.md:70
msgid ""
"Sometimes you want to optionally execute just one line of code. This is possib"
"le by placing `if` and then the question at the end. For example:"
msgstr ""
"Czasami chciałbyś wykonać opcjonalnie tylko jedną określoną linię kodu. Aby to"
" osiągnąć, wystarczy umieścić polecenie `if` wraz z naszym pytaniem (warunkiem"
") na końcu tej linii. Oto przykład:"

#: 05.3-Conditionals.md:73
#, no-wrap
msgid ""
"use_synth :dsaw\n"
"loop do\n"
"  play 50, amp: 0.3, release: 2\n"
"  play 53, amp: 0.3, release: 2 if one_in(2)\n"
"  play 57, amp: 0.3, release: 2 if one_in(3)\n"
"  play 60, amp: 0.3, release: 2 if one_in(4)\n"
"  sleep 1.5\n"
"end"
msgstr ""
"use_synth :dsaw\n"
"loop do\n"
"  play 50, amp: 0.3, release: 2\n"
"  play 53, amp: 0.3, release: 2 if one_in(2)\n"
"  play 57, amp: 0.3, release: 2 if one_in(3)\n"
"  play 60, amp: 0.3, release: 2 if one_in(4)\n"
"  sleep 1.5\n"
"end"

#: 05.3-Conditionals.md:85
msgid ""
"This will play chords of different numbers with the chance of each note playin"
"g having a different probability."
msgstr ""
"Powyższy kod zagra akordy złożone z różnych liczb. Szansa na to, że każda z po"
"danych nut zostanie zagrana, jest różna, gdyż każda z linijek (oprócz pierwsze"
"j) jest opatrzona warunkiem o różnym prawdopodobieństwie wystąpienia."

#: 05.4-Threads.md:1
msgid "5.4 Threads"
msgstr "5.4 Wątki"

#: 05.4-Threads.md:3
msgid "Threads"
msgstr "Wątki"

#: 05.4-Threads.md:5
msgid ""
"So you've made your killer bassline and a phat beat. How do you play them at t"
"he same time? One solution is to weave them together manually - play some bass"
", then a bit of drums, then more bass... However, the timing soon gets hard to"
" think about, especially when you start weaving in more elements."
msgstr ""
"A więc udało Ci się przygotować zabójczy bassline oraz tłusty beat. W jaki spo"
"sób udaje Ci się je zagrać w tym samym czasie? Jednym z możliwych rozwiązań je"
"st przeplecenie ich razem ręcznie - najpierw zagrać jakiś bas, potem trochę bę"
"bnów, potem znowu bas... Jednakże bardzo szybko chronometraż stanie się czymś,"
" o czym będzie ciężko myśleć, zwłaszcza kiedy zaczniemy wplatać do naszej komp"
"ozycji kolejne elementy."

#: 05.4-Threads.md:11
msgid ""
"What if Sonic Pi could weave things for you automatically? Well, it can, and y"
"ou do it with a special thing called a *thread*."
msgstr ""
"A co, jeśli Sonic Pi mógłby przeplatać różne elementy za Ciebie automagicznie?"
" Takie coś jest możliwe i możesz to robić, używając specjalnego polecenia, naz"
"ywanego wątkiem - *thread*."

#: 05.4-Threads.md:14
msgid "Infinite Loops"
msgstr "Nieskończone Pętle"

#: 05.4-Threads.md:16
msgid ""
"To keep this example simple, you'll have to imagine that this is a phat beat a"
"nd a killer bassline:"
msgstr ""
"Aby sprawić, by kolejny przykład był prosty, musisz sobie wyobrazić, jak wyglą"
"da ten tłusty beat i zabójczy bassline:"

#: 05.4-Threads.md:19
#, no-wrap
msgid ""
"loop do\n"
"  sample :drum_heavy_kick\n"
"  sleep 1\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"
msgstr ""
"loop do\n"
"  sample :drum_heavy_kick\n"
"  sleep 1\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"

#: 05.4-Threads.md:32
msgid ""
"As we've discussed previously, loops are like *black holes* for the program. O"
"nce you enter a loop you can never exit from it until you hit stop. How do we "
"play both loops at the same time? We have to tell Sonic Pi that we want to sta"
"rt something at the same time as the rest of the code. This is where threads c"
"ome to the rescue."
msgstr ""
"Jak już wcześniej mówiliśmy, pętle są jak *czarne dziury* dla naszych programó"
"w. Gdy już raz wejdziesz do pętli, nie wyjdziesz z niej nigdy, chyba że naciśn"
"iesz przycisk Stop. W jaki zatem sposób możemy zagrać obie pętle jednocześnie?"
" Musimy powiedzieć Sonic Pi, że chcemy rozpocząć coś w tym samym czasie, gdy u"
"ruchamiamy pozostały kod. To jest właśnie moment, w którym z pomocą przychodzą"
" nam Wątki (ang. threads)."

#: 05.4-Threads.md:38
msgid "Threads to the Rescue"
msgstr "Wątki na Ratunek"

#: 05.4-Threads.md:40
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end"

#: 05.4-Threads.md:55
msgid ""
"By wrapping the first loop in an `in_thread` do/end block we tell Sonic Pi to "
"run the contents of the do/end block at *exactly* the same time as the next st"
"atement after the do/end block (which happens to be the second loop). Try it a"
"nd you'll hear both the drums and the bassline weaved together!"
msgstr ""
"Jeśli otoczymy pierwszą pętlę blokiem kodu do/end `in_thread`, to w ten sposób"
" powiemy Sonic Pi, żeby uruchomił zawartość tego bloku do/end *dokładnie* w ty"
"m samym czasie, gdy zostają uruchomione kolejne polecenia, które znajdują się "
"tuż za blokiem kodu (w tym przypadku jest to druga pętla). Spróbuj uruchomić t"
"en kod, a usłysz jednocześnie bębny oraz bassline, które są przeplecione i gra"
"ją jednocześnie!"

#: 05.4-Threads.md:61
msgid "Now, what if we wanted to add a synth on top. Something like:"
msgstr ""
"A co teraz, jeśli chcielibyśmy dodać jeszcze jakiś syntezator (synth)? Coś w t"
"ym stylu:"

#: 05.4-Threads.md:63
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :fm\n"
"  play 40, release: 0.2\n"
"  sleep 0.5\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"

#: 05.4-Threads.md:84
msgid ""
"Now we have the same problem as before. The first loop is played at the same t"
"ime as the second loop due to the `in_thread`. However, *the third loop is nev"
"er reached*. We therefore need another thread:"
msgstr ""
"Znowu mamy taki sam problem, jak przed chwilą. Pierwsza pętla jest uruchomiona"
" w tym samym momencie, co druga pętla, ze względu na to, że użyliśmy polecenia"
" `in_thread`. Jednakże *trzecia pętla nigdy nie zostaje uruchomiona*. Żeby to "
"naprawić, potrzebujemy kolejnego wątku (thread):"

#: 05.4-Threads.md:88
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    use_synth :fm\n"
"    play 40, release: 0.2\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :drum_heavy_kick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    use_synth :fm\n"
"    play 40, release: 0.2\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"loop do\n"
"  use_synth :zawa\n"
"  play 52, release: 2.5, phase: 2, amp: 0.5\n"
"  sleep 2\n"
"end"

#: 05.4-Threads.md:111
msgid "Runs as threads"
msgstr "Uruchamianie w Wątkach"

#: 05.4-Threads.md:113
msgid ""
"What may surprise you is that when you press the Run button, you're actually c"
"reating a new thread for the code to run. This is why pressing it multiple tim"
"es will layer sounds over each other. As the runs themselves are threads, they"
" will automatically weave the sounds together for you."
msgstr ""
"Coś, co może być dla Ciebie zaskakujące, to fakt, że gdy naciskasz przycisk Ur"
"uchom, to w rzeczywistości tworzysz nowy wątek do uruchomienia twojego kodu. D"
"latego też, gdy naciśniesz przycisk Uruchom, wiele razy dźwięki zaczną nakłada"
"ć się na siebie. Jako że kolejne uruchomienia same są po prostu wątkami, to dź"
"więki zostaną dla Ciebie automatycznie poprzeplatane."

#: 05.4-Threads.md:119
msgid "Scope"
msgstr "Zasięg"

#: 05.4-Threads.md:121
msgid ""
"As you learn how to master Sonic Pi, you'll learn that threads are the most im"
"portant building blocks for your music. One of the important jobs they have is"
" to isolate the notion of *current settings* from other threads. What does thi"
"s mean? Well, when you switch synths using `use_synth` you're actually just sw"
"itching the synth in the *current thread* - no other thread will have their sy"
"nth switched. Let's see this in action:"
msgstr ""
"Gdy już nauczysz się, w jaki sposób opanować Sonic Pi, nauczysz się również te"
"go, że wątki są jednym z najważniejszych materiałów używanych do tworzenia Two"
"jej muzyki. Jednym z ważnych zadań, które do nich należą, to izolacja pojęcia "
"*aktualnych ustawień* od innych wątków. Co to oznacza? Otóż, kiedy zmieniasz s"
"yntezatory poleceniem `use_synth`, w rzeczywistości po prostu zmieniasz syntez"
"ator dla *aktualnego wątku (current thread)* - w żadnym innym wątku syntezator"
" się nie zmieni. Zobaczmy te zachowanie w akcji:"

#: 05.4-Threads.md:129
#, no-wrap
msgid ""
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  use_synth :tb303\n"
"  play 50\n"
"end\n"
"sleep 1\n"
"play 50"
msgstr ""
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  use_synth :tb303\n"
"  play 50\n"
"end\n"
"sleep 1\n"
"play 50"

#: 05.4-Threads.md:142
msgid ""
"Notice how the middle sound was different to the others? The `use_synth` state"
"ment only affected the thread it was in and not the outer main run thread."
msgstr ""
"Zauważyłeś, że środkowy dźwięk był inny od pozostałych? Polecenie `use_synth` "
"wpłynęło tylko na to, co zostało uruchomione w wątku, natomiast pozostała, zew"
"nętrzna część kodu została nietknięta."

#: 05.4-Threads.md:146
msgid "Inheritance"
msgstr "Dziedziczenie"

#: 05.4-Threads.md:148
msgid ""
"When you create a new thread with `in_thread`, the new thread will automatical"
"ly inherit all of the current settings from the current thread. Let's see that"
":"
msgstr ""
"Kiedy utworzysz nowy wątek z wykorzystaniem `in_thread`, nowy wątek automatycz"
"nie odziedziczy wszystkie aktualne ustawienia z bieżącego wątku. Spójrzmy na t"
"aki kod:"

#: 05.4-Threads.md:152
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  play 55\n"
"end"
msgstr ""
"use_synth :tb303\n"
"play 50\n"
"sleep 1\n"
"in_thread do\n"
"  play 55\n"
"end"

#: 05.4-Threads.md:162
msgid ""
"Notice how the second note is played with the `:tb303` synth even though it wa"
"s played from a separate thread? Any of the settings modified with the various"
" `use_*` functions will behave in the same way."
msgstr ""
"Zauważyłeś, że druga nuta zostaje zagrana z użyciem syntezatora `:tb303` mimo "
"to, że została zagrana z oddzielnego wątku? Każde ustawienie zmienione przy uż"
"yciu różnych funkcji `use_*`, będą zachowywać się tak samo."

#: 05.4-Threads.md:166
msgid ""
"When threads are created, they inherit all the settings from their parent but "
"they don't share any changes back."
msgstr ""
"Kiedy są tworzone kolejne wątki, dziedziczą one wszystkie ustawienia ze swoich"
" rodziców, natomiast jakiekolwiek zmiany nie są udostępniane z powrotem."

#: 05.4-Threads.md:169
msgid "Naming Threads"
msgstr "Nazywanie Wątków"

#: 05.4-Threads.md:171
msgid "Finally, we can give our threads names:"
msgstr "Finalnie możemy nadawać naszym Wątkom nazwy:"

#: 05.4-Threads.md:173
#, no-wrap
msgid ""
"in_thread(name: :bass) do\n"
"  loop do\n"
"    use_synth :prophet\n"
"    play chord(:e2, :m7).choose, release: 0.6\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread(name: :drums) do\n"
"  loop do\n"
"    sample :elec_snare\n"
"    sleep 1\n"
"  end\n"
"end"
msgstr ""
"in_thread(name: :bass) do\n"
"  loop do\n"
"    use_synth :prophet\n"
"    play chord(:e2, :m7).choose, release: 0.6\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread(name: :drums) do\n"
"  loop do\n"
"    sample :elec_snare\n"
"    sleep 1\n"
"  end\n"
"end"

#: 05.4-Threads.md:190
msgid ""
"Look at the log pane when you run this code. See how the log reports the name "
"of the thread with the message?"
msgstr ""
"Spójrz na panel z logiem, kiedy uruchomisz ten kod. Czy widzisz, jak w logach,"
" przy kolejnych wiadomościach, pojawiają się nazwy wątków?"

#: 05.4-Threads.md:193
#, no-wrap
msgid ""
"[Run 36, Time 4.0, Thread :bass]\n"
" |- synth :prophet, {release: 0.6, note: 47}"
msgstr ""
"[Run 36, Time 4.0, Thread :bass]\n"
" |- synth :prophet, {release: 0.6, note: 47}"

#: 05.4-Threads.md:198
msgid "Only One Thread per Name Allowed"
msgstr "Tylko Jeden Wątek na Jedną Nazwę"

#: 05.4-Threads.md:200
msgid ""
"One last thing to know about named threads is that only one thread of a given "
"name may be running at the same time. Let's explore this. Consider the followi"
"ng code:"
msgstr ""
"Ostatnią rzeczą, którą powinieneś wiedzieć o wątkach posiadających swoją nazwę"
", to to, że w tym samym czasie może być uruchomiony tylko jeden wątek o tej sa"
"mej nazwie. Spróbujmy to zbadać. Weźmy pod uwagę następujący kod:"

#: 05.4-Threads.md:204
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"

#: 05.4-Threads.md:213
msgid ""
"Go ahead and paste that into a buffer and press the Run button. Press it again"
" a couple of times. Listen to the cacophony of multiple amen breaks looping ou"
"t of time with each other. Ok, you can press Stop now."
msgstr ""
"Śmiało wklej powyższy kod do obszaru roboczego i naciśnij przycisk Uruchom. Na"
"stępnie naciśnij go jeszcze kilka razy. Usłyszysz kakofonię wielu zapętlonych "
"w czasie sampli amen break. Okej, możesz teraz nacisnąć przycisk Stop."

#: 05.4-Threads.md:217
msgid ""
"This is the behaviour we've seen again and again - if you press the Run button"
", sound layers on top of any existing sound. Therefore if you have a loop and "
"press the Run button three times, you'll have three layers of loops playing si"
"multaneously."
msgstr ""
"To jest zachowanie, które widzieliśmy już nie raz - jeśli naciśniesz przycisk "
"Uruchom, dźwięk zostanie nałożony na istniejące już dźwięki. Dlatego jeśli mas"
"z pętle i naciśniesz przycisk Uruchom trzy razy, to będziesz miał trzy warstwy"
" pętli, które będą grane jednocześnie."

#: 05.4-Threads.md:222
msgid "However, with named threads it is different:"
msgstr "Jednakże w przypadku nazwanych wątków jest inaczej:"

#: 05.4-Threads.md:224
#, no-wrap
msgid ""
"in_thread(name: :amen) do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"
msgstr ""
"in_thread(name: :amen) do\n"
"  loop do\n"
"    sample :loop_amen\n"
"    sleep sample_duration :loop_amen\n"
"  end\n"
"end"

#: 05.4-Threads.md:233
msgid ""
"Try pressing the Run button multiple times with this code. You'll only ever he"
"ar one amen break loop. You'll also see this in the log:"
msgstr ""
"Spróbuj teraz dla tego kodu nacisnąć przycisk Uruchom kilkukrotnie. Nie usłysz"
"ysz teraz więcej niż jedną pętlę amen na raz. W logach zauważysz również taką "
"wiadomość:"

#: 05.4-Threads.md:236
#, no-wrap
msgid "==> Skipping thread creation: thread with name :amen already exists."
msgstr "==> Skipping thread creation: thread with name :amen already exists."

#: 05.4-Threads.md:240
msgid ""
"Sonic Pi is telling you that a thread with the name `:amen` is already playing"
", so it's not creating another."
msgstr ""
"Sonic Pi mówi Ci, że wątek o nazwie `:amen` już istnieje, nie zostanie więc ut"
"worzony kolejny."

#: 05.4-Threads.md:243
msgid ""
"This behaviour may not seem immediately useful to you now - but it will be ver"
"y handy when we start to live code..."
msgstr ""
"Takie zachowanie może się teraz nie wydawać do niczego przydatne - ale stanie "
"się bardzo użyteczne, kiedy zaczniemy kodować na żywo..."

#: 05.5-Functions.md:1
msgid "5.5 Functions"
msgstr "5.5 Funkcje"

#: 05.5-Functions.md:3
msgid "Functions"
msgstr "Funkcje"

#: 05.5-Functions.md:5
msgid ""
"Once you start writing lots of code, you may wish to find a way to organise an"
"d structure things to make them tidier and easier to understand. Functions are"
" a very powerful way to do this. They give us the ability to give a name to a "
"bunch of code. Let's take a look."
msgstr ""
"Gdy już zaczniesz pisać znaczne ilości kodu, to w pewnym momencie będziesz chc"
"iał znaleźć sposób, aby uporządkować i poukładać go tak, by był on elegancki i"
" łatwiejszy do zrozumienia. Funkcje są bardzo skutecznym sposobem, który to um"
"ożliwia. Pozwalają nam nadać kawałkowi kodu nazwę. Rzućmy na to okiem."

#: 05.5-Functions.md:10
msgid "Defining functions"
msgstr "Definiowane Funkcji"

#: 05.5-Functions.md:12
#, no-wrap
msgid ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 2\n"
"end"
msgstr ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 2\n"
"end"

#: 05.5-Functions.md:21
msgid ""
"Here, we've defined a new function called `foo`. We do this with our old frien"
"d the do/end block and the magic word `define` followed by the name we wish to"
" give to our function. We didn't have to call it `foo`, we could have called i"
"t anything we want such as `bar`, `baz` or ideally something meaningful to you"
" like `main_section` or `lead_riff`."
msgstr ""
"W powyższym przykładzie zdefiniowaliśmy nową funkcję zwaną `foo`. Zrobiliśmy t"
"o, używając naszego dobrego znajomego bloku do/end oraz magicznego słowa `defi"
"ne`, po którym podaliśmy nazwę, którą chcemy nadać naszej funkcji. Nie musieli"
"śmy nazywać jej `foo`, mogliśmy nazwać ją jak tylko mamy ochotę, np. `bar`, `b"
"az` albo idealnie pasowałoby, gdybyśmy nadali jakąś nazwę, która coś znaczy, n"
"p. `czesc_glowna` albo `glowna_gitara`."

#: 05.5-Functions.md:27
msgid ""
"Remember to prepend a colon `:` to the name of your function when you define i"
"t."
msgstr ""
"Pamiętaj tylko, aby poprzedzić nazwę dwukropkiem `:`, gdy definiujesz nową fun"
"kcję."

#: 05.5-Functions.md:30
msgid "Calling functions"
msgstr "Uruchamianie Funkcji"

#: 05.5-Functions.md:32
msgid "Once we have defined our function we can call it by just writing its name:"
msgstr ""
"Skoro już udało się nam zdefiniować naszą funkcję, możemy uruchomić ją, wpisuj"
"ąc jej nazwę:"

#: 05.5-Functions.md:35
#, no-wrap
msgid ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 0.5\n"
"end\n"
"foo\n"
"sleep 1\n"
"2.times do\n"
"  foo\n"
"end"
msgstr ""
"define :foo do\n"
"  play 50\n"
"  sleep 1\n"
"  play 55\n"
"  sleep 0.5\n"
"end\n"
"foo\n"
"sleep 1\n"
"2.times do\n"
"  foo\n"
"end"

#: 05.5-Functions.md:52
msgid ""
"We can even use `foo` inside iteration blocks or anywhere we may have written "
"`play` or `sample`. This gives us a great way to express ourselves and to crea"
"te new meaningful words for use in our compositions."
msgstr ""
"Możemy użyć naszej funkcji `foo` wewnątrz bloku iteracji albo gdziekolwiek ind"
"ziej, gdzie mogliśmy do tej pory używać polecenia `play` i `sample`. Pozwala n"
"am to w bardzo fajny sposób na wyrażanie siebie i na tworzenie nowych słów, kt"
"óre znaczą coś nowego, i używanie ich w naszych kompozycjach."

#: 05.5-Functions.md:56
msgid "Functions are remembered across runs"
msgstr "Funkcje są zapamiętywane pomiędzy poszczególnymi uruchomieniami"

#: 05.5-Functions.md:58
msgid ""
"So far, every time you've pressed the Run button, Sonic Pi has started from a "
"completely blank slate. It knows nothing except for what is in the buffer. You"
" can't reference code in another buffer or another thread. However, functions "
"change that. When you define a function, Sonic Pi *remembers* it. Let's try it"
". Delete all the code in your buffer and replace it with:"
msgstr ""
"Jak do tej pory, za każdym razem, gdy nacisnąłeś przycisk Uruchom, Sonic Pi za"
"czynał od czystej tablicy. Nie wiedział nic poza tym, co znajduje się aktualne"
"j przestrzeni roboczej. Nie możesz odnosić się do kodu w innych przestrzeniach"
" roboczych lub innym wątku. Możliwość korzystania z funkcji zmienia to. Kiedy "
"zdefiniujesz funkcję, Sonic Pi *zapamiętuje* ją. Spróbujmy to wykorzystać. Usu"
"ń cały kod znajdujący się w Twojej aktualnej przestrzeni roboczej i zastąp go "
"następującą linią:"

#: 05.5-Functions.md:65
#, no-wrap
msgid "foo"
msgstr "foo"

#: 05.5-Functions.md:69
msgid ""
"Press the Run button - and hear your function play. Where did the code go? How"
" did Sonic Pi know what to play? Sonic Pi just remembered your function - so e"
"ven after you deleted it from the buffer, it remembered what you had typed. Th"
"is behaviour only works with functions created using `define` (and `defonce`)."
msgstr ""
"Naciśnij przycisk Uruchom - usłyszysz, jak gra Twoja funkcja. Skąd się wziął t"
"en kod? Skąd Sonic Pi wiedział, co powinien zagrać? Sonic Pi po prostu zapamię"
"tał wcześniej Twoją funkcję - więc nawet po tym, jak już ją skasujesz z Twojej"
" przestrzeni roboczej, to będzie on pamiętał to, co wcześniej napisałeś. Ten m"
"echanizm działa tylko z funkcjami stworzonymi z wykorzystaniem polecenia `defi"
"ne` (oraz `defonce`)."

#: 05.5-Functions.md:75
msgid "Parameterised functions"
msgstr "Funkcje z Parametrami"

#: 05.5-Functions.md:77
msgid ""
"You might be interested in knowing that just like you can pass min and max val"
"ues to `rrand`, you can teach your functions to accept arguments. Let's take a"
" look:"
msgstr ""
"Być może zainteresuje Cię fakt, że tak samo, jak możesz przekazywać wartości m"
"inimalną (min) i maksymalną (max) do funkcji `rrand`, tak samo możesz nauczyć "
"Twoją funkcję, aby potrafiła przyjmować różne argumenty. Spójrzmy na następują"
"cy kod:"

#: 05.5-Functions.md:81
#, no-wrap
msgid ""
"define :my_player do |n|\n"
"  play n\n"
"end\n"
"my_player 80\n"
"sleep 0.5\n"
"my_player 90"
msgstr ""
"define :my_player do |n|\n"
"  play n\n"
"end\n"
"my_player 80\n"
"sleep 0.5\n"
"my_player 90"

#: 05.5-Functions.md:91
msgid ""
"This isn't very exciting, but it illustrates the point. We've created our own "
"version of `play` called `my_player` which is parameterised."
msgstr ""
"Nie jest on za bardzo ekscytujący, ale świetnie przedstawia, o co chodzi. Stwo"
"rzyliśmy naszą własną wersję polecenia `play`, która przyjmuje parametr i nazw"
"aliśmy ją `my_player`."

#: 05.5-Functions.md:94
msgid ""
"The parameters need to go after the `do` of the `define` do/end block, surroun"
"ded by vertical goalposts `|` and separated by commas `,`. You may use any wor"
"ds you want for the parameter names."
msgstr ""
"Parametry należy umieścić tuż za poleceniem `do` bloku kodu `define`, otoczyć "
"pionowymi kreskami `|` oraz oddzielić przecinkami `,`. Możesz użyć dowolnego s"
"łowa, jakiego chcesz dla nazw parametrów."

#: 05.5-Functions.md:98
msgid ""
"The magic happens inside the `define` do/end block. You may use the parameter "
"names as if they were real values. In this example I'm playing note `n`. You c"
"an consider the parameters as a kind of promise that when the code runs, they "
"will be replaced with actual values. You do this by passing a parameter to the"
" function when you call it. I do this with `my_player 80` to play note 80. Ins"
"ide the function definition, `n` is now replaced with 80, so `play n` turns in"
"to `play 80`. When I call it again with `my_player 90`, `n` is now replaced wi"
"th 90, so `play n` turns into `play 90`."
msgstr ""
"Magia dzieje się w środku bloku do/end `define`. Możesz używać nazw parametrów"
" tak, jakby były prawdziwymi wartościami. W powyższym przykładzie gram nutę `n"
"`. Możesz patrzeć na parametry, jak na swego rodzaju obietnice, które mówią o "
"tym, że gdy kod zostanie uruchomiony, to zostaną one zastąpione aktualnymi war"
"tościami. Możesz to zrobić poprzez przekazanie parametru do funkcji, gdy ją ur"
"uchamiasz. Uruchamiam polecenie `my_player 80`, aby zagrać nutę 80. Wewnątrz d"
"efinicji funkcji, `n` zostanie zamienione na 80, więc polecenie `play n` przem"
"ieni się w `play 80`. Kiedy uruchomię ją ponownie w taki sposób `my_player 90`"
", to teraz `n` zostanie zastąpione przez 90, więc polecenie `play n` będzie zm"
"ieni się teraz w polecenie `play 90`."

#: 05.5-Functions.md:108
msgid "Let's see a more interesting example:"
msgstr "Przyjrzyjmy się teraz bardziej interesującemu przykładowi:"

#: 05.5-Functions.md:110
#, no-wrap
msgid ""
"define :chord_player do |root, repeats| \n"
"  repeats.times do\n"
"    play chord(root, :minor), release: 0.3\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"chord_player :e3, 2\n"
"sleep 0.5\n"
"chord_player :a3, 3\n"
"chord_player :g3, 4\n"
"sleep 0.5\n"
"chord_player :e3, 3"
msgstr ""
"define :chord_player do |root, repeats| \n"
"  repeats.times do\n"
"    play chord(root, :minor), release: 0.3\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"chord_player :e3, 2\n"
"sleep 0.5\n"
"chord_player :a3, 3\n"
"chord_player :g3, 4\n"
"sleep 0.5\n"
"chord_player :e3, 3"

#: 05.5-Functions.md:126
msgid ""
"Here I used `repeats` as if it was a number in the line `repeats.times do`. I "
"also used `root` as if it was a note name in my call to `play`."
msgstr ""
"Użyłem tutaj parametru `repeats` w linii `repeats.times do` tak, jakby był lic"
"zbą. Użyłem również parametru `root` dla polecenia `play` tak, jakby był norma"
"lną nazwą nuty."

#: 05.5-Functions.md:129
msgid ""
"See how we're able to write something very expressive and easy to read by movi"
"ng a lot of our logic into a function!"
msgstr ""
"Zauważ, że poprzez przeniesienia dużej ilości logiki do funkcji, jesteśmy tera"
"z w stanie napisać coś bardzo ekspresyjnego, a zarazem łatwego do przeczytania"
"!"

#: 05.6-Variables.md:1
msgid "5.6 Variables"
msgstr "5.6 Zmienne"

#: 05.6-Variables.md:3
msgid "Variables"
msgstr "Zmienne"

#: 05.6-Variables.md:5
msgid ""
"A useful thing to do in your code is to create names for things. Sonic Pi make"
"s this very easy, you write the name you wish to use, an equal sign (`=`), the"
"n the thing you want to remember:"
msgstr ""
"Przydatną rzeczą, którą możesz robić w swoim kodzie, jest tworzenie nazw dla r"
"óżnych rzeczy. Sonic Pi sprawia, że jest to bardzo łatwe, wpisujesz nazwę, któ"
"rej chciałbyś użyć, znak równości (`=`), następnie rzecz, którą chciałbyś zapa"
"miętać:"

#: 05.6-Variables.md:9
#, no-wrap
msgid "sample_name = :loop_amen"
msgstr "sample_name = :loop_amen"

#: 05.6-Variables.md:13
msgid ""
"Here, we've 'remembered' the symbol `:loop_amen` in the variable `sample_name`"
". We can now use `sample_name` everywhere we might have used `:loop_amen`. For"
" example:"
msgstr ""
"W powyższym kawałku kodu 'zapisaliśmy' wartość symbolu `:loop_amen` w zmiennej"
" `sample_name`. Od teraz możemy używać nazwy `sample_name` wszędzie, gdzie do "
"tej pory użylibyśmy sampla `:loop_amen`. Na przykład:"

#: 05.6-Variables.md:17
#, no-wrap
msgid ""
"sample_name = :loop_amen\n"
"sample sample_name"
msgstr ""
"sample_name = :loop_amen\n"
"sample sample_name"

#: 05.6-Variables.md:22
msgid ""
"There are three main reasons for using variables in Sonic Pi: communicating me"
"aning, managing repetition and capturing the results of things."
msgstr ""
"Są trzy podstawowe powody na korzystanie ze zmiennych w Sonic Pi: komunikowani"
"e znaczenia, zarządzanie powtórzeniami oraz przechwytywanie wyników różnych rz"
"eczy."

#: 05.6-Variables.md:26
msgid "Communicating Meaning"
msgstr "Komunikowanie Znaczenia"

#: 05.6-Variables.md:28
msgid ""
"When you write code it's easy to just think you're telling the computer how to"
" do stuff - as long as the computer understands it's OK. However, it's importa"
"nt to remember that it's not just the computer that reads the code. Other peop"
"le may read it too and try to understand what's going on. Also, you're likely "
"to read your own code in the future and try to understand what's going on. Alt"
"hough it might seem obvious to you now - it might not be so obvious to others "
"or even your future self!"
msgstr ""
"Kiedy piszesz kod, łatwo jest myśleć, że jedyne, co robisz, to mówisz komputer"
"owi, jak ma wykonać jakieś rzeczy - tak długo, jak komputer rozumie, co do nie"
"go mówisz, to jest w porządku. Jednakże ważne jest, aby pamiętać, że nie tylko"
" komputer czyta kod. Inni ludzie również mogą chcieć przeczytać go i spróbować"
" zrozumieć, co się w nim dzieje. Ponadto bardzo prawdopodobne, że Ty również b"
"ędziesz czytał swój własny kod w przyszłości i próbował zrozumieć, o co w nim "
"chodzi. Chociaż w tej chwili jego znaczenie może być dla Ciebie oczywiste - mo"
"że nie być takie oczywiste dla innych lub nawet dla Ciebie samego w przyszłośc"
"i!"

#: 05.6-Variables.md:36
msgid ""
"One way to help others understand what your code is doing is to write comments"
" (as we saw in a previous section). Another is to use meaningful variable name"
"s. Look at this code:"
msgstr ""
"Jedną z metod, która pomoże innym zrozumieć, co Twój kod robi, jest pisanie ko"
"mentarzy (co widzieliśmy już we wcześniejszej sekcji tego samouczka). Inną jes"
"t używanie takich nazw dla zmiennych, które coś znaczą. Spójrz na poniższy kod"
":"

#: 05.6-Variables.md:40
#, no-wrap
msgid "sleep 1.7533"
msgstr "sleep 1.7533"

#: 05.6-Variables.md:44
msgid ""
"Why does it use the number `1.7533`? Where did this number come from? What doe"
"s it mean? However, look at this code:"
msgstr ""
"Dlaczego używa on liczby `1.7533`? Skąd wzięła się ta liczba? Co ona oznacza? "
"A teraz spójrz na poniższy kod:"

#: 05.6-Variables.md:47
#, no-wrap
msgid ""
"loop_amen_duration = 1.7533\n"
"sleep loop_amen_duration"
msgstr ""
"loop_amen_duration = 1.7533\n"
"sleep loop_amen_duration"

#: 05.6-Variables.md:52
msgid ""
"Now, it's much clearer what `1.7533` means: it's the duration of the sample `:"
"loop_amen`! Of course, you might say why not simply write:"
msgstr ""
"Teraz zrozumienie tego, co oznacza liczba `1.7533`, jest znacznie prostsze: oz"
"nacza ona dłuość trwania sampla `:loop_amen`! Oczywiście możesz zapytać, dlacz"
"ego po prostu nie napisaliśmy:"

#: 05.6-Variables.md:55
#, no-wrap
msgid "sleep sample_duration(:loop_amen)"
msgstr "sleep sample_duration(:loop_amen)"

#: 05.6-Variables.md:59
msgid "Which, of course, is a very nice way of communicating the intent of the code."
msgstr ""
"Co, jak najbardziej, jest bardzo fajnym sposobem zakomunikowania intencji zawa"
"rtych w kodzie."

#: 05.6-Variables.md:62
msgid "Managing Repetition"
msgstr "Zarządzanie Powtórzeniami"

#: 05.6-Variables.md:64
msgid ""
"Often you see a lot of repetition in your code and when you want to change thi"
"ngs, you have to change it in a lot of places. Take a look at this code:"
msgstr ""
"Często widzisz dużo powtórzeń w Twoim kodzie i kiedy chcesz coś zmienić, musis"
"z zmienić to w wielu miejscach. Spójrz na poniższy kawałek kodu:"

#: 05.6-Variables.md:68
#, no-wrap
msgid ""
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)\n"
"sample :loop_amen, rate: 0.5\n"
"sleep sample_duration(:loop_amen, rate: 0.5)\n"
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)"
msgstr ""
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)\n"
"sample :loop_amen, rate: 0.5\n"
"sleep sample_duration(:loop_amen, rate: 0.5)\n"
"sample :loop_amen\n"
"sleep sample_duration(:loop_amen)"

#: 05.6-Variables.md:77
msgid ""
"We're doing a lot of things with `:loop_amen`! What if we wanted to hear what "
"it sounded like with another loop sample such as `:loop_garzul`? We'd have to "
"find and replace all `:loop_amen`s with `:loop_garzul`. That might be fine if "
"you have lots of time - but what if you're performing on stage? Sometimes you "
"don't have the luxury of time - especially if you want to keep people dancing."
msgstr ""
"Robiliśmy tutaj sporo rzeczy z samplem `:loop_amen`! Co, jeśli chcielibyśmy us"
"łyszeć, jak ten kawałek kodu brzmi z innym samplem, na przykład `:loop_garzul`"
"? Musielibyśmy wtedy znaleźć i zamienić wszystkie wystąpienia sampla `:loop_am"
"en` na `:loop_garzul`. To może być całkiem w porządku, jeśli masz dużo czasu -"
" ale co, jeśli właśnie występujesz na scenie? Czasami nie masz tego luksusu, ż"
"e masz czasu tyle, ile chcesz - zwłaszcza wtedy, gdy chcesz utrzymać ludzi na "
"parkiecie."

#: 05.6-Variables.md:84
msgid "What if you'd written your code like this:"
msgstr "A co, jeśli powyższy kawałek kodu przepiszemy na coś takiego:"

#: 05.6-Variables.md:86
#, no-wrap
msgid ""
"sample_name = :loop_amen\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)\n"
"sample sample_name, rate: 0.5\n"
"sleep sample_duration(sample_name, rate: 0.5)\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)"
msgstr ""
"sample_name = :loop_amen\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)\n"
"sample sample_name, rate: 0.5\n"
"sleep sample_duration(sample_name, rate: 0.5)\n"
"sample sample_name\n"
"sleep sample_duration(sample_name)"

#: 05.6-Variables.md:96
msgid ""
"Now, that does exactly the same as above (try it). It also gives us the abilit"
"y to just change one line `sample_name = :loop_amen` to `sample_name = :loop_g"
"arzul` and we change it in many places through the magic of variables."
msgstr ""
"Teraz ten kod robi dokładnie to samo, co wcześniejszy (spróbuj). Oprócz tego d"
"aje nam możliwość zmiany tylko jednej linijki z obecnej `sample_name = :loop_a"
"men` na `sample_name = :loop_garzul`, aby jednocześnie zmienić brzmienie w wie"
"lu miejscach, dzięki magii zmiennych."

#: 05.6-Variables.md:101
msgid "Capturing Results"
msgstr "Przechwytywanie Wyników"

#: 05.6-Variables.md:103
msgid ""
"Finally, a good motivation for using variables is to capture the results of th"
"ings. For example, you may wish to do things with the duration of a sample:"
msgstr ""
"I na koniec dobrym powodem do używania zmiennych jest przechwytywanie wyniku w"
"ykonania różnych rzeczy. Przykładowo możesz chcieć robić różne rzeczy z długoś"
"cią trwania sampla:"

#: 05.6-Variables.md:107
#, no-wrap
msgid "sd = sample_duration(:loop_amen)"
msgstr "sd = sample_duration(:loop_amen)"

#: 05.6-Variables.md:111
msgid "We can now use `sd` anywhere we need the duration of the `:loop_amen` sample."
msgstr ""
"Możemy teraz używać zmiennej `sd` wszędzie tam, gdzie potrzebujemy użyć długoś"
"ci trwania sampla `:loop_amen`."

#: 05.6-Variables.md:114
msgid ""
"Perhaps more importantly, a variable allows us to capture the result of a call"
" to `play` or `sample`:"
msgstr ""
"Możliwe, że nawet bardziej ważne jest to, iż zmienne pozwalają nam na przechwy"
"cenie i zapisanie wyniku uruchomienia polecenia `play` lub `sample`:"

#: 05.6-Variables.md:117
#, no-wrap
msgid "s = play 50, release: 8"
msgstr "s = play 50, release: 8"

#: 05.6-Variables.md:121
msgid ""
"Now we have caught and remembered `s` as a variable, which allows us to contro"
"l the synth as it is running:"
msgstr ""
"Teraz złapaliśmy i zapamiętaliśmy `s` jako zmienną, co pozwala nam na kontrolę"
" syntezatora w trakcie jego działania:"

#: 05.6-Variables.md:124
#, no-wrap
msgid ""
"s = play 50, release: 8\n"
"sleep 2\n"
"control s, note: 62"
msgstr ""
"s = play 50, release: 8\n"
"sleep 2\n"
"control s, note: 62"

#: 05.6-Variables.md:130
msgid "We'll look into controlling synths in more detail in a later section."
msgstr "Przyjrzymy się bardziej kontrolowaniu syntezatorów w kolejnej sekcji."

#: 05.7-Thread-Synchronisation.md:1
msgid "5.7 Thread Synchronisation"
msgstr "5.7 Synchronizacja Wątków"

#: 05.7-Thread-Synchronisation.md:3
msgid "Thread Synchronisation"
msgstr "Synchronizacja Wątków"

#: 05.7-Thread-Synchronisation.md:5
msgid ""
"Once you have become sufficiently advanced live coding with a number of functi"
"ons and threads simultaneously, you've probably noticed that it's pretty easy "
"to make a mistake in one of the threads which kills it. That's no big deal, be"
"cause you can easily restart the thread by hitting Run. However, when you rest"
"art the thread it is now *out of time* with the original threads."
msgstr ""
"Skoro osiągnąłeś już wystarczająco zaawansowane umiejętności kodowania na żywo"
" (live coding) wraz z wykorzystaniem jednocześnie funkcji i wątków, na pewno z"
"auważyłeś już, że bardzo łatwo jest popełnić błąd w jednym z wątków, co powodu"
"je, że zostaje on zabity. To nie jest wielka rzecz, ponieważ możesz bardzo łat"
"wo zrestartować wątek poprzez ponowne naciśnięcie przycisku Uruchom. Jednakże "
"kiedy zrestartujesz wątek, to wypadnie on teraz z rytmu oryginalnych wątków."

#: 05.7-Thread-Synchronisation.md:12
msgid "Inherited Time"
msgstr "Odziedziczony Czas"

#: 05.7-Thread-Synchronisation.md:14
msgid ""
"As we discussed earlier, new threads created with `in_thread` inherit all of t"
"he settings from the parent thread. This includes the current time. This means"
" that threads are always in time with each other when started simultaneously."
msgstr ""
"Jak już mówiliśmy wcześniej, nowe wątki, tworzone z wykorzystaniem polecenia `"
"in_thread`, dziedziczą wszystkie ustawienia z wątku rodzica. W skład tych usta"
"wień wchodzi też aktualny czas. Oznacza to, że wątki pozostają zawsze w korela"
"cji czasowej, kiedy zostaną uruchomione jednocześnie."

#: 05.7-Thread-Synchronisation.md:19
msgid ""
"However, when you start a thread on its own it starts with its own time which "
"is unlikely to be in sync with any of the other currently running threads."
msgstr ""
"Jednakże kiedy uruchomisz samodzielny wątek, rozpoczyna się on ze swoim własny"
"m czasem i jest mało prawdopodobne, że będzie on w synchronizacji z jakimkolwi"
"ek innym uruchomionym aktualnie wątkiem."

#: 05.7-Thread-Synchronisation.md:23
msgid "Cue and Sync"
msgstr "Cue (Wskazówka) i Sync (Synchronizacja)"

#: 05.7-Thread-Synchronisation.md:25
msgid ""
"Sonic Pi provides a solution to this problem with the functions `cue` and `syn"
"c`."
msgstr ""
"Sonic Pi udostępnia rozwiązanie dla tego problemu za pomocą funkcji `cue` (wsk"
"azówka) i `sync` (synchronizacja)."

#: 05.7-Thread-Synchronisation.md:28
msgid ""
"`cue` allows us to send out heartbeat messages to all other threads. By defaul"
"t the other threads aren't interested and ignore these heartbeat messages. How"
"ever, you can easily register interest with the `sync` function."
msgstr ""
"`cue` pozwala nam na wysłanie wiadomości o pulsie do wszystkich innych aktualn"
"ie uruchomionych wątków. Domyślnie inne wątki nie są tym zainteresowane i igno"
"rują tę wiadomość o pulsie. Jendakże możesz bardzo łatwo wywołać takie zainter"
"esowanie za pomocą funkcji `sync`."

#: 05.7-Thread-Synchronisation.md:33
msgid ""
"The important thing to be aware of is that `sync` is similar to `sleep` in tha"
"t it stops the current thread from doing anything for a period of time. Howeve"
"r, with `sleep` you specify how long you want to wait while with `sync` you do"
"n't know how long you will wait - as `sync` waits for the next `cue` from anot"
"her thread which may be soon or a long time away."
msgstr ""
"Ważną rzeczą, której należy być świadomym, jest to, że funkcja `sync` jest pod"
"obna do funkcji `sleep` w taki sposób, że powstrzymuje ona aktualny wątek od r"
"obienia czegokolwiek przez pewien okres czasu. Jednakże w przypadku funkcji `s"
"leep` musisz zdefiniować, jak długo chcesz poczekać, natomiast w przypadku fun"
"kcji `sync` nie wiesz, jak długo będziesz chicał poczekać, ponieważ funkcja `s"
"ync` czeka na następny punkt `cue` z innego wątku, co może nastąpić szybciej l"
"ub później."

#: 05.7-Thread-Synchronisation.md:40
msgid "Let's explore this in a little more detail:"
msgstr "Spróbujmy przyjrzeć się temu trochę bardziej dokładnie:"

#: 05.7-Thread-Synchronisation.md:42
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:58
msgid ""
"Here we have two threads - one acting like a metronome, not playing any sounds"
" but sending out `:tick` heartbeat messages every beat. The second thread is s"
"ynchronising on `tick` messages and when it receives one it inherits the time "
"of the `cue` thread and continues running."
msgstr ""
"Mamy tutaj dwa wątki - jeden zachowuje się jak metronom, nie gra żadnych dźwię"
"ków, tylko wysyła komunikat `:tik` (cyk) przy każdym uderzeniu. Drugi wątek sy"
"nchronizuje się natomiast przy otrzymaniu każdej kolejnej wiadomości `:tick` i"
" kiedy otrzymuje kolejną, odziedzicza czas uruchomienia `cue` i rozpoczyna swo"
"je działanie."

#: 05.7-Thread-Synchronisation.md:63
msgid ""
"As a result, we will hear the `:drum_heavy_kick` sample exactly when the other"
" thread sends the `:tick` message, even if the two threads didn't start their "
"execution at the same time:"
msgstr ""
"Jako wynik słyszymy sampel `:drum_heavy_kick` dokładnie w tym samym momencie, "
"gdy inny wątek wysyła komunikat `:tick`, nawet jeśli obydwa wątki nie zostały "
"uruchomione w tym samym czasie:"

#: 05.7-Thread-Synchronisation.md:67
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"sleep(0.3)\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do\n"
"    cue :tick\n"
"    sleep 1\n"
"  end\n"
"end\n"
"sleep(0.3)\n"
"in_thread do\n"
"  loop do\n"
"    sync :tick\n"
"    sample :drum_heavy_kick\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:85
msgid ""
"That naughty `sleep` call would typically make the second thread out of phase "
"with the first. However, as we're using `cue` and `sync`, we automatically syn"
"c the threads bypassing any accidental timing offsets."
msgstr ""
"Te niegrzeczne polecenie `sleep` normalnie stworzyłoby drugi wątek, który byłb"
"y zupełnie niezsynchronizowany z pierwszym. Jednakże dzięki użyciu poleceń `cu"
"e` i `sync`, automatycznie synchronizujemy wątki, blokując jednocześnie jakiek"
"olwiek nieprzewidziane rozjazdy w czasie."

#: 05.7-Thread-Synchronisation.md:90
msgid "Cue Names"
msgstr "Nazwy dla komunikatów Cue"

#: 05.7-Thread-Synchronisation.md:92
msgid ""
"You are free to use whatever name you'd like for your `cue` messages - not jus"
"t `:tick`. You just need to ensure that any other threads are `sync`ing on the"
" correct name - otherwise they'll be waiting for ever (or at least until you p"
"ress the Stop button)."
msgstr ""
"Dla nazw Twoich komunikatów `cue` możesz używać dowolnych nazw - może to być n"
"ie tylko `:tick`. Musisz się tylko upewnić, że inne wątki `sync`hronizują się "
"z właściwą nazwą - w przeciwnym wypadku będą czekać w nieskończoność (albo do "
"momentu, w którym naciśniesz przycisk Stop)."

#: 05.7-Thread-Synchronisation.md:97
msgid "Let's play with a few `cue` names:"
msgstr "Spróbujmy pobawić się z kilkoma komunikatami `cue` o różnych nazwach:"

#: 05.7-Thread-Synchronisation.md:99
#, no-wrap
msgid ""
"in_thread do\n"
"  loop do \n"
"    cue [:foo, :bar, :baz].choose\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do \n"
"    sync :foo \n"
"    sample :elec_beep\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :bar\n"
"    sample :elec_flip\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :baz\n"
"    sample :elec_blup\n"
"  end\n"
"end"
msgstr ""
"in_thread do\n"
"  loop do \n"
"    cue [:foo, :bar, :baz].choose\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do \n"
"    sync :foo \n"
"    sample :elec_beep\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :bar\n"
"    sample :elec_flip\n"
"  end\n"
"end\n"
"in_thread do\n"
"  loop do\n"
"    sync :baz\n"
"    sample :elec_blup\n"
"  end\n"
"end"

#: 05.7-Thread-Synchronisation.md:129
msgid ""
"Here we have a main `cue` loop which is randomly sending one of the heartbeat "
"names `:foo`, `:bar` or `:baz`. We then also have three loop threads syncing o"
"n each of those names independently and then playing a different sample. The n"
"et effect is that we hear a sound every 0.5 beats as each of the `sync` thread"
"s is randomly synced with the `cue` thread and plays its sample."
msgstr ""
"Mamy tutaj główną pętlę `cue`, która co iterację wysyła komunikat z losową wyb"
"raną nazwą punktu cue do synchronizacji - `:foo`, `:bar` lub `:baz`. Następnie"
" mamy trzy wątki z pętlami, które synchronizują się na każdym z tych komunikat"
"ów niezależnie i odtwarzają różne sample. Wynikiem tego jest to, że słyszymy d"
"źwięk co każde 0.5 uderzenia, jako że każdy z synchronizowanych (`sync`) wątkó"
"w jest wybierany losowo z wątku `cue`, po czym odtwarza swojego sampla."

#: 05.7-Thread-Synchronisation.md:136
msgid ""
"This of course also works if you order the threads in reverse as the `sync` th"
"reads will simply sit and wait for the next `cue`."
msgstr ""
"Oczywiście to wszystko zadziała analogicznie, nawet jeśli poukładasz wątki w o"
"dwrotnej kolejności, jako że wątek `sync` będzie po prostu czekał na kolejną w"
"artość wysłaną przez wątek `cue`."

#: 06-FX.md:1
msgid "6 FX"
msgstr "6 FX (efekty)"

#: 06-FX.md:3
msgid "Studio FX"
msgstr "Studio FX"

#: 06-FX.md:5
msgid ""
"One of the most rewarding and fun aspects of Sonic Pi is the ability to easily"
" add studio effects to your sounds. For example, you may wish to add some reve"
"rb to parts of your piece, or some echo or perhaps even distort or wobble your"
" basslines."
msgstr ""
"Jednym z najbardziej satysfakcjonujących aspektów Sonic Pi jest możliwość łatw"
"ego dodawania efektów studyjnych do Twoich brzmień. Na przykład być może zdarz"
"y się, że będziesz chciał dodać trochę efektu reverb (pogłos) do pewnych częśc"
"i Twojego kawałka albo trochę echa, albo może nawet efektu distort czy wobble "
"do Twojej linii basowej."

#: 06-FX.md:10
msgid ""
"Sonic Pi provides a very simple yet powerful way of adding FX. It even allows "
"you to chain them (so you can pass your sounds through distortion, then echo a"
"nd then reverb) and also control each individual FX unit with opts (in a simil"
"ar way to giving params to synths and samples). You can even modify the opts o"
"f the FX whilst it's still running. So, for example, you could increase the re"
"verb on your bass throughout the track..."
msgstr ""
"Sonic Pi udostępnia bardzo prosty, a jednocześnie potężny sposób na dodawanie "
"takich efektów (FX). Pozwala on nawet na łączenie ich (możesz więc przepuścić "
"Twoje brzmienie kolejno przez efekt distortion/overdrive, potem przez echo i n"
"a końcu przez reverb) i jednocześnie daje Ci możliwość kontrolowania każdego z"
" nich indywidualnie za pomocą parametrów (w podobny sposób do tego, w jaki prz"
"ekazujemy parametry do syntezatorów czy sampli). Możesz nawet modyfikować para"
"metry efektu (FX), gdy wciąż jest uruchomiony. Możesz więc przykładowo zwiększ"
"yć wartość efektu reverb Twojej sekcji basowej na przestrzeni całego utworu..."

#: 06-FX.md:18
msgid "Guitar Pedals"
msgstr "Efekty gitarowe"

#: 06-FX.md:20
msgid ""
"If all of this sounds a bit complicated, don't worry. Once you play around wit"
"h it a little, it will all become quite clear. Before you do though, a simple "
"analogy is that of guitar FX pedals. There are many kinds of FX pedals you can"
" buy. Some add reverb, others distort etc. A guitarist will plug his or her gu"
"itar into one FX pedal - i.e. distortion -, then take another cable and connec"
"t (chain) a reverb pedal. The output of the reverb pedal can then be plugged i"
"nto the amplifier:"
msgstr ""
"Jeśli wszystko to brzmi dla ciebie trochę zbyt skomplikowanie, nie przejmuj si"
"ę. Gdy już trochę się tym pobawisz, wszystko stanie się całkiem jasne. Zanim j"
"ednak to nastąpi, wprowadzę prostą analogię do efektów (FX) gitarowych. Istnie"
"je wiele rodzajów takich efektów (FX), które możesz kupić. Pewne z nich dodają"
" efekt reverb, inne distort, itd. Gitarzyści podłączają swoją gitarę do jedneg"
"o z efektów (FX), tzw. pedałów gitarowych - np. distortion. Następnie biorą ka"
"bel i łączą ten efekt z kolejnym, np. efektem reverb. Na koniec wyjście z efek"
"tu reverb może być podłączone do wzmacniacza:"

#: 06-FX.md:29
#, no-wrap
msgid "Guitar -> Distortion -> Reverb -> Amplifier"
msgstr "Gitara -> Distortion -> Reverb -> Wzmacniacz"

#: 06-FX.md:33
msgid ""
"This is called FX chaining. Sonic Pi supports exactly this. Additionally, each"
" pedal often has dials and sliders to allow you to control how much distortion"
", reverb, echo etc. to apply. Sonic Pi also supports this kind of control. Fin"
"ally, you can imagine a guitarist playing whilst someone plays with the FX con"
"trols whilst they're playing. Sonic Pi also supports this - but instead of nee"
"ding someone else to control things for you, that's where the computer steps i"
"n."
msgstr ""
"Nazywa się to łączeniem efektów w łańcuch. Sonic Pi wspiera taki właśnie model"
" dla swoich efektów. Dodatkowo każdy z efektów posiada pokrętła i suwaki pozwa"
"lające Ci na kontrolę tego, jak mocny ma być efekt distortion, reverb, echo, i"
"td. Sonic Pi wspiera taką kontrolę. Na koniec możesz wyobrazić sobie grającego"
" gitarzystę, podczas gdy ktoś inny, w tym samym czasie, bawi się i kontroluje "
"efekty (FX). Sonic Pi również wspiera taką możliwość - tylko, że zamiast innej"
" osoby do kontrolowania tych efektów, na scenę wkroczy w tym wypadku komputer."

#: 06-FX.md:42
msgid "Let's explore FX!"
msgstr "Poznajmy zatem efekty (FX)!"

#: 06.1-Adding-FX.md:1
msgid "6.1 Adding FX"
msgstr "6.1 Dodawanie Efektów"

#: 06.1-Adding-FX.md:3
msgid "Adding FX"
msgstr "Dodawanie Efektów"

#: 06.1-Adding-FX.md:5
msgid ""
"In this section we'll look at a couple of FX: reverb and echo. We'll see how t"
"o use them, how to control their opts and how to chain them."
msgstr ""
"W tej sekcji przyjrzymy się kilku efektom (FX): reverb i echo. Zobaczymy, w ja"
"ki sposób ich używać, w jaki sposób kontrolować ich parametry oraz jak łączyć "
"je ze sobą w jeden łańcuch."

#: 06.1-Adding-FX.md:9
msgid ""
"Sonic Pi's FX system uses blocks. So if you haven't read section 5.1 you might"
" want to take a quick look and then head back."
msgstr ""
"System efektów w Sonic Pi korzysta z bloków kodu. Jeśli więc do tej pory nie p"
"rzeczytałeś jeszcze sekcji 5.1, to teraz jest dobry moment, by nadrobić zaległ"
"ości."

#: 06.1-Adding-FX.md:12
msgid "Reverb"
msgstr "Efekt Reverb"

#: 06.1-Adding-FX.md:14
msgid ""
"If we want to use reverb we write `with_fx :reverb` as the special code to our"
" block like this:"
msgstr ""
"Jeśli chcemy użyć efektu reverb, wystarczy że napiszemy `with_fx :reverb` jako"
" specjalny kawałek kodu dla naszego bloku do/end:"

#: 06.1-Adding-FX.md:17
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:27
msgid ""
"Now play this code and you'll hear it played with reverb. It sounds good, does"
"n't it! Everything sounds pretty nice with reverb."
msgstr ""
"A teraz uruchom ten kod, a usłyszysz, jak jest zagrany z nałożonym na niego ef"
"ektem reverb. Brzmi nieźle, prawda? Wszystko brzmi całkiem fajnie z efektem re"
"verb."

#: 06.1-Adding-FX.md:30
msgid "Now let's look what happens if we have code outside the do/end block:"
msgstr ""
"A teraz zobaczmy, co się wydarzy, gdy umieścimy jakiś dodatkowy kod poza naszy"
"m blokiem do/end:"

#: 06.1-Adding-FX.md:32
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"
msgstr ""
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"

#: 06.1-Adding-FX.md:45
msgid ""
"Notice how the final `play 55` isn't played with reverb. This is because it is"
" *outside* the do/end block, so it isn't captured by the reverb FX."
msgstr ""
"Zauważ, że ostania linia `play 55` nie jest zagrana z efektem reverb. Dzieje s"
"ię tak, ponieważ znajduje się *poza blokiem* kodu do/end, więc dzięki temu nie"
" jest objęta efektem reverb."

#: 06.1-Adding-FX.md:48
msgid ""
"Similarly, if you make sounds before the do/end block, they also won't be capt"
"ured:"
msgstr ""
"Analogicznie, jeśli zrobisz jakieś dźwięki przed blokiem do/end, to one równie"
"ż nie będą pod wpływem efektu reverb:"

#: 06.1-Adding-FX.md:51
#, no-wrap
msgid ""
"play 55\n"
"sleep 1\n"
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"
msgstr ""
"play 55\n"
"sleep 1\n"
"with_fx :reverb do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end\n"
"sleep 1\n"
"play 55"

#: 06.1-Adding-FX.md:67
msgid "Echo"
msgstr "Efekt Echo"

#: 06.1-Adding-FX.md:69
msgid "There are many FX to choose from. How about some echo?"
msgstr "Jest wiele efektów do wyboru. Co powiesz na echo?"

#: 06.1-Adding-FX.md:71
#, no-wrap
msgid ""
"with_fx :echo do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:81
msgid ""
"One of the powerful aspects of Sonic Pi's FX blocks is that they may be passed"
" opts similar to opts we've already seen with `play` and `sample`. For example"
" a fun echo opt to play with is `phase:` which represents the duration of a gi"
"ven echo in beats. Let's make the echo slower:"
msgstr ""
"Jednym z potężnych aspektów bloków efektów w Sonic Pi jest to, że można do nic"
"h przekazywać parametry podobne do parametrów, które już widzieliśmy, gdy korz"
"ystaliśmy z poleceń `play` i `sample`. Na przykład bardzo fajnym parametrem, k"
"tóry nieźle brzmi z efektem echo, jest `phase:`. Reprezentuje on czas trwania "
"danego efektu przez określoną liczbę uderzeń (ile uderzeń trwa efekt). Spróbuj"
"my sprawić, aby efekt echo był trochę wolniejszy:"

#: 06.1-Adding-FX.md:87
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.5 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.5 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:97
msgid "Let's also make the echo faster:"
msgstr "Spróbujmy też sprawić, aby echo brzmiało szybciej:"

#: 06.1-Adding-FX.md:99
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.125 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.125 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:109
msgid ""
"Let's make the echo take longer to fade away by setting the `decay:` time to 8"
" beats:"
msgstr ""
"Sprawmy teraz, aby zanikanie echa trwało dłużej, ustawiając parametr `decay` n"
"a 8 sekund:"

#: 06.1-Adding-FX.md:112
#, no-wrap
msgid ""
"with_fx :echo, phase: 0.5, decay: 8 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :echo, phase: 0.5, decay: 8 do\n"
"  play 50\n"
"  sleep 0.5\n"
"  sample :elec_plip\n"
"  sleep 0.5\n"
"  play 62\n"
"end"

#: 06.1-Adding-FX.md:122
msgid "Nesting FX"
msgstr "Zagnieżdżanie Efektów"

#: 06.1-Adding-FX.md:124
msgid ""
"One of the most powerful aspects of the FX blocks is that you can nest them. T"
"his allows you to very easily chain FX together. For example, what if you want"
"ed to play some code with echo and then with reverb? Easy, just put one inside"
" the other:"
msgstr ""
"Jednym z najbardziej potężnych aspektów bloków zawierających efekty jest to, ż"
"e możesz je zagnieżdżać. Pozwala to na bardzo łatwe łączenie ich razem. Przykł"
"adowo co, jeśli chciałeś zagrać kawałek jakiegoś kodu z efektami echo i reverb"
"? Łatwizna, po prostu umieść jeden w drugim:"

#: 06.1-Adding-FX.md:129
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  with_fx :echo, phase: 0.5, decay: 8 do\n"
"    play 50\n"
"    sleep 0.5\n"
"    sample :elec_blup\n"
"    sleep 0.5\n"
"    play 62\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  with_fx :echo, phase: 0.5, decay: 8 do\n"
"    play 50\n"
"    sleep 0.5\n"
"    sample :elec_blup\n"
"    sleep 0.5\n"
"    play 62\n"
"  end\n"
"end"

#: 06.1-Adding-FX.md:141
msgid ""
"Think about the audio flowing from the inside out. The sound of all the code w"
"ithin the inner do/end block such as `play 50` is first sent to the echo FX an"
"d the sound of the echo FX is in turn sent out to the reverb FX."
msgstr ""
"Pomyśl o przepływie dźwięku ze środka na zewnątrz. Dźwięk z najbardziej wewnęt"
"rznego bloku kodu, np. `play 50` jest najpierw wysyłany do efektu echo, następ"
"nie dźwięk z nałożonym echo jest z kolei wysyłany do efektu reverb."

#: 06.1-Adding-FX.md:146
msgid ""
"We may use very deep nestings for crazy results. However, be warned, the FX ca"
"n use a lot of resources and when you nest them you're effectively running mul"
"tiple FX simultaneously. So be sparing with your use of FX especially on low p"
"owered platforms such as the Raspberry Pi."
msgstr ""
"Możemy używać wielu takich zagnieżdżeń dla osiągania zwariowanych wyników. Jed"
"nakże uważaj, efekty mogą zużywać sporo zasobów. Zagnieżdżając jeden w drugim,"
" uruchamiasz wiele efektów na raz. Bądź więc oszczędny z ich używaniem, zwłasz"
"cza na platformach o słabych parametrach (procesor, pamięć, itd.) na przykład "
"takich jak Raspberry Pi."

#: 06.1-Adding-FX.md:151
msgid "Discovering FX"
msgstr "Odkrywanie Efektów"

#: 06.1-Adding-FX.md:153
msgid ""
"Sonic Pi ships with a large number of FX for you to play with. To find out whi"
"ch ones are available, click on FX in the far left of this help system and you"
"'ll see a list of available options. Here's a list of some of my favourites:"
msgstr ""
"Sonic Pi posiada wiele wbudowanych efektów, z których możesz korzystać. Aby zo"
"baczyć, jakie z nich są dostępne, kliknij na ikonę *Fx* (efekty) w sekcji pomo"
"cy, a zobaczysz listę wszystkich dostępnych opcji. Oto kilka moich ulubionych:"

#: 06.1-Adding-FX.md:158
msgid "wobble,"
msgstr "wobble,"

#: 06.1-Adding-FX.md:159
msgid "reverb,"
msgstr "reverb,"

#: 06.1-Adding-FX.md:160
msgid "echo,"
msgstr "echo,"

#: 06.1-Adding-FX.md:161
msgid "distortion,"
msgstr "distortion,"

#: 06.1-Adding-FX.md:162
msgid "slicer"
msgstr "slicer"

#: 06.1-Adding-FX.md:164
msgid "Now go crazy and add FX everywhere for some amazing new sounds!"
msgstr ""
"A teraz powariuj trochę i dodaj efekty wszędzie, gdzie tylko możesz, aby stwor"
"zyć zdumiewające nowe dźwięki!"

#: 06.2-FX-in-Practice.md:1
msgid "6.2 FX in Practice"
msgstr "6.2 Efekty w praktyce"

#: 06.2-FX-in-Practice.md:3
msgid "FX in Practice"
msgstr "Efekty w praktyce"

#: 06.2-FX-in-Practice.md:5
msgid ""
"Although they look deceptively simple on the outside, FX are actually quite co"
"mplex beasts internally. Their simplicity often entices people to overuse them"
" in their pieces. This may be fine if you have a powerful machine, but if - li"
"ke me - you use a Raspberry Pi to jam with, you need to be careful about how m"
"uch work you ask it to do if you want to ensure the beats keep flowing."
msgstr ""
"Pomimo że na pierwszy rzut oka wyglądają one na zwodniczo łatwe, to od środka "
"efekty są tak naprawdę bardzo złożonymi bestiami. Ich prostota bardzo często k"
"usi ludzi, by nadużywać ich w swoich kawałkach. Może to być w porządku, jeśli "
"masz dobry i wydajny komputer, ale jeśli - tak jak ja - korzystasz z Raspberry"
" Pi do jamowania, musisz być wtedy bardzo ostrożny z tym, ile pracy mu zlecisz"
" do wykonania, jeśli chcesz być pewny, że beat zachowa swą płynność."

#: 06.2-FX-in-Practice.md:12
msgid "Consider this code:"
msgstr "Rozważ taki kawałek kodu:"

#: 06.2-FX-in-Practice.md:14
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:23
msgid ""
"In this code we're playing note 60 with a very short release time, so it's a s"
"hort note. We also want reverb so we've wrapped it in a reverb block. All good"
" so far. Except..."
msgstr ""
"W powyższym kawałku kodu zagraliśmy nutę 60 z bardzo krótkim czasem zanikania "
"(release), więc jest to bardzo krótka nuta. Chcemy również nałożyć na nią efek"
"t reverb, więc opakowaliśmy ją w blok reverb. Jak na razie wszystko w porządku"
". Z wyjątkiem..."

#: 06.2-FX-in-Practice.md:27
msgid ""
"Let's look at what the code does. First we have a `loop` which means everythin"
"g inside of it is repeated forever. Next we have a `with_fx` block. This means"
" we will create a new reverb FX *every time we loop*. This is like having a se"
"parate FX reverb pedal for every time you pluck a string on a guitar. It's coo"
"l that you can do this, but it's not always what you want. For example, this c"
"ode will struggle to run nicely on a Raspberry Pi. All the work of creating th"
"e reverb and then waiting until it needs to be stopped and removed is all hand"
"led by `with_fx` for you, but this takes CPU power which may be precious."
msgstr ""
"Przyjrzyjmy się, co ten kod tak naprawdę robi. Na początku mamy pętlę `loop`, "
"co oznacza, że wszystko wewnątrz niej będzie powtarzane w nieskończoność. Nast"
"ępnie mamy blok `with_fx`. Oznacza to, że utworzymy nowych efekt FX *dla każde"
"j iteracji pętli `loop`*. To tak, jakbyśmy chcieli mieć oddzielny efekt gitaro"
"wy reverb przy każdym jednym uderzeniu w strunę gitary. Fajnie, że możemy tak "
"zrobić, ale nie zawsze jest to coś, co chciałbyś osiągnąć. Na przykład ten kaw"
"ałek kodu czeka niezła walka, aby został on ładnie uruchomiony na Raspberry Pi"
". Cała praca potrzebna do stworzenia efektu reverb, a potem czekanie do moment"
"u, w którym będzie wymagał zatrzymania i usunięcia, jest obsługiwana za Ciebie"
" przez funkcję `with_fx`, zajmie to jednak sporo mocy procesora (CPU), która m"
"oże okazać się bardzo cenna."

#: 06.2-FX-in-Practice.md:37
msgid ""
"How do we make it more similar to a traditional setup where our guitarist has "
"just *one* reverb pedal which all sounds pass through? Simple:"
msgstr ""
"A co, jeśli sprawimy, by ten kod był bardziej podobny do tradycyjnego zestawu,"
" gdzie nasz gitarzysta posiada tylko *jeden* efekt reverb i to przez niego prz"
"echodzą wszystkie dźwięki? Łatwizna:"

#: 06.2-FX-in-Practice.md:41
#, no-wrap
msgid ""
"with_fx :reverb do\n"
"  loop do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb do\n"
"  loop do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:50
msgid ""
"We put our loop *inside* the `with_fx` block. This way we only create a single"
" reverb for all notes played in our loop. This code is a lot more efficient an"
"d would work fine on a Raspberry Pi."
msgstr ""
"Umieściliśmy naszą pętęlę *wewnątrz* bloku `with_fx`. W ten sposób tworzymy ty"
"lko jeden efekt reverb dla wszystkich nut, które zostaną zagrane w naszej pętl"
"i. Taki kod jest dużo bardziej wydajny i na pewno będzie działał w porządku na"
" Raspberry Pi."

#: 06.2-FX-in-Practice.md:54
msgid "A compromise is to use `with_fx` over an iteration within a loop:"
msgstr ""
"Kompromisem może też być użycie efektu `with_fx` wewnątrz pętli loop, ale powy"
"żej iteracji wewnętrznej:"

#: 06.2-FX-in-Practice.md:56
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb do\n"
"    16.times do\n"
"      play 60, release: 0.1\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb do\n"
"    16.times do\n"
"      play 60, release: 0.1\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:67
msgid ""
"This way we've lifted the `with_fx` out of the inner part of the `loop` and we"
"'re now creating a new reverb every 16 notes."
msgstr ""
"W ten sposób przenieśliśmy efekt `with_fx` na zewnątrz wewnętrznej części pętl"
"i `loop` i teraz tworzymy nowy efekt reverb tylko co 16 zagranych nut."

#: 06.2-FX-in-Practice.md:70
msgid ""
"This is such a common pattern that `with_fx` supports an opt to do exactly thi"
"s but without having to write the `16.times` block:"
msgstr ""
"To jest tak często używany wzorzec, że funkcja `with_fx` posiada dodatkową opc"
"ję, która umożliwia nam to samo, ale bez konieczności pisania bloku `16.times`"
":"

#: 06.2-FX-in-Practice.md:73
#, no-wrap
msgid ""
"loop do\n"
"  with_fx :reverb, reps: 16 do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"loop do\n"
"  with_fx :reverb, reps: 16\n"
"  do\n"
"    play 60, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: 06.2-FX-in-Practice.md:82
msgid ""
"Both the `reps: 16` and `16.times do` examples will behave identically. The `r"
"eps: 16` essentially repeats the code in the `do/end` block 16 times so you ca"
"n use them both interchangeably and choose the one that feels best for you."
msgstr ""
"Oba przykłady `reps: 16` i `16.times do` zachowają się tak samo. Zasadniczo, k"
"awałek ` reps: 16` spowoduje powtórzenie kodu znajdującego się w bloku `do/end"
"`. Możesz więc używać obu konstrukcji zamiennie i wybrać tę, która Ci bardziej"
"."

#: 06.2-FX-in-Practice.md:87
msgid ""
"Remember, there are no mistakes, just possibilities. However, some of these ap"
"proaches will have a different sound and also different performance characteri"
"stics. So play around and use the approach that sounds best to you whilst also"
" working within the performance constraints of your platform."
msgstr ""
"Pamiętaj jedno - błędów nie ma, są tylko nowe możliwości. Jednakże każdy z pow"
"yższych podejść będzie miał inne brzmienie oraz inną charakterystykę wydajnośc"
"i. Staraj się więc używać takiego podejścia, które będzie brzmiało najlepiej, "
"mając jednocześnie na uwadze fakt pracy z ograniczeniami wydajnościowymi Twoje"
"go komputera/platformy, na której pracujesz."

#: 07-Control.md:1
msgid "7 Control"
msgstr "7 Kontrola"

#: 07-Control.md:3
msgid "Controlling running sounds"
msgstr "Kontrola działających dźwięków"

#: 07-Control.md:5
msgid ""
"So far we've looked at how you can trigger synths and samples, and also how to"
" change their default opts such as amplitude, pan, envelope settings and more."
" Each sound triggered is essentially its own sound with its own list of option"
"s set for the duration of the sound."
msgstr ""
"Do tej pory dowiedzieliśmy się, jak możemy wyzwalać syntezatory i sample oraz "
"w jaki sposób zmieniać ich domyślne parametry, takie jak amplituda, kanał, ust"
"awienia obwiedni i inne. Każdy uruchomiony dźwięk jest w zasadzie osobnym dźwi"
"ękiem z jego własnym zestawem parametrów ustalonych na czas trwania dźwięku."

#: 07-Control.md:11
msgid ""
"Wouldn't it also be cool if you could change a sound's opts whilst it's still "
"playing, just like you might bend a string of a guitar whilst it's still vibra"
"ting?"
msgstr ""
"Czy nie byłoby super, gdybyś mógł zmieniać parametry dźwięku w trakcie odtwarz"
"ania danego dźwięku tak samo, jak możesz naciągnąć struny gitary, gdy jej stru"
"ny wciąż wibrują?"

#: 07-Control.md:15
msgid "You're in luck - this section will show you how to do exactly this."
msgstr "Masz szczęście - ten rozdział pokaże Ci dokładnie, jak możesz tego dokonać."

#: 07.1-Controlling-Running-Synths.md:1
msgid "7.1 Controlling Running Synths"
msgstr "7.1 Kontrolowanie Uruchomionych Syntezatorów"

#: 07.1-Controlling-Running-Synths.md:3
msgid "Controlling Running Synths"
msgstr "Kontrolowanie Uruchomionych Syntezatorów"

#: 07.1-Controlling-Running-Synths.md:5
msgid ""
"So far we've only concerned ourselves with triggering new sounds and FX. Howev"
"er, Sonic Pi gives us the ability to manipulate and control currently running "
"sounds. We do this by using a variable to capture a reference to a synth:"
msgstr ""
"Do tej pory interesowaliśmy się tylko uruchamianiem nowych dźwięków i efektów."
" Jednakże Sonic Pi daje nam możliwość manipulacji i kontroli aktualnie uruchom"
"ionych dźwięków. Dokonujemy tego, używając zmiennych do przechwycenia referenc"
"ji do syntezatora:"

#: 07.1-Controlling-Running-Synths.md:10
#, no-wrap
msgid "s = play 60, release: 5"
msgstr "s = play 60, release: 5"

#: 07.1-Controlling-Running-Synths.md:14
msgid ""
"Here, we have a run-local variable `s` which represents the synth playing note"
" 60. Note that this is *run-local* - you can't access it from other runs like "
"functions."
msgstr ""
"Mamy tutaj zmienną lokalną `s`, która reprezentuje syntezator grający nutę 60."
" Zauważ jednak, że to jest *zmienna działająca lokalnie* - nie masz do niej do"
"stępu z innych uruchomień takich jak funkcje."

#: 07.1-Controlling-Running-Synths.md:18
msgid "Once we have `s`, we can start controlling it via the `control` function:"
msgstr ""
"Gdy już mamy zmienną `s`, możemy zacząć kontrolować ją za pomoca funkcji `cont"
"rol`:"

#: 07.1-Controlling-Running-Synths.md:21 07.3-Sliding-Parameters.md:13
#, no-wrap
msgid ""
"s = play 60, release: 5\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"
msgstr ""
"s = play 60, release: 5\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"

#: 07.1-Controlling-Running-Synths.md:31
msgid ""
"The thing to notice is that we're not triggering 4 different synths here - we'"
"re just triggering one synth and then change the pitch 3 times afterwards, whi"
"le it's playing."
msgstr ""
"Rzeczą godną zauważenia jest tutaj to, że nie uruchamiamy 4 oddzielnych syntez"
"atorów - uruchamiamy tylko jeden, po czym zmieniamy wysokość tonu 3 razy, w tr"
"akcie gdy wciąż gra."

#: 07.1-Controlling-Running-Synths.md:35
msgid ""
"We can pass any of the standard opts to `control`, so you can control things l"
"ike `amp:`, `cutoff:` or `pan:`."
msgstr ""
"Możemy przekazywać dowolne ze standardowych parametrów do polecenia `control`,"
" możesz więc kontrolować takie rzeczy jak `amp:`, `cutoff:` czy `pan:`."

#: 07.1-Controlling-Running-Synths.md:38
msgid "Non-controllable Options"
msgstr "Parametry Nie Dające Się Kontrolować"

#: 07.1-Controlling-Running-Synths.md:40
msgid ""
"Some of the opts can't be controlled once the synth has started. This is the c"
"ase for all the ADSR envelope parameters. You can find out which opts are cont"
"rollable by looking at their documentation in the help system. If the document"
"ation says *Can not be changed once set*, you know it's not possible to contro"
"l the opt after the synth has started."
msgstr ""
"Są pewne parametry, które nie mogą być kontrolowane, gdy syntezator został już"
" uruchomiony. Dotyczy to m.in. wszystkich parametrów obwiedni ADSR. Możesz sam"
"odzielnie sprawdzić, które z parametrów danego syntezatora mogą być kontrolowa"
"ne, zaglądając do systemu pomocy. Jeśli w dokumentacji jest napisane *can not "
"be changed once set* (nie może być zmieniony, gdy już raz został ustawiony), t"
"o już wiesz, że nie możesz kontrolować i zmieniać danego parametru, gdy syntez"
"ator już wystartuje."

#: 07.2-Controlling-FX.md:1
msgid "7.2 Controlling FX"
msgstr "7.2 Kontrolowanie Efektów"

#: 07.2-Controlling-FX.md:3
msgid "Controlling FX"
msgstr "Kontrolowanie Efektów"

#: 07.2-Controlling-FX.md:5
msgid ""
"It is also possible to control FX, although this is achieved in a slightly dif"
"ferent way:"
msgstr ""
"Możliwe jest również kontrolowanie efektów, jednakże jest ono realizowane w tr"
"ochę inny sposób:"

#: 07.2-Controlling-FX.md:8
#, no-wrap
msgid ""
"with_fx :reverb do |r|\n"
"  play 50\n"
"  sleep 0.5\n"
"  control r, mix: 0.7\n"
"  play 55\n"
"  sleep 1\n"
"  control r, mix: 0.9\n"
"  sleep 1\n"
"  play 62\n"
"end"
msgstr ""
"with_fx :reverb do |r|\n"
"  play 50\n"
"  sleep 0.5\n"
"  control r, mix: 0.7\n"
"  play 55\n"
"  sleep 1\n"
"  control r, mix: 0.9\n"
"  sleep 1\n"
"  play 62\n"
"end"

#: 07.2-Controlling-FX.md:21
msgid ""
"Instead of using a variable, we use the goalpost parameters of the do/end bloc"
"k. Inside the `|` bars, we need to specify a unique name for our running FX wh"
"ich we then reference from the containing do/end block. This behaviour is iden"
"tical to using parameterised functions."
msgstr ""
"Zamiast używać zmiennej, korzystamy z parametru pomiędzy słupkami znajdującymi"
" się w bloku kodu do/end. Pomiędzy słupki `|` wstawiamy unikalną nazwę dla nas"
"zego efektu, dzięki czemu możemy się później do niej odwoływać w danym bloku k"
"odu do/end. Postępowanie w tym przypadku jest identyczne do używania parametró"
"w w funkcjach."

#: 07.2-Controlling-FX.md:26
msgid "Now go and control some synths and FX!"
msgstr "A teraz spróbuj wykorzystać kontrolę nad syntezatorami i efektami!"

#: 07.3-Sliding-Parameters.md:1
msgid "7.3 Sliding Options"
msgstr "7.3 Parametry Przesuwne"

#: 07.3-Sliding-Parameters.md:3
msgid "Sliding Opts"
msgstr "Parametry Przesuwne"

#: 07.3-Sliding-Parameters.md:5
msgid ""
"Whilst exploring the synth and FX opts, you might have noticed that there are "
"a number of opts ending with `_slide`. You might have even tried calling them "
"and seeing no effect. This is because they're not normal parameters, they're s"
"pecial opts that only work when you control synths as introduced in the previo"
"us section."
msgstr ""
"Podczas poznawania parametrów syntezatorów i efektów, być może udało Ci się za"
"uważyć, że kilka nazw parametrów kończy się na `_slide`. Być może nawet próbow"
"ałeś korzystać z nich i nie zauważyłeś żadnego efektu. Dzieje się tak, poniewa"
"ż nie są one normalnymi parametrami, a są to specjalne parametry, które działa"
"ją tylko wtedy, gdy kontrolujesz syntezatory w sposób, jaki pokazaliśmy w popr"
"zedniej sekcji."

#: 07.3-Sliding-Parameters.md:11
msgid "Consider the following example:"
msgstr "Przyjrzyjmy się następującemu przykładowi:"

#: 07.3-Sliding-Parameters.md:23
msgid ""
"Here, you can hear the synth pitch changing immediately on each `control` call"
". However, we might want the pitch to slide between changes. As we're controll"
"ing the `note:` parameter, to add slide, we need to set the `note_slide` param"
"eter of the synth:"
msgstr ""
"W powyższym przykładzie słyszymy, jak wysokość tonu (pitch) zmienia się przy k"
"ażdym uruchomieniu polecenia `control`. Może się jednak zdarzyć, że będziemy c"
"hcieli, aby zmiana tonu nastąpiła w sposób płynny (tak, jakbyśmy użyli do tego"
" suwaka). Tak samo, jak kontrolujemy zmianę tonu parametrem `note:`, aby dodać"
" płynne przejście, musimy ustawić na syntezatorze parametr `note_slide`:"

#: 07.3-Sliding-Parameters.md:28
#, no-wrap
msgid ""
"s = play 60, release: 5, note_slide: 1\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"
msgstr ""
"s = play 60, release: 5, note_slide: 1\n"
"sleep 0.5\n"
"control s, note: 65\n"
"sleep 0.5\n"
"control s, note: 67\n"
"sleep 3\n"
"control s, note: 72"

#: 07.3-Sliding-Parameters.md:38
msgid ""
"Now we hear the notes being bent between the `control` calls. It sounds nice, "
"doesn't it? You can speed up the slide by using a shorter time such as `note_s"
"lide: 0.2` or slow it down by using a longer slide time."
msgstr ""
"Teraz słyszymy, że pomiędzy poszczególnymi wywołaniami poleceń `control`, nuty"
" są \"naciągane\". Brzmi to całkiem fajnie, prawda? Możesz przyśpieszyć płynne p"
"rzejście pomiędzy nutami, używając krótszego czasu, np. `note_slide: 0.2', alb"
"o zwolnić je, używając dłuższego czasu przejścia (ślizgania)."

#: 07.3-Sliding-Parameters.md:43
msgid ""
"Every parameter that can be controlled has a corresponding `_slide` parameter "
"for you to play with."
msgstr ""
"Każdy z parametrów, który może być kontrolowany, posiada odpowiadający mu para"
"metr typu `_slide`, z którego możesz korzystać."

#: 07.3-Sliding-Parameters.md:46
msgid "Sliding is sticky"
msgstr "Ślizganie jest lepkie"

#: 07.3-Sliding-Parameters.md:48
msgid ""
"Once you've set a `_slide` parameter on a running synth, it will be remembered"
" and used every time you slide the corresponding parameter. To stop sliding yo"
"u must set the `_slide` value to 0 before the next `control` call."
msgstr ""
"Gdy już raz ustawimy parametr typu `_slide` na uruchomionym syntezatorze, to z"
"ostanie on zapamiętany i ta wartość będzie wykorzystywana za każdym razem, gdy"
" będziesz zmieniał płynnie wartość odpowiadającego mu parametru. Aby zatrzymać"
" płynne przejścia, musisz ustawić wartość parametru `_slide` na 0 przed kolejn"
"ym wywołaniem polecenia `control`."

#: 07.3-Sliding-Parameters.md:53
msgid "Sliding FX Opts"
msgstr "Płynne Przejścia w Parametrach Efektów"

#: 07.3-Sliding-Parameters.md:55
msgid "It is also possible to slide FX opts:"
msgstr "Są również możliwe płynne przejścia dla parametrów efektów:"

#: 07.3-Sliding-Parameters.md:57
#, no-wrap
msgid ""
"with_fx :wobble, phase: 1, phase_slide: 5 do |e|\n"
"  use_synth :dsaw\n"
"  play 50, release: 5\n"
"  control e, phase: 0.025\n"
"end"
msgstr ""
"with_fx :wobble, phase: 1, phase_slide: 5 do |e|\n"
"  use_synth :dsaw\n"
"  play 50, release: 5\n"
"  control e, phase: 0.025\n"
"end"

#: 07.3-Sliding-Parameters.md:65
msgid ""
"Now have fun sliding things around for smooth transitions and flowing control."
".."
msgstr ""
"Spróbuj teraz pobawić się płynnymi przejściami, aby spróbować dokonać płynnych"
" przejść i płynnej kontroli..."

#: 08-Data-Structures.md:1
msgid "8 Data Structures"
msgstr "8 Struktury Danych"

#: 08-Data-Structures.md:3
msgid "Data Structures"
msgstr "Struktury Danych"

#: 08-Data-Structures.md:5
msgid "A very useful tool in a programmer's toolkit is a data structure."
msgstr ""
"Struktury danych to bardzo przydatne narzędzie dostępne w standardowym zestawi"
"e narzędzi każdego programisty."

#: 08-Data-Structures.md:7
msgid ""
"Sometimes you may wish to represent and use more than one thing. For example, "
"you may find it useful to have a series of notes to play one after another. Pr"
"ogramming languages have data structures to allow you do exactly this."
msgstr ""
"Czasami będziesz chciał reprezentować i używać czegoś więcej, niż tylko jednej"
" rzeczy. Na przykład przydatnym może okazać się możliwość posiadania serii nut"
" do zagrania jedna po drugiej. Języki programowania posiadają coś takiego jak "
"struktury danych, które pozwalają Ci robić takie rzeczy."

#: 08-Data-Structures.md:12
msgid ""
"There are many exciting and exotic data structures available to programmers - "
"and people are always inventing new ones. However, for now we only really need"
" to consider a very simple data structure - the list."
msgstr ""
"Istnieje wiele ekscytujących i egzotycznych struktur danych dostępnych dla pro"
"gramistów - a ludzie wciąż wymyślają nowe. Na razie potrzebujemy w zasadzie wz"
"iąć pod uwagę tylko jedną prostą strukturę danych - listę."

#: 08-Data-Structures.md:16
msgid ""
"Let's look at it in more detail. We'll cover its basic form and then also how "
"lists can be used to represent scales and chords."
msgstr ""
"Przyjrzyjmy się jej bardziej szczegółowo. Skupimy się na niej podstawowej form"
"ie, następnie pokażemy, w jaki sposób możemy wykorzystać listy do reprezentacj"
"i skal oraz akordów."

#: 08.1-Lists.md:1
msgid "8.1 Lists"
msgstr "8.1 Listy"

#: 08.1-Lists.md:3
msgid "Lists"
msgstr "Listy"

#: 08.1-Lists.md:5
msgid ""
"In this section we'll take a look at a data structure which is very useful - t"
"he list. We met it very briefly before in the section on randomisation when we"
" randomly chose from a list of notes to play:"
msgstr ""
"W tej sekcji przyjrzymy się bardzo przydatnej strukturze danych - liście. Spot"
"kaliśmy ją na krótko już wcześniej w sekcji poświęconej randomizacji, kiedy to"
" wybieraliśmy z listy losowe nuty do zagrania:"

#: 08.1-Lists.md:9
#, no-wrap
msgid "play choose([50, 55, 62])"
msgstr "play choose([50, 55, 62])"

#: 08.1-Lists.md:13
msgid ""
"In this section we'll explore using lists to also represent chords and scales."
" First let's recap how we might play a chord. Remember that if we don't use `s"
"leep`, sounds all happen at the same time:"
msgstr ""
"W obecnym rozdziale zobaczymy, jak możemy wykorzystać listy również do repreze"
"ntacji akordów i skal. Na początku jednak spróbujmy sobie przypomnieć, w jaki "
"sposób możemy zagrać akord. Pamiętasz, że jeśli nie użyliśmy polecenia `sleep`"
", to wszystkie dźwięki zagrają jednocześnie:"

#: 08.1-Lists.md:17
#, no-wrap
msgid ""
"play 52\n"
"play 55\n"
"play 59"
msgstr ""
"play 52\n"
"play 55\n"
"play 59"

#: 08.1-Lists.md:23
msgid "Let's look at other ways to represent this code."
msgstr ""
"Spróbujmy przyjrzeć się innym sposobom, za pomocą których możemy wyrazić powyż"
"szy kod."

#: 08.1-Lists.md:25
msgid "Playing a List"
msgstr "Granie Listy"

#: 08.1-Lists.md:27
msgid ""
"One option is to place all the notes in a list: `[52, 55, 59]`. Our friendly `"
"play` function is smart enough to know how to play a list of notes. Try it:"
msgstr ""
"Jedną z opcji jest umieszczenie wszystkich nut w liście `[52, 55 , 59]`. Nasza"
" poczciwa funkcja `play` jest wystarczająco bystra, by wiedzieć, w jaki sposób"
" ma zagrać listę nut. Spróbuj tego:"

#: 08.1-Lists.md:31
#, no-wrap
msgid "play [52, 55, 59]"
msgstr "play [52, 55, 59]"

#: 08.1-Lists.md:35
msgid ""
"Ooh, that's already nicer to read. Playing a list of notes doesn't stop you fr"
"om using any of the parameters as normal:"
msgstr ""
"Ooh, taki kod jest dużo przyjemniejszy do czytania. Zagranie listy nut, nie bl"
"okuje Ci korzystania z żadnego z parametrów:"

#: 08.1-Lists.md:38
#, no-wrap
msgid "play [52, 55, 59], amp: 0.3"
msgstr "play [52, 55, 59], amp: 0.3"

#: 08.1-Lists.md:42
msgid ""
"Of course, you can also use the traditional note names instead of the MIDI num"
"bers:"
msgstr ""
"Oczywiście możesz również używać tradycyjnych nazw nut zamiast korzystania z l"
"iczb MIDI:"

#: 08.1-Lists.md:45
#, no-wrap
msgid "play [:E3, :G3, :B3]"
msgstr "play [:E3, :G3, :B3]"

#: 08.1-Lists.md:49
msgid ""
"Now those of you lucky enough to have studied some music theory might recognis"
"e that chord as *E Minor* played in the 3rd octave."
msgstr ""
"Teraz Ci z Was, który mieli farta i studiowali trochę teorii muzycznej, mogą z"
"auważyć, że to jest akord *E Minor*, zagrany na 3-ciej oktawie."

#: 08.1-Lists.md:52
msgid "Accessing a List"
msgstr "Dostęp do Listy"

#: 08.1-Lists.md:54
msgid ""
"Another very useful feature of a list is the ability to get information out of"
" it. This may sound a bit strange, but it's no more complicated than someone a"
"sking you to turn a book to page 23. With a list, you'd say, what's the elemen"
"t at index 23? The only strange thing is that in programming indexes usually s"
"tart at 0 not 1."
msgstr ""
"Inną bardzo przydatną cechą list jest możliwość wyciągnięcia z nich informacji"
". Może to brzmieć odrobinę dziwnie, ale nie jest to nic bardziej trudnego niż "
"to, gdy ktoś prosi Cię o to abyś otworzył książkę na stronie 23. Korzystając z"
" listy, mógłbyś zapytać, jaki element znajduje się na 23 pozycji? Jedyną dziwn"
"ą rzeczą w programowaniu jest to, że numery takich pozycji (indeksy) zazwyczaj"
" zaczynają się od 0 a nie od 1."

#: 08.1-Lists.md:60
msgid "With list indexes we don't count 1, 2, 3... Instead we count 0, 1, 2..."
msgstr ""
"Indeksy w listach nie są odliczane przez 1, 2, 3... Zamiast tego odliczamy 0, "
"1, 2..."

#: 08.1-Lists.md:62
msgid "Let's look at this in a little more detail. Take a look at this list:"
msgstr "Przyjrzyjmy się temu trochę bardziej. Spójrz na taką listę:"

#: 08.1-Lists.md:64
#, no-wrap
msgid "[52, 55, 59]"
msgstr "[52, 55, 59]"

#: 08.1-Lists.md:68
msgid ""
"There's nothing especially scary about this. Now, what's the second element in"
" that list? Yes, of course, it's `55`. That was easy. Let's see if we can get "
"the computer to answer it for us too:"
msgstr ""
"Nie ma w niej nic specjalnie strasznego. Teraz pytanie: jaki jest drugi elemen"
"t w tej liście. Tak, zgadłeś, jest to `55`. To było proste. Sprawdźmy, czy moż"
"emy poprosić komputer, aby odpowiedział nam na to pytanie:"

#: 08.1-Lists.md:72 08.4-Rings.md:12
#, no-wrap
msgid "puts [52, 55, 59][1]"
msgstr "puts [52, 55, 59][1]"

#: 08.1-Lists.md:76
msgid ""
"OK, that looks a bit weird if you've never seen anything like it before. Trust"
" me though, it's not too hard. There are three parts to the line above: the wo"
"rd `puts` , our list `52, 55, 59` and our index `[1]`. Firstly we're saying `p"
"uts` because we want Sonic Pi to print the answer out for us in the log. Next,"
" we're giving it our list, and finally our index is asking for the second elem"
"ent. We need to surround our index with square brackets and because counting s"
"tarts at `0`, the index for the second element is `1`. Look:"
msgstr ""
"Dobrze, to wygląda trochę dziwnie, jeśli jeszcze nigdy nie widziałeś niczego t"
"akiego. Zaufaj mi jednak, to nie jest trudne. W powyższej linii są 3 części: s"
"łowo `puts`, nasza lista `52, 55, 59` oraz nasz indeks `[1]`. Najpierw mówimy "
"`puts`, ponieważ chcemy, aby Sonic Pi wyświetlił nam odpowiedź w panelu logowa"
"nia (po prawej stronie). Następnie, przekazujemy do tego polecenia naszą listę"
" i na końcu nasz indeks, który pyta nas o drugi element. Musimy otoczyć nasz i"
"ndeks w nawiasy kwadratowe, a ponieważ liczenie zaczynamy od `0`, to indeks dl"
"a drugiego elementu to `1`. Spójrz:"

#: 08.1-Lists.md:85
#, no-wrap
msgid ""
"# indexes:  0   1   2\n"
"           [52, 55, 59]"
msgstr ""
"# indeksy:  0   1   2\n"
"           [52, 55, 59]"

#: 08.1-Lists.md:90
msgid ""
"Try running the code `puts [52, 55, 59][1]` and you'll see `55` pop up in the "
"log. Change the index `1` to other indexes, try longer lists and think about h"
"ow you might use a list in your next code jam. For example, what musical struc"
"tures might be represented as a series of numbers..."
msgstr ""
"Spróbuj uruchomić kod `puts [52, 55, 59][1]`, a zobaczysz, że liczba `55` poja"
"wi się w panelu logowania. Zmień indeks `1` na inne wartości, spróbuj użyć dłu"
"ższych list i pomyśl, w jaki sposób mógłbyś użyć listy w Twojej kolejnej zabaw"
"ie kodem. Przykładowo: jakie muzyczne struktury mogą być reprezentowane jako s"
"eria liczb..."

#: 08.2-Chords.md:1
msgid "8.2 Chords"
msgstr "8.2 Akordy"

#: 08.2-Chords.md:5
msgid ""
"Sonic Pi has built-in support for chord names which will return lists. Try it "
"for yourself:"
msgstr ""
"Sonic Pi posiada wbudowane wsparcie dla nazw akordów, które zwracają listy. Sp"
"róbuj sam:"

#: 08.2-Chords.md:8
#, no-wrap
msgid "play chord(:E3, :minor)"
msgstr "play chord(:E3, :minor)"

#: 08.2-Chords.md:12
msgid ""
"Now, we're really getting somewhere. That looks a lot more pretty than the raw"
" lists (and is easier to read for other people). So what other chords does Son"
"ic Pi support? Well, a *lot*. Try some of these:"
msgstr ""
"Teraz naprawdę zaczynamy dokądś zmierzać. To wygląda dużo ładniej niż czyste l"
"isty (i jest dużo łatwiejsze do czytania dla innych ludzi). Jakie więc inne ak"
"ordy wspiera Sonic Pi? Całkiem *sporo*. Spróbuj tych:"

#: 08.2-Chords.md:16
msgid "`chord(:E3, :m7)`"
msgstr "`chord(:E3, :m7)`"

#: 08.2-Chords.md:17
msgid "`chord(:E3, :minor)`"
msgstr "`chord(:E3, :minor)`"

#: 08.2-Chords.md:18
msgid "`chord(:E3, :dim7)`"
msgstr "`chord(:E3, :dim7)`"

#: 08.2-Chords.md:19
msgid "`chord(:E3, :dom7)`"
msgstr "`chord(:E3, :dom7)`"

#: 08.2-Chords.md:21
msgid "Arpeggios"
msgstr "Arpeggia"

#: 08.2-Chords.md:23
msgid "We can easily turn chords into arpeggios with the function `play_pattern`:"
msgstr ""
"Możemy bardzo łatwo zmienić akordy w arpeggia za pomocą funkcji `play_pattern`"
":"

#: 08.2-Chords.md:26
#, no-wrap
msgid "play_pattern chord(:E3, :m7)"
msgstr "play_pattern chord(:E3, :m7)"

#: 08.2-Chords.md:30
msgid ""
"Ok, that's not so fun - it played it really slowly. `play_pattern` will play e"
"ach note in the list separated with a call to `sleep 1` between each call to `"
"play`. We can use another function `play_pattern_timed` to specify our own tim"
"ings and speed things up:"
msgstr ""
"Okej, to nie jest jakoś mocno fajne - zostało zagrane dość wolno. Funkcja `pla"
"y_pattern` zagra każdą listę z przekazanej listy oddzielając każdą nutę urucho"
"mieniem polecenia `sleep 1` pomiędzy każdym uruchomieniem funkcji `play`. Może"
"my jednak użyć innej funkcji `play_pattern_timed`, aby móc samodzielnie określ"
"ić timing i przyśpieszyć bieg rzeczy:"

#: 08.2-Chords.md:35
#, no-wrap
msgid "play_pattern_timed chord(:E3, :m7), 0.25"
msgstr "play_pattern_timed chord(:E3, :m7), 0.25"

#: 08.2-Chords.md:39
msgid "We can even pass a list of times which it will treat as a circle of times:"
msgstr ""
"Możemy nawet przekazać listę czasów, która zostanie potraktowania jako krąg cz"
"asów:"

#: 08.2-Chords.md:42
#, no-wrap
msgid "play_pattern_timed chord(:E3, :m13), [0.25, 0.5]"
msgstr "play_pattern_timed chord(:E3, :m13), [0.25, 0.5]"

#: 08.2-Chords.md:46
msgid "This is the equivalent to:"
msgstr "Jest to odpowiednik takiego kawałka kodu:"

#: 08.2-Chords.md:48
#, no-wrap
msgid ""
"play 52\n"
"sleep 0.25\n"
"play 55\n"
"sleep 0.5\n"
"play 59\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.5\n"
"play 66\n"
"sleep 0.25\n"
"play 69\n"
"sleep 0.5\n"
"play 73"
msgstr ""
"play 52\n"
"sleep 0.25\n"
"play 55\n"
"sleep 0.5\n"
"play 59\n"
"sleep 0.25\n"
"play 62\n"
"sleep 0.5\n"
"play 66\n"
"sleep 0.25\n"
"play 69\n"
"sleep 0.5\n"
"play 73"

#: 08.2-Chords.md:64
msgid "Which would you prefer to write?"
msgstr "Który kawałek wydaje Ci się wygodniejszy do napisania, którego byś użył?"

#: 08.3-Scales.md:1
msgid "8.3 Scales"
msgstr "8.3 Skale"

#: 08.3-Scales.md:3
msgid "Scales"
msgstr "Skale"

#: 08.3-Scales.md:5
msgid ""
"Sonic Pi has support for a wide range of scales. How about playing a C3 major "
"scale?"
msgstr ""
"Sonic Pi posiada wsparcie dla szerokiego zakresu skal. Co powiesz na to, aby z"
"agrać C3 ze skali durowej?"

#: 08.3-Scales.md:8
#, no-wrap
msgid "play_pattern_timed scale(:c3, :major), 0.125, release: 0.1"
msgstr "play_pattern_timed scale(:c3, :major), 0.125, release: 0.1"

#: 08.3-Scales.md:12
msgid "We can even ask for more octaves:"
msgstr "Możemy nawet poprosić o więcej oktaw:"

#: 08.3-Scales.md:14
#, no-wrap
msgid "play_pattern_timed scale(:c3, :major, num_octaves: 3), 0.125, release: 0.1"
msgstr "play_pattern_timed scale(:c3, :major, num_octaves: 3), 0.125, release: 0.1"

#: 08.3-Scales.md:18
msgid "How about all the notes in a pentatonic scale?"
msgstr "Co powiesz na wszystkie nuty w skali pentatonicznej (pentatonika)?"

#: 08.3-Scales.md:20
#, no-wrap
msgid ""
"play_pattern_timed scale(:c3, :major_pentatonic, num_octaves: 3), 0.125, relea"
"se: 0.1"
msgstr ""
"play_pattern_timed scale(:c3, :major_pentatonic, num_octaves: 3), 0.125, relea"
"se: 0.1"

#: 08.3-Scales.md:24
msgid "Random notes"
msgstr "Losowe nuty"

#: 08.3-Scales.md:26
msgid ""
"Chords and scales are great ways of constraining a random choice to something "
"meaningful. Have a play with this example which picks random notes from the ch"
"ord E3 minor:"
msgstr ""
"Akordy i skale są świetnym sposobem na ograniczenie wyboru losowego do czegoś "
"sensownego. Spróbuj pobawić się z tym przykładem, który wybiera losowe nuty z "
"akordu E3 moll:"

#: 08.3-Scales.md:30
#, no-wrap
msgid ""
"use_synth :tb303\n"
"loop do\n"
"  play choose(chord(:E3, :minor)), release: 0.3, cutoff: rrand(60, 120)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"use_synth :tb303\n"
"loop do\n"
"  play choose(chord(:E3, :minor)), release: 0.3, cutoff: rrand(60, 120)\n"
"  sleep 0.25\n"
"end"

#: 08.3-Scales.md:38
msgid "Try switching in different chord names and cutoff ranges."
msgstr "Spróbuj poustawiać inne nazwy akordów oraz inne zakresy odcięcia (cutoff)."

#: 08.3-Scales.md:40
msgid "Discovering Chords and Scales"
msgstr "Odkrywanie Akordów i Skal"

#: 08.3-Scales.md:42
msgid ""
"To find out which scales and chords are supported by Sonic Pi simply click the"
" Lang button on the far left of this tutorial and then choose either chord or "
"scale in the API list. In the information in the main panel, scroll down until"
" you see a long list of chords or scales (depending on which you're looking at"
")."
msgstr ""
"Aby zobaczyć, jakie skale i akordy są wspierane przez Sonic Pi, kliknij na prz"
"ycisk Lang znajdujący się po lewej stronie tego samouczka, a następnie z listy"
" dostępnych API wybierz pozycję chord (akord) lub scale (skala). W informacjac"
"h znajdujących się w głównym panelu, przewiń w dół, aż ujrzysz długą listę ako"
"rdów lub skal (w zależności od tego, na którą pozycję patrzysz)."

#: 08.3-Scales.md:48
msgid "Have fun and remember: there are no mistakes, only opportunities."
msgstr "Baw się i pamiętaj: błędów nie ma, są tylko możliwości."

#: 08.4-Rings.md:1
msgid "8.4 Rings"
msgstr "8.4 Pierścienie"

#: 08.4-Rings.md:3 A.11-beat-tracking.md:62
msgid "Rings"
msgstr "Pierścienie"

#: 08.4-Rings.md:5
msgid ""
"An interesting spin on standard lists are rings. If you know some programming,"
" you might have come across ring buffers or ring arrays. Here, we'll just go f"
"or ring - it's short and simple."
msgstr ""
"Ciekawym przypadkiem standardowych list są pierścienie. Jeśli znasz się trochę"
" na programowaniu, to mogło się zdarzyć, że miałeś do czynienia z buforami cyk"
"licznymi lub tablicami cyklicznymi. Tutaj przyjrzymy się tylko pierścieniowi -"
" jest krótki i prosty."

#: 08.4-Rings.md:9
msgid ""
"In the previous section on lists we saw how we could fetch elements out of the"
"m by using the indexing mechanism:"
msgstr ""
"W poprzedniej sekcji dotyczącej list widzieliśmy, w jaki sposób możemy wyciąga"
"ć z nich elementy, korzystając z mechanizmu indeksowania:"

#: 08.4-Rings.md:16
msgid ""
"Now, what happens if you want index `100`? Well, there's clearly no element at"
" index 100 as the list has only three elements in it. So Sonic Pi will return "
"you `nil` which means nothing."
msgstr ""
"A co się stanie, jeśli chciałbyś pozycję spod indeksu `100`? Dobrze, więc na p"
"ozycji 100 nie ma żadnego elementu, jako że lista posiada w sobie tylko trzy e"
"lementy. Sonic Pi zwróci więc wartość `nil`, co oznacza nic."

#: 08.4-Rings.md:20
msgid ""
"However, consider you have a counter such as the current beat which continuall"
"y increases. Let's create our counter and our list:"
msgstr ""
"Jednakże biorąc pod uwagę, że masz licznik taki, jak aktualne uderzenie, które"
" nieustannie rośnie. Spróbujmy utworzyć sobie licznik oraz listę:"

#: 08.4-Rings.md:23
#, no-wrap
msgid ""
"counter = 0\n"
"notes = [52, 55, 59]"
msgstr ""
"counter = 0\n"
"notes = [52, 55, 59]"

#: 08.4-Rings.md:28
msgid "We can now use our counter to access a note in our list:"
msgstr ""
"Możemy teraz użyć naszego licznika, aby dostać się do nuty znajdującej się w n"
"aszej liście:"

#: 08.4-Rings.md:30
#, no-wrap
msgid "puts notes[counter]"
msgstr "puts notes[counter]"

#: 08.4-Rings.md:34
msgid "Great, we got `52`. Now, let's increment our counter and get another note:"
msgstr ""
"Super, otrzymaliśmy `52`. Teraz, spróbujmy zwiększyć nasz licznik i dostać się"
" do kolejnej nuty:"

#: 08.4-Rings.md:37
#, no-wrap
msgid ""
"counter = (inc counter)\n"
"puts notes[counter]"
msgstr ""
"counter = (inc counter)\n"
"puts notes[counter]"

#: 08.4-Rings.md:42
msgid ""
"Super, we now get `55` and if we do it again we get `59`. However, if we do it"
" again, we'll run out of numbers in our list and get `nil`. What if we wanted "
"to just loop back round and start at the beginning of the list again? This is "
"what rings are for."
msgstr ""
"Super, teraz otrzymaliśmy `55` i jeśli zrobimy to jeszcze raz, to otrzymamy li"
"czbę `59`. Jednakże jeśli zrobimy to kolejny raz, to wyskoczymy poza liczby zn"
"ajdujące się w naszej liście i otrzymamy `nil`. A co, jeśli chcieliśmy tylko z"
"robić pętlę, wrócić do początku i zacząć na samym początku listy od nowa? Do t"
"ego właśnie służą pierścienie."

#: 08.4-Rings.md:47
msgid "Creating Rings"
msgstr "Tworzenie Pierścieni"

#: 08.4-Rings.md:49
msgid ""
"We can create rings one of two ways. Either we use the `ring` function with th"
"e elements of the ring as parameters:"
msgstr ""
"Możemy tworzyć pierścienie na dwa sposoby. Albo użyjemy funkcji `ring` podając"
" elementy dla danego pierścienia jako parametry:"

#: 08.4-Rings.md:52
#, no-wrap
msgid "(ring 52, 55, 59)"
msgstr "(ring 52, 55, 59)"

#: 08.4-Rings.md:56
msgid ""
"Or we can take a normal list and convert it to a ring by sending it the `.ring"
"` message:"
msgstr ""
"Albo możemy wziąć normalną listę i przekształcić ją w pierścień poprzez wysłan"
"ie do niej wiadomości `.ring`:"

#: 08.4-Rings.md:59
#, no-wrap
msgid "[52, 55, 59].ring"
msgstr "[52, 55, 59].ring"

#: 08.4-Rings.md:63
msgid "Indexing Rings"
msgstr "Indeksowanie Pierścieni"

#: 08.4-Rings.md:65
msgid ""
"Once we have a ring, you can use it in exactly the same way you would use a no"
"rmal list with the exception that you can use indexes that are negative or lar"
"ger than the size of the ring and they'll wrap round to always point at one of"
" the ring's elements:"
msgstr ""
"Gdy już masz pierścień, możesz go używać dokładnie w ten sam sposób, w jaki uż"
"ywasz normalnej listy, z tym jednym wyjątkiem, że możesz używać indeksów ujemn"
"ych oraz takich, które są większe niż ilość elementów w danym pierścieniu, a b"
"ędą one powtarzać się cyklicznie i zawsze będą wskazywać na jeden z elementów "
"pierścienia:"

#: 08.4-Rings.md:70
#, no-wrap
msgid ""
"(ring 52, 55, 59)[0] #=> 52\n"
"(ring 52, 55, 59)[1] #=> 55\n"
"(ring 52, 55, 59)[2] #=> 59\n"
"(ring 52, 55, 59)[3] #=> 52\n"
"(ring 52, 55, 59)[-1] #=> 59"
msgstr ""
"(ring 52, 55, 59)[0] #=> 52\n"
"(ring 52, 55, 59)[1] #=> 55\n"
"(ring 52, 55, 59)[2] #=> 59\n"
"(ring 52, 55, 59)[3] #=> 52\n"
"(ring 52, 55, 59)[-1] #=> 59"

#: 08.4-Rings.md:78
msgid "Using Rings"
msgstr "Korzystanie z Pierścieni"

#: 08.4-Rings.md:80
msgid ""
"Let's say we're using a variable to represent the current beat number. We can "
"use this as an index into our ring to fetch notes to play, or release times or"
" anything useful we've stored in our ring regardless of the beat number we're "
"currently on."
msgstr ""
"Przyjmijmy, że używamy zmiennej do reprezentacji aktualnego numeru uderzenia. "
"Możemy użyć jej jako indeksu w naszym pierścieniu, aby wydobywać kolejne nuty "
"do zagrania, czasy zanikania albo cokolwiek innego przydatnego, co załadowaliś"
"my do naszego pierścienia, niezależnie od numeru uderzenia (beat), przy którym"
" aktualnie się znajdujemy."

#: 08.4-Rings.md:85
msgid "Scales and Chords are Rings"
msgstr "Skale i Akordy są Pierścieniami"

#: 08.4-Rings.md:87
msgid ""
"A useful thing to know is that the lists returned by `scale` and `chord` are a"
"lso rings and allow you to access them with arbitrary indexes."
msgstr ""
"Przydatną rzeczą jest wiedza o tym, że listy zwracane przez skale `scale` oraz"
" akordy `chord`, są również pierścieniami i pozwalają Ci na dostęp do nich z w"
"ykorzystaniem bezwzględnych indeksów."

#: 08.4-Rings.md:90
msgid "Ring Constructors"
msgstr "Konstruktory Pierścieni"

#: 08.4-Rings.md:92
msgid ""
"In addition to `ring` there are a number of other functions which will constru"
"ct a ring for us."
msgstr ""
"Oprócz funkcji `ring` istnieje również kilka innych funkcji, które pozwalają n"
"am na tworzenie pierścieni."

#: 08.4-Rings.md:95
msgid "`range` invites you specify a starting point, end point and step size."
msgstr "`range` wymaga, abyś określił punkt startu, końca oraz rozmiar kroku."

#: 08.4-Rings.md:96
msgid "`bools` allows you to use `1`s and `0`s to succinctly represent booleans."
msgstr ""
"`bools` pozwala Ci na użycie wartości `1` i `0`, aby treściwie reprezentować w"
"artości logiczne (boolean)."

#: 08.4-Rings.md:97
msgid "`knit` allows you to knit a sequence of repeated values."
msgstr "`knit` pozwala Ci na spajanie sekwencji powtarzalnych wartości."

#: 08.4-Rings.md:98
msgid "`spread` creates a ring of bools with a Euclidean distribution."
msgstr "`spread` tworzy pierścień wartości logicznych o rozkładzie euklidesowym."

#: 08.4-Rings.md:100
msgid "Take a look at their respective documentation for more information."
msgstr ""
"Przyjrzyj się poszczególnym dokumentacjom dla uzyskania większej ilości inform"
"acji."

#: 08.5-Ring-Chains.md:1
msgid "8.5 Ring Chains"
msgstr "8.5 Łańcuchy Pierścieni (Ring Chains)"

#: 08.5-Ring-Chains.md:3
msgid "Ring Chains"
msgstr "Łańcuchy Pierścieni (Ring Chains)"

#: 08.5-Ring-Chains.md:5
msgid ""
"In addition to the constructors such as `range` and `spread` another way of cr"
"eating new rings is to manipulate existing rings."
msgstr ""
"Oprócz konstruktorów takich jak `range` i `spread`, innym sposobem tworzenia n"
"owych pierścieni jest manipulowanie i modyfikacja istniejących pierścieni (rin"
"gs)."

#: 08.5-Ring-Chains.md:9
msgid "Chain Commands"
msgstr "Łańcuchy poleceń (Chain Commands)"

#: 08.5-Ring-Chains.md:11
msgid "To explore this, take a simple ring:"
msgstr "Aby zbadać ten temat, stwórzmy prosty pierścień:"

#: 08.5-Ring-Chains.md:13
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50)"
msgstr "(ring 10, 20, 30, 40, 50)"

#: 08.5-Ring-Chains.md:17
msgid ""
"What if we wanted it backwards? Well we'd use the chain command `.reverse` to "
"take the ring and turn it around:"
msgstr ""
"Co, jeśli chcielibyśmy otrzymać wszystkie elementy tego pierścienia w odwrotne"
"j kolejności? Wystarczy, że użyjemy w łańcuchu poleceń `.reverse`, aby wziąć n"
"asz pierścień i odwrócić go:"

#: 08.5-Ring-Chains.md:20
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).reverse  #=> (ring 50, 40, 30, 20, 10)"
msgstr "(ring 10, 20, 30, 40, 50).reverse  #=> (ring 50, 40, 30, 20, 10)"

#: 08.5-Ring-Chains.md:24
msgid "Now, what if we wanted the first three values from the ring?"
msgstr ""
"A co, jeśli teraz potrzebujemy tylko pierwsze trzy elementy z naszego pierście"
"nia?"

#: 08.5-Ring-Chains.md:26
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).take(3)  #=> (ring 10, 20, 30)"
msgstr "(ring 10, 20, 30, 40, 50).take(3)  #=> (ring 10, 20, 30)"

#: 08.5-Ring-Chains.md:30
msgid "Finally, what if we wanted to shuffle the ring?"
msgstr ""
"I na koniec jeszcze jedno: co, jeśli chcielibyśmy przetasować elementy naszego"
" pierścienia tak, jak tasujemy karty przed grą?"

#: 08.5-Ring-Chains.md:32
#, no-wrap
msgid "(ring 10, 20, 30, 40, 50).shuffle  #=> (ring 40, 30, 10, 50, 20)"
msgstr "(ring 10, 20, 30, 40, 50).shuffle  #=> (ring 40, 30, 10, 50, 20)"

#: 08.5-Ring-Chains.md:36
msgid "Multiple Chains"
msgstr "Wielokrotność Łańcuchów"

#: 08.5-Ring-Chains.md:38
msgid ""
"This is already a powerful way of creating new rings. However, the *real* powe"
"r comes when you chain a few of these commands together."
msgstr ""
"Powyższe polecenia dają bardzo duże możliwości tworzenia nowych pierścieni (ri"
"ngs). Jednakże *prawdziwa* moc pojawia się dopiero w momencie, gdy połączysz k"
"ilka poleceń w jeden łańcuch."

#: 08.5-Ring-Chains.md:41
msgid "How about shuffling the ring, dropping 1 element and then taking the next 3?"
msgstr ""
"Co powiesz na to, aby najpierw przetasować pierścień, potem usunąć z niego 1 e"
"lement, i z elementów, które pozostały, wybrać tylko pierwsze 3?"

#: 08.5-Ring-Chains.md:43
msgid "Let's take this in stages:"
msgstr "Zróbmy to krok po kroku:"

#: 08.5-Ring-Chains.md:45
msgid "`(ring 10, 20, 30, 40, 50)` - our initial ring"
msgstr "`(ring 10, 20, 30, 40, 50)` - nasz początkowy pierścień"

#: 08.5-Ring-Chains.md:46
msgid "`(ring 10, 20, 30, 40, 50).shuffle` - shuffles - `(ring 40, 30, 10, 50, 20)`"
msgstr "`(ring 10, 20, 30, 40, 50).shuffle` - tasujemy - `(ring 40, 30, 10, 50, 20)`"

#: 08.5-Ring-Chains.md:47
msgid "`(ring 10, 20, 30, 40, 50).shuffle.drop(1)` - drop 1 - `(ring 30, 10, 50, 20)`"
msgstr ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1)` - usuwamy 1-wszy element - `(ring "
"30, 10, 50, 20)`"

#: 08.5-Ring-Chains.md:48
msgid ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1).take(3)` - take 3 - `(ring 30, 10, "
"50)`"
msgstr ""
"`(ring 10, 20, 30, 40, 50).shuffle.drop(1).take(3)` - pozostawiamy tylko pierw"
"sze 3 - `(ring 30, 10, 50)`"

#: 08.5-Ring-Chains.md:50
msgid ""
"Can you see how we can just create a long chain of these methods by just *stic"
"king them together*. We can combine these in any order we want creating an ext"
"remely rich and powerful way of generating new rings from existing ones."
msgstr ""
"Widzisz, jak łatwo możemy stworzyć długi łańcuch tych metod, *sklejając je po "
"prostu razem*? Możemy użyć tych metod w dowolnej kolejności, na jaką nas tylko"
" najdzie ochota. Dzięki temu mamy bardzo bogatą i potężną paletę sposobów, dzi"
"ęki którym możemy tworzyć nowe pierścienie z już istniejących."

#: 08.5-Ring-Chains.md:55
msgid "Immutability"
msgstr "Niezmienność"

#: 08.5-Ring-Chains.md:57
msgid ""
"These rings have a powerful and important property. They are immutable which m"
"eans that they can not change. This means that the chaining methods described "
"in this section *do not change rings* rather they *create new rings*. This mea"
"ns you're free to share rings across threads and start chaining them within a "
"thread knowing you won't be affecting any other thread using the same ring."
msgstr ""
"Pierścienie posiadają pewną potężną i ważną cechę. Są niezmienne, co oznacza, "
"że gdy raz zostaną już utworzone, to nie mogą zostać zmienione. Z tego wynika,"
" że łańcuchy wywołań metod opisane w tym rozdziale *nie zmieniają pierścieni*,"
" lecz *tworzą nowe pierścienie*. Dzięki takiemu podejściu nic nie stoi na prze"
"szkodzie, abyś mógł współdzielić dany pierścień pomiędzy różnymi wątkami i wyw"
"oływać na nim łańcuchy metod w ramach jednego wątku, gdyż wiesz, że nie wpłyni"
"e to w żaden sposób na jakikolwiek inny wątek, który korzysta z tego samego pi"
"erścienia."

#: 08.5-Ring-Chains.md:64
msgid "Available Chain Methods"
msgstr "Dostępne Łańcuchy Metod"

#: 08.5-Ring-Chains.md:66
msgid "Here's a list of the available chain methods for you to play with:"
msgstr "Oto lista metod, które możesz łączyć w łańcuchy wywołań:"

#: 08.5-Ring-Chains.md:68
msgid "`.reverse` - returns a reversed version of the ring"
msgstr "`.reverse` - zwraca odwróconą wersję pierścienia"

#: 08.5-Ring-Chains.md:69
msgid "`.sort` - creates a sorted version of the ring"
msgstr "`.sort` - tworzy posortowaną wersję pierścienia"

#: 08.5-Ring-Chains.md:70
msgid "`.shuffle` - creates a shuffled version of the ring"
msgstr "`.shuffle` - tworzy pierścień z wartościami, które są przetasowane"

#: 08.5-Ring-Chains.md:71
msgid "`.pick(3)` - returns a ring with the results of calling `.choose` 3 times"
msgstr ""
"`.pick(3)` - zwraca pierścień, który zawiera 3 losowo wybrane elementy z orygi"
"nalnego pierścienia (działanie analogiczne do funkcji `choose`)"

#: 08.5-Ring-Chains.md:72
msgid ""
"`.pick` - similar to `.pick(3)` only the size defaults to the same as the orig"
"inal ring"
msgstr ""
"`.pick` - działanie analogiczne do funkcji `.pick(3)` z tym, że w tym przypadk"
"u liczba wylosowanych elementów jest równa ilości elementów znajdujących się w"
" oryginalnym pierścieniu"

#: 08.5-Ring-Chains.md:73
msgid "`.take(5)` - returns a new ring containing only the first 5 elements"
msgstr "`.take(5)` - zwraca nowy pierścień, który zawiera tylko 5 pierwszych elementów"

#: 08.5-Ring-Chains.md:74
msgid "`.drop(3)` - returns a new ring with everything but the first 3 elements"
msgstr ""
"`.drop(3)` - zwraca nowy pierścień, który zawiera wszystkie elementy oprócz pi"
"erwszych 3"

#: 08.5-Ring-Chains.md:75
msgid "`.butlast` - returns a new ring with the last element missing"
msgstr "`.butlast` - zwraca nowy pierścień, który nie zawiera ostatniego elementu"

#: 08.5-Ring-Chains.md:76
msgid "`.drop_last(3)` - returns a new ring with the last 3 elements missing"
msgstr ""
"`.drop_last(3)` - zwraca nowy pierścień, kóry nie zawiera 3 ostatnich elementó"
"w"

#: 08.5-Ring-Chains.md:77
msgid "`.take_last(6)`- returns a new ring with only the last 6 elements"
msgstr ""
"`.take_last(6)`- zwraca nowy pierścień, który posiada tylko 6 ostatnich elemen"
"tów"

#: 08.5-Ring-Chains.md:78
msgid "`.stretch(2)` - repeats each element in the ring twice"
msgstr "`.stretch(2)` - powtarza każdy z elementów w pierścieniu dwukrotnie"

#: 08.5-Ring-Chains.md:79
msgid "`.repeat(3)` - repeats the entire ring 3 times"
msgstr "`.repeat(3)` - powtarza cały pierścień trzykrotnie"

#: 08.5-Ring-Chains.md:80
msgid "`.mirror` - adds the ring to a reversed version of itself"
msgstr "`.mirror` - dodaje pierścień do odwróconej wersji samego siebie"

#: 08.5-Ring-Chains.md:81
msgid "`.reflect` - same as mirror but doesn't duplicate middle value"
msgstr ""
"`.reflect` - działa tak samo jak mirror, ale nie powtarza środkowej wartości z"
" pierścienia"

#: 08.5-Ring-Chains.md:83
msgid ""
"Of course, those chain methods that take numbers can take other numbers too! S"
"o feel free to call `.drop(5)` instead of `.drop(3)` if you want to drop the f"
"irst 5 elements."
msgstr ""
"Oczywiście metody, które przyjmują jako parametr liczbę, mogą przyjmować też i"
"nne liczby! Nie krępuj się więc i spróbuj wywołać metodę `.drop(5)` zamiast wi"
"docznej parę linijek wyżej metody `.drop(3)`. Pozwoli Ci to stworzyć nową list"
"ę, która nie będzie zawierała 5 pierwszych elementów."

#: 09-Live-Coding.md:1
msgid "9 Live Coding"
msgstr "9 Kodowanie na Żywo"

#: 09-Live-Coding.md:5
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to write a"
"nd modify code live to make music, just like you might perform live with a gui"
"tar. One advantage of this approach is to give you more feedback whilst compos"
"ing (get a simple loop running and keep tweaking it till it sounds just perfec"
"t). However, the main advantage is that you can take Sonic Pi on stage and gig"
" with it."
msgstr ""
"Jednym z najbardziej ekscytujących aspektów Sonic Pi jest to, że pozwala Ci tw"
"orzyć muzykę poprzez pisanie i modyfikację kodu na żywo, tak samo, jakbyś mógł"
" występować na żywo z gitarą. Jedną z zalet takiego podejścia jest to, że powa"
"la Ci na otrzymywanie informacji zwrotnej znacznie szybciej niż w sytuacji, gd"
"ybyś komponował (stwórz prostą pętlę, która będzie się kręcić w kółko i zaczni"
"j dopieszczać ją, aż zacznie brzmieć idealnie). Główną i podstawową zaletą jes"
"t jednak to, że możesz wziąć Sonic Pi ze sobą na scenę i wykorzystać go do wys"
"tępów na żywo."

#: 09-Live-Coding.md:12
msgid ""
"In this section we'll cover the fundamentals of turning your static code compo"
"sitions into dynamic performances."
msgstr ""
"W tym rozdziale przedstawimy Ci podstawy tego, w jaki sposób możesz zmienić Tw"
"oje statyczne kompozycje w pełne życia występy."

#: 09-Live-Coding.md:15
msgid "Hold on to your seats..."
msgstr "Zapnijcie pasy..."

#: 09.1-Live-Coding-Fundamentals.md:1
msgid "9.1 Live Coding Fundamentals"
msgstr "9.1 Podstawy Kodowania na Żywo"

#: 09.1-Live-Coding-Fundamentals.md:5
msgid ""
"Now we've learned enough to really start having some fun. In this section we'l"
"l draw from all the previous sections and show you how you can start making yo"
"ur music compositions live and turning them into a performance. For that we'll"
" need 3 main ingredients:"
msgstr ""
"Teraz nauczyliśmy się już wystarczająco dużo, aby zacząć prawdziwą zabawę. W t"
"ym rozdziale będziemy czerpać ze wszystkich poprzednich i pokażemy Ci, w jaki "
"sposób możesz zacząć tworzyć swoje własne kompozycje muzyczne na żywo i zmieni"
"ć je w występy na żywo. Będziemy do tego potrzebować 3 podstawowych składników"
":"

#: 09.1-Live-Coding-Fundamentals.md:10
msgid "An ability to write code that makes sounds - CHECK!"
msgstr "Umiejętność pisania kodu, który tworzy dźwięki - JEST!"

#: 09.1-Live-Coding-Fundamentals.md:11
msgid "An ability to write functions - CHECK!"
msgstr "Umiejętność pisania własnych funkcji - JEST!"

#: 09.1-Live-Coding-Fundamentals.md:12
msgid "An ability to use (named) threads - CHECK!"
msgstr "Umiejętność korzystania z (nazwanych) wątków - JEST!"

#: 09.1-Live-Coding-Fundamentals.md:14
msgid ""
"Alrighty, let's get started. Let's live code our first sounds. We first need a"
" function containing the code we want to play. Let's start simple. We also wan"
"t to loop calls to that function in a thread:"
msgstr ""
"W porząsiu, zaczynamy. Spróbujmy zakodować na żywo nasze pierwsze dźwięki. Naj"
"pierw potrzebujemy funkcję zawierającą kod, który chcemy zagrać. Zacznijmy od "
"czegoś prostego. Potrzebujemy również, aby każda pętla wywołująca tę funkcję, "
"była uruchamiana w nowym wątku:"

#: 09.1-Live-Coding-Fundamentals.md:18
#, no-wrap
msgid ""
"define :my_loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"in_thread(name: :looper) do\n"
"  loop do\n"
"    my_loop\n"
"  end\n"
"end"
msgstr ""
"define :my_loop do\n"
"  play 50\n"
"  sleep 1\n"
"end\n"
"in_thread(name: :looper) do\n"
"  loop do\n"
"    my_loop\n"
"  end\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:31
msgid ""
"If that looks a little too complicated to you, go back and re-read the section"
"s on functions and threads. It's not too complicated if you've already wrapped"
" your head around these things."
msgstr ""
"Jeśli powyższy kawałek kodu wydaje Ci się zbyt skomplikowany, wróć z powrotem "
"i ponownie przeczytaj rozdziały dotyczące funkcji i wątków. Gdy to zrobisz i u"
"da Ci się dobrze zrozumieć te 2 tematy, to powyższy kawałek nie powinien spraw"
"ić Ci żadnych kłopotów."

#: 09.1-Live-Coding-Fundamentals.md:35
msgid ""
"What we have here is a function definition which just plays note 50 and sleeps"
" for a beat. We then define a named thread called `:looper` which just loops a"
"round calling `my_loop` repeatedly."
msgstr ""
"To, co mamy powyżej, to nic innego jak funkcja, która po prostu gra nutę o war"
"tości 50 i następnie czeka 1 uderzenie. W kolejnym kroku mamy definicję wątku "
"nazwanego `:looper`, który po prostu kręci się w kółko i uruchamia funkcję `my"
"_loop`."

#: 09.1-Live-Coding-Fundamentals.md:39
msgid "If you run this code, you'll hear note 50 repeating again and again..."
msgstr "Gdy uruchomisz ten kod, usłyszysz nutę 50, która powtarza się i gra w kółko..."

#: 09.1-Live-Coding-Fundamentals.md:41
msgid "Changing it up"
msgstr "Spróbujmy coś zmienić"

#: 09.1-Live-Coding-Fundamentals.md:43
msgid ""
"Now, this is where the fun starts. Whilst the code is *still running* change 5"
"0 to another number, say 55, then press the Run button again. Woah! It changed"
"! Live!"
msgstr ""
"Teraz czas na moment, w którym zaczyna się cała zabawa. W momencie, gdy kod je"
"st *wciąż uruchomiony*, spróbuj zmienić liczbę 50 na inną, powiedzmy 55, nastę"
"pnie naciśnij przycisk Run jeszcze raz. Łał! To się zmieniło! Ten kod żyje!"

#: 09.1-Live-Coding-Fundamentals.md:47
msgid ""
"It didn't add a new layer because we're using named threads which only allow o"
"ne thread for each name. Also, the sound changed because we *redefined* the fu"
"nction. We gave `:my_loop` a new definition. When the `:looper` thread looped "
"around it simply called the new definition."
msgstr ""
"Nowa warstwa dźwięku nie została dodana, ponieważ korzystamy z nazwanych wątkó"
"w co pozwala tylko na jeden wątek dla jednej nazwy. Ponadto dźwięk się zmienił"
", ponieważ *przedefiniowaliśmy* funkcję. Nadaliśmy funkcji `:my_loop` nową def"
"inicję - znaczenie. Kiedy wątek `:looper` przekręci się po raz kolejny, to w n"
"astępnej iteracji zostanie zawołana funkcja o nowej definicji."

#: 09.1-Live-Coding-Fundamentals.md:52
msgid ""
"Try changing it again, change the note, change the sleep time. How about addin"
"g a `use_synth` statement? For example, change it to:"
msgstr ""
"Spróbuj zmienić ją ponownie, zmień nutę, zmień wartość parametru, jaki przekaz"
"ujemy do funkcji sleep. Co powiesz na dodanie polecenia `use_synth`? Na przykł"
"ad zmieńmy kod w taki sposób:"

#: 09.1-Live-Coding-Fundamentals.md:55
#, no-wrap
msgid ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play 50, release: 0.3\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play 50, release: 0.3\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:63
msgid ""
"Now it sounds pretty interesting, but we can spice it up further. Instead of p"
"laying the same note again and again, try playing a chord:"
msgstr ""
"Brzmi to całkiem ciekawie, ale możemy urozmaicić to jeszcze bardziej. Zamiast "
"grać w kółko tę samą nutę, spróbujmy zagrać akord:"

#: 09.1-Live-Coding-Fundamentals.md:67
#, no-wrap
msgid ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play chord(:e3, :minor), release: 0.3\n"
"  sleep 0.5\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play chord(:e3, :minor), release: 0.3\n"
"  sleep 0.5\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:75
msgid "How about playing random notes from the chord:"
msgstr "A co powiesz na granie losowych nut z akordu:"

#: 09.1-Live-Coding-Fundamentals.md:77
#, no-wrap
msgid ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.3\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.3\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:85
msgid "Or using a random cutoff value:"
msgstr "Albo użycie losowej wartości dla parametru odcięcia (cutoff):"

#: 09.1-Live-Coding-Fundamentals.md:87
#, no-wrap
msgid ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:95
msgid "Finally, add some drums:"
msgstr "I na sam koniec: dodajmy trochę bębnów:"

#: 09.1-Live-Coding-Fundamentals.md:97
#, no-wrap
msgid ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  sample :drum_bass_hard, rate: rrand(0.5, 2)\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"
msgstr ""
"define :my_loop do\n"
"  use_synth :tb303\n"
"  sample :drum_bass_hard, rate: rrand(0.5, 2)\n"
"  play choose(chord(:e3, :minor)), release: 0.2, cutoff: rrand(60, 130)\n"
"  sleep 0.25\n"
"end"

#: 09.1-Live-Coding-Fundamentals.md:106
msgid "Now things are getting exciting!"
msgstr "Teraz zabawa zaczyna być naprawdę ekscytująca!"

#: 09.1-Live-Coding-Fundamentals.md:108
msgid ""
"However, before you jump up and start live coding with functions and threads, "
"stop what you're doing and read the next section on `live_loop` which will cha"
"nge the way you code in Sonic Pi forever..."
msgstr ""
"Jednakże zanim zamkniesz tutorial i zaczniesz kodować na żywo z wykorzystaniem"
" funkcji i wątków, zatrzymaj się na chwilę i przeczytaj kolejny rozdział dotyc"
"zący funkcji `live_loop`, która zmieni twój sposób kodowania w Sonic Pi na zaw"
"sze..."

#: 09.2-Live-Loops.md:1
msgid "9.2 Live Loops"
msgstr "9.2 Żywe Pętle (Live Loops)"

#: 09.2-Live-Loops.md:3
msgid "Live Loops"
msgstr "Żywe Pętle (Live Loops)"

#: 09.2-Live-Loops.md:5
msgid ""
"Ok, so this section of the tutorial is the real gem. If you only read one sect"
"ion, it should be this one. If you read the previous section on Live Coding Fu"
"ndamentals, `live_loop` is a simple way of doing exactly that but without havi"
"ng to write so much."
msgstr ""
"Dobrze, ten rozdział to prawdziwa perełka w tym samouczku. Jeśli masz przeczyt"
"ać tylko jeden rozdział w tutorialu, powinien to być właśnie ten rozdział. Jeś"
"li przeczytałeś poprzedni o Podstawach Kodowania Na Żywo, to `live_loop` jest "
"prostszą metodą dokonania dokładnie tego samego, ale bez konieczności pisania "
"tak dużej ilości kodu."

#: 09.2-Live-Loops.md:10
msgid ""
"If you didn't read the previous section, `live_loop` is the best way to jam wi"
"th Sonic Pi."
msgstr ""
"Jeśli nie przeczytałeś poprzedniego rozdziału, funkcja `live_loop` jest najlep"
"szym sposobem na jamowanie z Sonic Pi."

#: 09.2-Live-Loops.md:13
msgid "Let's play. Write the following in a new buffer:"
msgstr "Zabawmy się. Wpiszmy następujący kod do nowego bufora:"

#: 09.2-Live-Loops.md:15
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play 60\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play 60\n"
"  sleep 1\n"
"end"

#: 09.2-Live-Loops.md:22
msgid ""
"Now press the Run button. You hear a basic beep every beat. Nothing fun there."
" However, don't press Stop just yet. Change the `60` to `65` and press Run aga"
"in."
msgstr ""
"Naciśnij przycisk Run. Słyszysz podstawowy bip przy każdym uderzeniu. Nic szcz"
"ególnego. Powstrzymaj się jednak i nie naciskaj jeszcze przycisku Stop. Zmień "
"wartość `60` na `65` i naciśnij przycisk Run jeszcze raz."

#: 09.2-Live-Loops.md:26
msgid "Woah! It changed *automatically* without missing a beat. This is live coding."
msgstr ""
"Łał! Brzmienie zmieniło się *automatycznie*, bez utraty żadnego uderzenia. To "
"jest Kodowanie na Żywo."

#: 09.2-Live-Loops.md:28
msgid ""
"Why not change it to be more bass like? Just update your code whilst it's play"
"ing:"
msgstr ""
"Czemu więc nie spróbować zmienić ten kawałek, aby brzmiał trochę bardziej jak "
"linia basowa? Wystarczy, że zmienisz kod, gdy ten wciąż jest uruchomiony:"

#: 09.2-Live-Loops.md:30
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:38
msgid "Then hit Run."
msgstr "I naciśniesz przycisk Run."

#: 09.2-Live-Loops.md:40
msgid "Let's make the cutoff move around:"
msgstr "Spróbujmy sprawić, aby pojawiła się odrobina odcięcia (cutoff):"

#: 09.2-Live-Loops.md:42
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:50
msgid "Hit Run again."
msgstr "Ponownie naciśnij przycisk Run."

#: 09.2-Live-Loops.md:52
msgid "Add some drums:"
msgstr "Dodajmy trochę bębnów:"

#: 09.2-Live-Loops.md:54
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :e1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:63
msgid "Change the note from `e1` to `c1`:"
msgstr "Zmień nutę `e1` na `c1`:"

#: 09.2-Live-Loops.md:65
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  sample :loop_garzul\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end"

#: 09.2-Live-Loops.md:74
msgid "Now stop listening to me and play around yourself! Have fun!"
msgstr ""
"A teraz przestań słuchać moich propozycji i zacznij bawić się samodzielnie! Mi"
"łej zabawy!"

#: 09.3-Multiple-Live-Loops.md:1
msgid "9.3 Multiple Live Loops"
msgstr "9.3 Wiele Żywych Pętli"

#: 09.3-Multiple-Live-Loops.md:3
msgid "Multiple Live Loops"
msgstr "Wiele Żywych Pętli"

#: 09.3-Multiple-Live-Loops.md:5
msgid "Consider the following live loop:"
msgstr "Przyjrzyjmy się następującej żywej pętli:"

#: 09.3-Multiple-Live-Loops.md:7
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play 50\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play 50\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:14
msgid ""
"You may have wondered why it needs the name `:foo`. This name is important bec"
"ause it signifies that this live loop is different from all other live loops."
msgstr ""
"Być może zastanawiałeś się, dlaczego konieczna jest nazwa `:foo`. Nazwa ta jes"
"t ważna, ponieważ oznacza, że ta konkretna żywa pętla jest inna od wszystkich "
"innych żywych pętli."

#: 09.3-Multiple-Live-Loops.md:18
msgid "*There can never be two live loops running with the same name*."
msgstr ""
"*W tym samym czasie nie mogą być uruchomione dwie żywe pętle o tej samej nazwi"
"e*."

#: 09.3-Multiple-Live-Loops.md:20
msgid ""
"This means that if we want multiple concurrently running live loops, we just n"
"eed to give them different names:"
msgstr ""
"Oznacza to, że jeśli potrzebujemy kilku jednocześnie kręcących się żywych pętl"
"i, to po prostu musimy nadać im inne nazwy:"

#: 09.3-Multiple-Live-Loops.md:23
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  use_synth :prophet\n"
"  play :c1, release: 8, cutoff: rrand(70, 130)\n"
"  sleep 8\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: 09.3-Multiple-Live-Loops.md:36
msgid ""
"You can now update and change each live loop independently and it all just wor"
"ks."
msgstr ""
"Możesz teraz aktualizować i zmieniać każdą z żywych pętli niezależnie, i wszys"
"tko będzie po prostu działać."

#: 09.3-Multiple-Live-Loops.md:39
msgid "Syncing Live Loops"
msgstr "Synchronizacja Żywych Pętli"

#: 09.3-Multiple-Live-Loops.md:41
msgid ""
"One thing you might have already noticed is that live loops work automatically"
" with the thread cue mechanism we explored previously. Every time the live loo"
"p loops, it generates a new `cue` event with the name of the live loop. We can"
" therefore `sync` on these cues to ensure our loops are in sync without having"
" to stop anything."
msgstr ""
"Jedną z rzeczy, które być może już zauważyłeś, to to, że żywe pętle działają a"
"utomatycznie z mechanizmem punktów cue dla wątków, które poznaliśmy już wcześn"
"iej. Za każdym razem, gdy żywa pętla wykona pętlę, generuje nowe zdarzenie `cu"
"e`, nadając mu nazwę taką samą, jaką nadaliśmy żywej pętli. Możemy więc synchr"
"onizować się z wykorzystaniem funkcji `sync` na każdym zdarzeniu `cue`, aby up"
"ewnić się, że nasze pętle są zsynchronizowane, bez konieczności zatrzymywania "
"czegokolwiek."

#: 09.3-Multiple-Live-Loops.md:47
msgid "Consider this badly synced code:"
msgstr "Spójrzmy na poniższy kod, który został źle zsynchronizowany:"

#: 09.3-Multiple-Live-Loops.md:49
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.4\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.4\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:61
msgid ""
"Let's see if we can fix the timing and sync without stopping it. First, let's "
"fix the `:foo` loop to make the sleep a factor of 1 - something like `0.5` wil"
"l do:"
msgstr ""
"Zobaczmy, czy możemy naprawić chronometraż (timing) bez zatrzymywania. Najpier"
"w naprawmy pętlę `:foo` tak, aby sprawić, że wartość parametru sleep będzie ws"
"półczynnikiem liczby 1 - coś jak `0.5` powinno być okej:"

#: 09.3-Multiple-Live-Loops.md:65
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:77
msgid ""
"We're not quite finished yet though - you'll notice that the beats don't quite"
" line up correctly. This is because the loops are *out of phase*. Let's fix th"
"at by syncing one to the other:"
msgstr ""
"To jeszcze nie koniec - powinieneś zauważyć, że uderzenia nie do końca ustawia"
"ją się odpowiednio. Dzieje się tak, ponieważ pętle *nie są synchronizowane*. S"
"próbujmy to naprawić przez ich synchronizację:"

#: 09.3-Multiple-Live-Loops.md:81
#, no-wrap
msgid ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sync :foo\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :foo do\n"
"  play :e4, release: 0.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :bar do\n"
"  sync :foo\n"
"  sample :bd_haus\n"
"  sleep 1\n"
"end"

#: 09.3-Multiple-Live-Loops.md:94
msgid "Wow, everything is now perfectly in time - all without stopping."
msgstr "Łał, teraz wszystko perfekcyjnie w czasie - i to wszystko bez zatrzymywania."

#: 09.3-Multiple-Live-Loops.md:96
msgid "Now, go forth and live code with live loops!"
msgstr "A teraz nie zatrzymuj się i koduj na żywo z wykorzystaniem żywych pętli!"

#: 09.4-Ticking.md:1
msgid "9.4 Ticking"
msgstr "9.4 Cykanie"

#: 09.4-Ticking.md:3
msgid "Ticking"
msgstr "Cykanie"

#: 09.4-Ticking.md:5
msgid ""
"Something you'll likely find yourself doing a lot when live coding is looping "
"through rings. You'll be putting notes into rings for melodies, sleeps for rhy"
"thms, chord progressions, timbral variations, etc. etc."
msgstr ""
"Coś, na co na pewno będziesz robił dość często podczas kodowania na żywo, to i"
"terowanie przez pierścienie. Będziesz wrzucał nuty do pierścieni dla tworzenia"
" melodii, czasów uśpienia dla rytmów, progresji akordów, różnych wariacji barw"
" dźwięku itd."

#: 09.4-Ticking.md:9
msgid "Ticking Rings"
msgstr "Cykające Pierścienie"

#: 09.4-Ticking.md:11
msgid ""
"Sonic Pi provides a *very* handy tool for working with rings within `live_loop"
"`s. It's called the tick system. In the section about the rings we were talkin"
"g about the counter that is constantly increasing, like a current beat number."
" Tick just implements this idea. It provides you with the ability to *tick thr"
"ough rings*. Let's look at an example:"
msgstr ""
"Sonic Pi udostępnia *bardzo* przydatne narzędzie do pracy z pierścieniami w ży"
"wych pętlach `live_loop`. Nazywa się to systemem cykania. Udostępnia Ci możliw"
"ość *cykania przez pierścienie*. Spójrzmy na następujący przykład:"

#: 09.4-Ticking.md:17
#, no-wrap
msgid ""
"counter = 0\n"
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic)[counter], release: 0.1\n"
"  counter += 1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"counter = 0\n"
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic)[counter], release: 0.1\n"
"  counter += 1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:26
msgid "This is equivalent to:"
msgstr "Jest to odpowiednik dla:"

#: 09.4-Ticking.md:28
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:35
msgid ""
"Here, we're just grabbing the scale E3 minor pentatonic and ticking through ea"
"ch element. This is done by adding `.tick` to the end of the scale declaration"
". This tick is local to the live loop, so each live loop can have its own inde"
"pendent tick:"
msgstr ""
"Wzięliśmy tu pentatoniczną skalę E3 moll i cykamy przez każdy jej element. Dok"
"onaliśmy tego przez dodanie polecenia `.tick` na końcu deklaracji skali. Każde"
" cyknięcie jest lokalne dla danej żywej pętli, więc każda żywa pętla może posi"
"adać swojego własnego niezależnego cykacza:"

#: 09.4-Ticking.md:40
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play (scale :e2, :minor_pentatonic, num_octaves: 3).tick, release: 0.25\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick, release: 0.1\n"
"  sleep 0.125\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play (scale :e2, :minor_pentatonic, num_octaves: 3).tick, release: 0.25\n"
"  sleep 0.25\n"
"end"

#: 09.4-Ticking.md:53
msgid "Tick"
msgstr "Cyknięcie"

#: 09.4-Ticking.md:55
msgid "You can also call `tick` as a standard fn and use the value as an index:"
msgstr ""
"Możesz również uruchomić polecenie cyknięcia `tick` jako standardową funkcję i"
" używać zwracanej wartości jako indeksu:"

#: 09.4-Ticking.md:57
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  idx = tick\n"
"  play (scale :e3, :minor_pentatonic)[idx], release: 0.1\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  idx = tick\n"
"  play (scale :e3, :minor_pentatonic)[idx], release: 0.1\n"
"  sleep 0.125\n"
"end"

#: 09.4-Ticking.md:65
msgid ""
"However, it is much nicer to call `.tick` at the end. The `tick` fn is for whe"
"n you want to do fancy things with the tick value and for when you want to use"
" ticks for other things than indexing into rings."
msgstr ""
"Jednakże dużo ładniej jest korzystać z polecenia `.tick` dodanego na końcu. Fu"
"nkcja `tick` jest stworzona dla sytuacji gdy chcesz zrobić coś fantazyjnego z "
"wartością zwracaną przy cyknięciu oraz wtedy, gdy chcesz używać cyknięć do inn"
"ych rzeczy, niż indeksowania elementów pierścieni."

#: 09.4-Ticking.md:70
msgid "Look"
msgstr "Look (z ang. podejrzeć)"

#: 09.4-Ticking.md:72
msgid ""
"The magical thing about tick is that not only does it return a new index (or t"
"he value of the ring at that index) it also makes sure that next time you call"
" tick, it's the next value. Take a look at the examples in the docs for `tick`"
" for many ways of working with this. However, for now, it's important to point"
" out that sometimes you'll want to just look at the current tick value and *no"
"t increase* it. This is available via the `look` fn. You can call `look` as a "
"standard fn or by adding `.look` to the end of a ring."
msgstr ""
"Magiczną rzeczą w cykaniu jest to, że możliwe jest nie tylko zwrócenie nowego "
"indeksu (albo wartości znajdującej się w pierścieniu pod tym indeksem). Mechan"
"izm ten pilnuje też, aby przy każdym Twoim kolejnym cyknięciu była to kolejna "
"wartość. Zerknij na przykłady znajdujące się w dokumentacji dla polecenia `tic"
"k`, aby zobaczyć wiele różnych sposobów na pracę z nim. Jednakże na tę chwilę "
"ważne jest, aby zaznaczyć, że czasami będziesz chciał po prostu podejrzeć aktu"
"alną wartość cyknięcia *bez zwiększania* jego wartości. Możesz tego dokonać za"
" pomocą funkcji `look`. Możesz uruchamiać polecenie `look` jako standardową fu"
"nkcję lub poprzez dodanie `.look` na końcu pierścienia."

#: 09.4-Ticking.md:81
msgid "Naming Ticks"
msgstr "Nazwane Cyknięcia"

#: 09.4-Ticking.md:83
msgid ""
"Finally, sometimes you'll need more than one tick per live loop. This is achie"
"ved by giving your tick a name:"
msgstr ""
"Finalnie czasami będziesz potrzebował więcej niż jednego cykacza dla danej żyw"
"ej pętli. Można tego dokonać poprzez nadanie Twojemu cyknięciu nazwę:"

#: 09.4-Ticking.md:86
#, no-wrap
msgid ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick(:foo), release: 0.1\n"
"  sleep (ring 0.125, 0.25).tick(:bar)\n"
"end"
msgstr ""
"live_loop :arp do\n"
"  play (scale :e3, :minor_pentatonic).tick(:foo), release: 0.1\n"
"  sleep (ring 0.125, 0.25).tick(:bar)\n"
"end"

#: 09.4-Ticking.md:93
msgid ""
"Here we're using two ticks one for the note to play and another for the sleep "
"time. As they're both in the same live loop, to keep them separate we need to "
"give them unique names. This is exactly the same kind of thing as naming `live"
"_loop`s - we just pass a symbol prefixed with a `:`. In the example above we c"
"alled one tick `:foo` and the other `:bar`. If we want to `look` at these we a"
"lso need to pass the name of the tick to `look`."
msgstr ""
"Powyżej używamy dwóch cykaczy, jeden dla zagrania nuty i drugi dla odliczania "
"czasu uśpienia. Jako że oba znajdują się w tej samej żywej pętli, potrzebowali"
"śmy nadać im unikalne nazwy, aby sprawić, by były oddzielne. To jest dokładnie"
" taki sam mechanizm, jak w przypadku nadawania nazw żywym pętlom (`live_loop`)"
" - po prostu przekazujemy symbol poprzedzony dwukropkiem `:`. W powyższym przy"
"kładzie nazwaliśmy pierwszego cykacza `:foo`, a drugiego `:bar`. Jeśli chcemy "
"podejrzeć aktualną wartość któregoś z nich za pomocą polecenia `look`, to musi"
"my do polecenia `look` również przekazać nazwę konkretnego cykacza."

#: 09.4-Ticking.md:101
msgid "Don't make it too complicated"
msgstr "Nie twórz zbyt skomplikowanych rzeczy"

#: 09.4-Ticking.md:103
msgid ""
"Most of the power in the tick system isn't useful when you get started. Don't "
"try and learn everything in this section. Just focus on ticking through a sing"
"le ring. That'll give you most of the joy and simplicity of ticking through ri"
"ngs in your `live_loop`s."
msgstr ""
"Większość mocy zawartej w systemie cykania nie jest przydatna, gdy dopiero zac"
"zynasz. Nie próbuj i nie ucz się wszystkiego z tego rozdziału. Postaraj skupić"
" się na cykaniu przez pojedynczy pierścień. To powinno dać Ci największą satys"
"fakcję oraz prostotę związaną z cykaniem przez pierścienie w Twoich żywych pęt"
"lach."

#: 09.4-Ticking.md:108
msgid ""
"Take a look at the documentation for `tick` where there are many useful exampl"
"es and happy ticking!"
msgstr ""
"Zerknij do dokumentacji na polecenie `tick`, gdzie znajdziesz wiele przydatnyc"
"h przykładów. Wesołego cykania!"

#: 10-Essential-Knowledge.md:1
msgid "10 Essential Knowledge"
msgstr "10 Niezbędna Wiedza"

#: 10-Essential-Knowledge.md:3
msgid "Essential Knowledge"
msgstr "Niezbędna Wiedza"

#: 10-Essential-Knowledge.md:5
msgid ""
"This section will cover some very useful - in fact *essential* - knowledge for"
" getting the most out of your Sonic Pi experience."
msgstr ""
"Ten rozdział obejmie trochę bardzo przydatnej - w zasadzie *niezbędnej* - wied"
"zy, która pozwoli Ci na wyciągnięcie maksimum możliwości z Sonic Pi."

#: 10-Essential-Knowledge.md:8
msgid ""
"We'll cover how to take advantage of the many keyboard shortcuts available to "
"you, how to share your work and some tips on performing with Sonic Pi."
msgstr ""
"Pokażemy tutaj, jak wykorzystać wiele skrótów klawiszowych, które są dostępne,"
" w jaki sposób możesz dzielić się swoją pracą, a także parę przydatnych sztucz"
"ek dotyczących występów z Sonic Pi."

#: 10.1-Using-Shortcuts.md:1
msgid "10.1 Using Shortcuts"
msgstr "10.1 Korzystanie ze Skrótów Klawiszowych"

#: 10.1-Using-Shortcuts.md:3
msgid "Using Shortcuts"
msgstr "Korzystanie ze Skrótów Klawiszowych"

#: 10.1-Using-Shortcuts.md:5
msgid ""
"Sonic Pi is as much an instrument as a coding environment. Shortcuts can there"
"fore make playing Sonic Pi much more *efficient and natural* - especially when"
" you're playing live in front of an audience."
msgstr ""
"Sonic Pi jest zarówno instrumentem muzycznym, jak i środowiskiem programistycz"
"nym. Skróty klawiszowe mogą więc sprawić, że granie z Sonic Pi będzie dużo bar"
"dziej *wydajne i naturalne* - zwłaszcza wtedy, gdy będziesz grać na żywo przed"
" publicznością."

#: 10.1-Using-Shortcuts.md:9
msgid ""
"Much of Sonic Pi can be controlled through the keyboard. As you gain more fami"
"liarity working and performing with Sonic Pi, you'll likely start using the sh"
"ortcuts more and more. *I personally touch-type* (I recommend you consider lea"
"rning too) and find myself frustrated whenever I need to reach for the mouse a"
"s it slows me down. I therefore use all of these shortcuts on a very regular b"
"asis!"
msgstr ""
"Wiele funkcji Sonic Pi może być kontrolowanych za pomocą klawiatury. Gdy posią"
"dziesz już więcej wprawy w pracy i występach z Sonic Pi, na pewno zaczniesz uż"
"ywać skrótów coraz częściej i częściej. *Potrafię pisać na klawiaturze bezwzro"
"kowo* (I Tobie też polecam się tego nauczyć) i czuję frustrację za każdym raze"
"m, kiedy tylko muszę sięgnąć po myszkę, ponieważ to mnie spowalnia. W związku "
"z powyższym używam wszystkich tych skrótów w kółko!"

#: 10.1-Using-Shortcuts.md:16
msgid ""
"Therefore, if you learn the shortcuts, you'll learn to use your keyboard effec"
"tively and you'll be live coding like a pro in no time."
msgstr ""
"Ponadto, jeśli nauczysz się skrótów, nauczysz się korzystać z Twojej klawiatur"
"y dużo bardziej efektywnie i zaczniesz kodować na żywo niczym profesjonalista "
"w bardzo krótkim czasie."

#: 10.1-Using-Shortcuts.md:19
msgid ""
"However, *don't try and learn them all at once*, just try and remember the one"
"s you use most and then keep adding more to your practice."
msgstr ""
"Jednakże *nie próbuj i nie ucz się ich wszystkich na raz*, postaraj się sprawd"
"zić i zapamiętać tylko te, których używasz najczęściej. Dopiero potem postaraj"
" się regularnie dodawać i ćwiczyć kolejne."

#: 10.1-Using-Shortcuts.md:22
msgid "Consistency across Platforms"
msgstr "Spójność pomiędzy Platformami"

#: 10.1-Using-Shortcuts.md:24
msgid ""
"Imagine you're learning the clarinet. You'd expect all clarinets of all makes "
"to have similar controls and fingerings. If they didn't, you'd have a tough ti"
"me switching between different clarinets and you'd be stuck to using just one "
"make."
msgstr ""
"Wyobraź sobie, że uczysz się gry na klarnecie. Zapewne oczekiwałbyś, że wszyst"
"kie klarnety będą zapewniały podobną kontrole i palcowanie. Jeśli nie, to potr"
"zebowałbyś sporo czasu za każdym razem, gdy przesiadałbyś się pomiędzy różnymi"
" klarnetami i tak naprawdę byłbyś wtedy ograniczony do korzystania tylko z jed"
"nego wybranego modelu."

#: 10.1-Using-Shortcuts.md:29
msgid ""
"Unfortunately the three major operating systems (Linux, Mac OS X and Windows) "
"come with their own standard defaults for actions such as cut and paste etc. S"
"onic Pi will try and honour these standards. However *priority is placed on co"
"nsistency across platforms* within Sonic Pi rather than attempting to conform "
"to a given platform's standards. This means that when you learn the shortcuts "
"whilst playing with Sonic Pi on your Raspberry Pi, you can move to the Mac or "
"PC and feel right at home."
msgstr ""
"Na nieszczęście 3 podstawowe systemy operacyjne (Linux, Mac OS X i Windows) po"
"siadają swoje własne standardy dla domyślnych akcji takich jak np. kopiuj-wkle"
"j. Sonic Pi postara się honorować wszystkie te standardy. Jednakże *priorytet "
"został położony na spójność pomiędzy różnymi platformami*, na których działa S"
"onic Pi i jest on ważniejszy, niż próby zapewnienia zgodności z poszczególnymi"
" platformami. Oznacza to, że jeśli nauczysz się skrótów klawiszowych, gdy będz"
"iesz grał na Sonic Pi na Raspberry Pi, to będziesz mógł przenieść się na kompu"
"ter marki Apple z systemem Mac OS lub peceta z zainstalowanym Windowsem i dale"
"j czuć się jak w domu."

#: 10.1-Using-Shortcuts.md:37
msgid "Control and Meta"
msgstr "Klawisze Control i Meta"

#: 10.1-Using-Shortcuts.md:39
msgid ""
"Part of the notion of consistency is the naming of shortcuts. In Sonic Pi we u"
"se the names *Control* and *Meta* to refer to the two main combination keys. O"
"n all platforms *Control* is the same. However, on Linux and Windows, *Meta* i"
"s actually the *Alt* key while on Mac *Meta* is the *Command* key. For consist"
"ency we'll use the term *Meta* - just remember to map that to the appropriate "
"key on your operating system."
msgstr ""
"Częścią dotyczącą pojęcia spójności jest nazewnictwo skrótów. W Sonic Pi używa"
"my nazw *Control* i *Meta* dla odniesienia się do dwóch podstawowych klawiszy "
"używanych w kombinacjach skrótów. Na wszystkich platformach klawisz *Control* "
"odnosi się do tego samego przycisku na klawiaturze. Jednakże w systemach Linux"
" i Windows, klawisz *Meta* oznacza klawisz *Alt*, podczas gdy w systemie Mac O"
"S klawisz *Meta* oznacza klawisz *Command*. Dla zachowania spójności będziemy "
"używali terminu *Meta* - jedyne, co musisz zapamiętać, to to, w jaki sposób zm"
"apować ten termin na odpowiedni klawisz dla Twojego systemu operacyjnego."

#: 10.1-Using-Shortcuts.md:46
msgid "Abbreviations"
msgstr "Skróty"

#: 10.1-Using-Shortcuts.md:48
msgid ""
"To help keep things simple and readable, we'll use the abbreviations *C-* for "
"*Control* plus another key and *M-* for *Meta* plus another key. For example, "
"if a shortcut requires you to hold down both *Meta* and *r* we'll write that a"
"s `M-r`. The *-* just means \"at the same time as.\""
msgstr ""
"Aby dalsze instrukcje były proste i czytelne, będziemy używać skrótu *C-* dla "
"klawisza *Control* plus innego klawisza oraz *M-* dla *Meta* plus inny klawisz"
". Na przykład, jeśli skrót klawiszowy wymaga, abyś nacisnął razem klawisze *Me"
"ta* i *r*, zapiszemy to jako `M-r`. Symbol *-* oznacza po prostu \"w tym samym "
"czasie co.\""

#: 10.1-Using-Shortcuts.md:53
msgid "The following are some of the shortcuts I find most useful."
msgstr ""
"Przedstawię Ci kilka skrótów klawiszowych, które są dla mnie najbardziej przyd"
"atne."

#: 10.1-Using-Shortcuts.md:55
msgid "Stopping and starting"
msgstr "Zatrzymywanie i uruchamianie"

#: 10.1-Using-Shortcuts.md:57
msgid ""
"Instead of always reaching for the mouse to run your code, you can simply pres"
"s `M-r`. Similarly, to stop running code you can press `M-s`."
msgstr ""
"Zamiast za każdym razem sięgać po myszkę, aby uruchomić Twój kod, możesz po pr"
"ostu nacisnąć skrót `M-r`. Podobnie, aby zatrzymać uruchomiony kod, możesz nac"
"isnąć `M-s`."

#: 10.1-Using-Shortcuts.md:60 10.2-Shortcut-Cheatsheet.md:52
msgid "Navigation"
msgstr "Nawigacja"

#: 10.1-Using-Shortcuts.md:62
msgid ""
"I'm really lost without the navigation shortcuts. I therefore highly recommend"
" you spend the time to learn them. These shortcuts also work extremely well wh"
"en you've learned to touch type as they use the standard letters rather than r"
"equiring you to move your hand to the mouse or the arrow keys on your keyboard"
"."
msgstr ""
"Bez skrótów umożliwiających nawigację czuję się naprawdę zagubiony. W związku "
"z tym bardzo zalecam Ci spędzić tyle czasu, ile potrzeba, aby się ich nauczyć."
" Skróty te działają również bardzo dobrze, kiedy już nauczysz się pisać na kla"
"wiaturze bezwzrokowo, jako że używają one standardowych liter i nie wymagają o"
"d Ciebie, abyś sięgał ręką do myszki lub klawiszy ze strzałkami na Twojej klaw"
"iaturze."

#: 10.1-Using-Shortcuts.md:68
msgid ""
"You can move to the beginning of the line with `C-a`, the end of the line with"
" `C-e`, up a line with `C-p`, down a line with `C-n`, forward a character with"
" `C-f`, and back a character with `C-b`. You can even delete all the character"
"s from the cursor to the end of the line with `C-k`."
msgstr ""
"Możesz przenieść się do początku linii naciskając skrót `C-a`, aby przenieść s"
"ię na koniec linii naciśnij `C-e`, aby przenieść się o 1 linię w górę naciśnij"
" `C-p`, jedną linię w dół `C-n`, aby przesunąć się o jeden znak do przodu użyj"
" `C-f`, jeden znak do tyłu `C-b`. Możesz nawet usunąć wszystkie znaki od miejs"
"ca, w którym aktualnie znajduje się kursor, aż do końca linii, używając skrótu"
" `C-k`."

#: 10.1-Using-Shortcuts.md:74
msgid "Tidy Code"
msgstr "Elegancki Kod"

#: 10.1-Using-Shortcuts.md:76
msgid "To auto-align your code simply press `M-m`."
msgstr "Aby automatycznie wyrównać Twój kod, wystarczy że naciśniesz `M-m`."

#: 10.1-Using-Shortcuts.md:78
msgid "Help System"
msgstr "System Pomocy"

#: 10.1-Using-Shortcuts.md:80
msgid ""
"To toggle the help system you can press `M-i`. However, a much more useful sho"
"rtcut to know is `C-i` which will look up the word underneath the cursor and d"
"isplay the docs if it finds anything. Instant help!"
msgstr ""
"Aby pokazać i ukryć system pomocy, możesz nacisnąć przycisk `M-i`. Jednakże du"
"żo bardziej przydatnym skrótem, który warto znać jest `C-i` - pozwala on na wy"
"szukanie w systemie pomocy słowa, na którym aktualnie znajduje się kursor i wy"
"świetlenie tego, jeśli uda mu się znaleźć cokolwiek. Pomoc błyskawiczna!"

#: 10.1-Using-Shortcuts.md:84
msgid "For a full list take a look at section 10.2 Shortcut Cheatsheet."
msgstr ""
"Aby zobaczyć pełną listę dostępnych skrótów klawiszowych, zajrzyj do rozdziału"
" 10.2 Ściągawka Skrótów Klawiszowych."

#: 10.2-Shortcut-Cheatsheet.md:1
msgid "10.2 Shortcut Cheatsheet"
msgstr "10.2 Ściągawka Skrótów Klawiszowych"

#: 10.2-Shortcut-Cheatsheet.md:3
msgid "Shortcut Cheatsheet"
msgstr "Ściągawka Skrótów Klawiszowych"

#: 10.2-Shortcut-Cheatsheet.md:5
msgid ""
"The following is a summary of the main shortcuts available within Sonic Pi. Pl"
"ease see Section 10.1 for motivation and background."
msgstr ""
"Poniżej dostępne jest podsumowanie najważniejszych skrótów dostępnych w Sonic "
"Pi. Przejrzyj proszę rozdział 10.1 dla uzyskania motywacji i tła."

#: 10.2-Shortcut-Cheatsheet.md:8
msgid "Conventions"
msgstr "Konwencje"

#: 10.2-Shortcut-Cheatsheet.md:10
msgid ""
"In this list, we use the following conventions (where *Meta* is one of *Alt* o"
"n Windows/Linux or *Cmd* on Mac):"
msgstr ""
"W poniższej liście używamy następujących konwencji (gdzie *Meta* oznacza klawi"
"sz *Alt* w systemach Windows/Linux oraz *Cmd* w systemie Mac OS):"

#: 10.2-Shortcut-Cheatsheet.md:13
msgid ""
"`C-a` means hold the *Control* key then press the *a* key whilst holding them "
"both at the same time, then releasing."
msgstr ""
"`C-a` oznacza: przytrzymaj klawisz *Control*, następnie naciśnij klawisz *a* t"
"ak, żeby przez chwilę oba były jednocześnie naciśnięte, po czym je puść."

#: 10.2-Shortcut-Cheatsheet.md:14
msgid ""
"`M-r` means hold the *Meta* key and then press the *r* key whilst holding them"
" both at the same time, then releasing."
msgstr ""
"`M-r` oznacza: przytrzymaj klawisz *Meta* i następnie naciśnij klawisz *r* tak"
", żeby przez chwilę oba były naciśnięte jednocześnie, po czym je puść."

#: 10.2-Shortcut-Cheatsheet.md:15
msgid ""
"`S-M-z` means hold the *Shift* key, then the *Meta* key, then finally the *z* "
"key all at the same time, then releasing."
msgstr ""
"`S-M-z` oznacza: naciśnij i przytrzymaj klawisz *Shift*, następnie naciśnij i "
"przytrzymaj klawisz *Meta* i na końcu dołóż do tej kombinacji, w tym samym cza"
"sie, klawisz *z*, następnie puść wszystkie klawisze."

#: 10.2-Shortcut-Cheatsheet.md:16
msgid ""
"`C-M-f` means hold the *Control* key, then press *Meta* key, finally the *f* k"
"ey all at the same time, then releasing."
msgstr ""
"`C-M-f` oznacza: naciśnij i przytrzymaj klawisz *Control*, potem naciśnij i pr"
"zytrzymaj klawisz *Meta*, po czym na końcu naciśnij do tego jeszcze klawisz *f"
"* i puść wszystkie klawisze."

#: 10.2-Shortcut-Cheatsheet.md:18
msgid "Main Application Manipulation"
msgstr "Podstawowe Manipulowanie Aplikacją"

#: 10.2-Shortcut-Cheatsheet.md:20
msgid "`M-r` - Run code"
msgstr "`M-r` - Uruchom kod (przycisk Run)"

#: 10.2-Shortcut-Cheatsheet.md:21
msgid "`M-s` - Stop code"
msgstr "`M-s` - Zatrzymaj kod (przycisk Stop)"

#: 10.2-Shortcut-Cheatsheet.md:22
msgid "`M-i` - Toggle Help System"
msgstr "`M-i` - Otwórz/Zamknij System Pomocy"

#: 10.2-Shortcut-Cheatsheet.md:23
msgid "`M-p` - Toggle Preferences"
msgstr "`M-p` - Otwórz/Zamknij Ustawienia"

#: 10.2-Shortcut-Cheatsheet.md:24
msgid "`M-{` - Switch buffer to the left"
msgstr "`M-{` - Przejdź do buforu po lewej stronie"

#: 10.2-Shortcut-Cheatsheet.md:25
msgid "`M-}` - Switch buffer to the right"
msgstr "`M-}` - Przejdź do buforu po prawej stronie"

#: 10.2-Shortcut-Cheatsheet.md:26
msgid "`M-+` - Increase text size of current buffer"
msgstr "`M-+` - Zwiększ rozmiar czcionki w aktualnym buforze"

#: 10.2-Shortcut-Cheatsheet.md:27
msgid "`M--` - Decrease text size of current buffer"
msgstr "`M--` - Zmniejsz rozmiar czczionki w aktualnym buforze"

#: 10.2-Shortcut-Cheatsheet.md:30
msgid "Selection/Copy/Paste"
msgstr "Zaznaczanie/Kopiowanie/Wklejanie"

#: 10.2-Shortcut-Cheatsheet.md:32
msgid "`M-a` - Select all"
msgstr "`M-a` - Zaznacz wszystko"

#: 10.2-Shortcut-Cheatsheet.md:33
msgid "`M-c` - Copy selection to paste buffer"
msgstr "`M-c` - Skopiuj zaznaczony obszar, aby móc go wkleić do bufora w innym miejscu"

#: 10.2-Shortcut-Cheatsheet.md:34
msgid "`M-]` - Copy selection to paste buffer"
msgstr "`M-]` - Skopiuj zaznaczony obszar, aby móc go wkleić do bufora w innym miejscu"

#: 10.2-Shortcut-Cheatsheet.md:35
msgid "`M-x` - Cut selection to paste buffer"
msgstr "`M-x` - Wytnij zaznaczony obszar, aby móc wkleić go do bufora w innym miejscu"

#: 10.2-Shortcut-Cheatsheet.md:36
msgid "`C-]` - Cut selection to paste buffer"
msgstr "`C-]` - Wytnij zaznaczony obszar, aby móc wkleić go do bufora w innym miejscu"

#: 10.2-Shortcut-Cheatsheet.md:37
msgid "`C-k` - Cut to the end of the line"
msgstr "`C-k` - Wytnij tekst od aktualnej pozycji kursora do końca linii"

#: 10.2-Shortcut-Cheatsheet.md:38
msgid "`M-v` - Paste from paste buffer to editor"
msgstr "`M-v` - Wklej zawartość schowka do aktualnego bufora"

#: 10.2-Shortcut-Cheatsheet.md:39
msgid "`C-y` - Paste from paste buffer to editor"
msgstr "`C-y` - Wklej zawartość schowka do aktualnego bufora"

#: 10.2-Shortcut-Cheatsheet.md:40
msgid ""
"`C-SPACE` - Set mark. Navigation will now manipulate highlighted region. Use `"
"C-g` to escape."
msgstr ""
"`C-SPACE` - Ustaw punkt zaznaczenia. Następnie nawiguj po tekście, aby podświe"
"tlić tekst do zaznaczenia. Użyj `C-g` aby wyłączyć/usunąć zaznaczenie."

#: 10.2-Shortcut-Cheatsheet.md:42
msgid "Text Manipulation"
msgstr "Manipulacja Tekstu"

#: 10.2-Shortcut-Cheatsheet.md:44
msgid "`M-m` - Align all text"
msgstr "`M-m` - Wyrównaj cały tekst w buforze"

#: 10.2-Shortcut-Cheatsheet.md:45
msgid "`Tab` - Align current line or selection (or select autocompletion)"
msgstr "`Tab` - Popraw wyrównianie/zaznaczenie aktualnej liczby lub pokaż podpowiedzi"

#: 10.2-Shortcut-Cheatsheet.md:46
msgid "`C-l` - Centre editor"
msgstr "`C-l` - Wyśrodkuj edytor"

#: 10.2-Shortcut-Cheatsheet.md:47
msgid "`M-/` - Comment/Uncomment current line or selection"
msgstr ""
"`M-/` - Dodaj lub usuń znak komentarza (#) na początku aktualnie wybranej (lub"
" wybranych) linii kodu"

#: 10.2-Shortcut-Cheatsheet.md:48
msgid "`C-t` - Transpose/swap characters"
msgstr "`C-t` - Transponuj/zamień znaki"

#: 10.2-Shortcut-Cheatsheet.md:49
msgid "`M-u` - Convert next word (or selection) to upper case."
msgstr "`M-u` - Konwertuj następne słowo (lub zaznaczenie) do wielkich liter."

#: 10.2-Shortcut-Cheatsheet.md:50
msgid "`M-l` - Convert next word (or selection) to lower case."
msgstr "`M-l` - Konwertuj następne słowo (lub zaznaczenie) do małych liter."

#: 10.2-Shortcut-Cheatsheet.md:54
msgid "`C-a` - Move to beginning of line"
msgstr "`C-a` - Przenieś kursor do początku linii"

#: 10.2-Shortcut-Cheatsheet.md:55
msgid "`C-e` - Move to end of line"
msgstr "`C-e` - Przenieś kursor na koniec linii"

#: 10.2-Shortcut-Cheatsheet.md:56
msgid "`C-p` - Move to previous line"
msgstr "`C-p` - Przenieś kursor do poprzedniej linii"

#: 10.2-Shortcut-Cheatsheet.md:57
msgid "`C-n` - Move to next line"
msgstr "`C-n` - Przenieś kursor do następnej linii"

#: 10.2-Shortcut-Cheatsheet.md:58
msgid "`C-f` - Move forward one character"
msgstr "`C-f` - Przenieś kursor o jeden znak do przodu (w prawo)"

#: 10.2-Shortcut-Cheatsheet.md:59
msgid "`C-b` - Move backward one character"
msgstr "`C-b` - Przenieś kursor o jeden znak do tyłu (w lewo)"

#: 10.2-Shortcut-Cheatsheet.md:60
msgid "`M-f` - Move forward one word"
msgstr "`M-f` - Przenieś kursor do przodu (w prawo) o jedno słowo"

#: 10.2-Shortcut-Cheatsheet.md:61
msgid "`M-b` - Move backward one word"
msgstr "`M-b` - Przenieś kursor do tyłu (w lewo) o jedno słowo"

#: 10.2-Shortcut-Cheatsheet.md:62
msgid "`C-M-n` - Move line or selection down"
msgstr "`C-M-n` - Przenieś aktualną linie lub zaznaczenie w dół"

#: 10.2-Shortcut-Cheatsheet.md:63
msgid "`C-M-p` - Move line or selection up"
msgstr "`C-M-p` - Przenieś aktualną linię lub zaznaczenie do góry"

#: 10.2-Shortcut-Cheatsheet.md:64
msgid "`S-M-u` - Move up 10 lines"
msgstr "`S-M-u` - Przenieś się do góry o 10 linii"

#: 10.2-Shortcut-Cheatsheet.md:65
msgid "`S-M-d` - Move down 10 lines"
msgstr "`S-M-d` - Przenieś się w dół o 10 linii"

#: 10.2-Shortcut-Cheatsheet.md:66
msgid "`M-<` - Move to beginning of buffer"
msgstr "`M-<` - Przenieś się na początek bufora"

#: 10.2-Shortcut-Cheatsheet.md:67
msgid "`M->` - Move to end of buffer"
msgstr "`M->` - Przenieś się na koniec bufora"

#: 10.2-Shortcut-Cheatsheet.md:69
msgid "Deletion"
msgstr "Usuwanie"

#: 10.2-Shortcut-Cheatsheet.md:71
msgid "`C-h` - Delete previous character"
msgstr "`C-h` - Usuń poprzedni znak"

#: 10.2-Shortcut-Cheatsheet.md:72
msgid "`C-d` - Delete next character"
msgstr "`C-d` - Usuń kolejny znak"

#: 10.2-Shortcut-Cheatsheet.md:74
msgid "Advanced Editor Features"
msgstr "Zaawansowane Funkcje Edytora"

#: 10.2-Shortcut-Cheatsheet.md:76
msgid "`C-i` - Show docs for word under cursor"
msgstr "`C-i` - Pokaż dokumentację dla słowa, na którym znajduje się aktualnie kursor"

#: 10.2-Shortcut-Cheatsheet.md:77
msgid "`M-z` - Undo"
msgstr "`M-z` - Wstecz (cofnij zmianę)"

#: 10.2-Shortcut-Cheatsheet.md:78
msgid "`S-M-z` - Redo"
msgstr "`S-M-z` - Redo (powtórz zmianę)"

#: 10.2-Shortcut-Cheatsheet.md:79
msgid "`C-g` - Escape"
msgstr "`C-g` - Ucieczka (anulowanie)"

#: 10.2-Shortcut-Cheatsheet.md:80
msgid "`S-M-f` - Toggle fullscreen mode"
msgstr "`S-M-f` - Otwórz/Zamknij tryb pełnoekranowy"

#: 10.2-Shortcut-Cheatsheet.md:81
msgid "`S-M-b` - Toggle visibility of buttons"
msgstr "`S-M-b` - Pokaż/Schowaj przyciski"

#: 10.2-Shortcut-Cheatsheet.md:82
msgid "`S-M-l` - Toggle visibility of log"
msgstr "`S-M-l` - Pokaż/Schowaj panel logowania"

#: 10.2-Shortcut-Cheatsheet.md:83
msgid "`S-M-m` - Toggle between light/dark modes"
msgstr "`S-M-m` - Przełączanie pomiędzy trybem jasnym i ciemnym"

#: 10.2-Shortcut-Cheatsheet.md:84
msgid "`S-M-s` - Save contents of buffer to a file"
msgstr "`S-M-s` - Zapisz zawartość bufora do pliku"

#: 10.2-Shortcut-Cheatsheet.md:85
msgid "`S-M-o` - Load contents of buffer from a file"
msgstr "`S-M-o` - Wczytaj zawartość z wybranego pliku do bufora"

#: 10.3-Sharing.md:1
msgid "10.3 Sharing"
msgstr "10.3 Udostępnianie"

#: 10.3-Sharing.md:3
msgid "Sharing"
msgstr "Udostępnianie"

#: 10.3-Sharing.md:5
msgid "Sonic Pi is all about sharing and learning with each other."
msgstr ""
"W Sonic Pi chodzi przede wszystkim o udostępnianie i uczenie się od siebie naw"
"zajem."

#: 10.3-Sharing.md:7
msgid ""
"Once you've learned how to code music, sharing your compositions is as simple "
"as sending an email containing your code. Please do *share* your code with oth"
"ers so they can *learn* from your work and even use parts in a new *mash-up*."
msgstr ""
"Gdy już nauczyłeś się, w jaki sposób kodować muzykę, udostępnienie Twojej komp"
"ozycji jest tak łatwe, jak wysłanie wiadomości email, która będzie zawierać Tw"
"ój kod. Proszę, abyś *dzielił* się swoim kodem z innymi, dzięki temu będą oni "
"mogli *uczyć* się z Twojej pracy, a nawet używać kawałków Twojej muzyki do two"
"rzenia nowych *mash-up'ów*."

#: 10.3-Sharing.md:12
msgid ""
"If you're unsure of the best way to share your work with others I recommend pu"
"tting your code on [GitHub](https://github.com) and your music on [SoundCloud]"
"(https://soundcloud.com). That way you'll be able to easily reach a large audi"
"ence."
msgstr ""
"Jeśli nie jesteś pewien tego, w jaki sposób możesz najlepiej dzielić się Twoim"
"i dokonaniami z innymi, to polecam Ci wrzucanie Twojego kodu na stronę [GitHub"
"](https://github.com), natomiast gotową muzykę na stronę [SoundCloud](https://"
"soundcloud.com). W ten sposób bardzo łatwo uda Ci się zyskać znaczną publiczno"
"ść."

#: 10.3-Sharing.md:17
msgid "Code -> GitHub"
msgstr "Kod -> GitHub"

#: 10.3-Sharing.md:19
msgid ""
"[GitHub](https://github.com) is a site for sharing and working with code. It's"
" used by professional developers as well as artists for sharing and collaborat"
"ing with code. The simplest way to share a new piece of code (or even an unfin"
"ished piece) is to create a [Gist](https://gist.github.com). A [Gist](https://"
"gist.github.com) is a simple way of uploading your code in a simple way that o"
"thers can see, copy and share."
msgstr ""
"[GitHub](https://github.com) to strona umożliwiająca dzielenie się i pracę nad"
" kodem. Jest ona używana zarówno przez profesjonalnych programistów, jak ich a"
"rtystów w celu udostępniania i współpracy z kodem. Najprostszą metodą, aby pod"
"zielić się nowym kawałkiem kodu (nawet tym niedokończonym) jest stworzenie [Gi"
"st'a](https://gist.github.com) [Gist](https://gist.github.com) to bardzo prost"
"y sposób na przesłanie Twojego kodu w bardzo prosty sposób tak, żeby inni mogl"
"i go zobaczyć, skopiować i dzielić się nim."

#: 10.3-Sharing.md:27
msgid "Audio -> SoundCloud"
msgstr "Dźwięki -> SoundCloud"

#: 10.3-Sharing.md:29
msgid ""
"Another important way of sharing your work is to record the audio and upload i"
"t to [SoundCloud](https://soundcloud.com). Once you've uploaded your piece, ot"
"her users can comment and discuss your work. I also recommend placing a link t"
"o a [Gist](https://gist.github.com) of your code in the track description."
msgstr ""
"Innym bardzo ważnym sposobem na dzielenie się Twoją pracą, jest nagranie pliku"
" audio i przesłanie go na stronę [SoundCloud](https://soundcloud.com). Gdy już"
" wrzucisz tam swój kawałek, inni użytkownicy tej strony będą mogli komentować "
"i rozmawiać o Twoim dziele. Zalecam również zamieszczenie w opisie linku do [G"
"ist'a](https://gist.github.com) zawierającego kod źródłowy tego utworu."

#: 10.3-Sharing.md:35
msgid ""
"To record your work, hit the `Rec` button in the toolbar, and recording starts"
" immediately. Hit `Run` to start your code if it isn't already in progress. Wh"
"en you're done recording, press the flashing `Rec` button again, and you'll be"
" prompted to enter a filename. The recording will be saved as a WAV file, whic"
"h can be edited and converted to MP3 by any number of free programs (try Audac"
"ity for instance)."
msgstr ""
"Aby nagrać twoją pracę, wystarczy że naciśniesz przycisk `Rec` znajdujący się "
"w panelu z przyciskami, a nagrywanie rozpocznie się natychmiast. Naciśnij więc"
" przycisk `Run`, aby uruchomić Twój kod, jeśli przypadkiem jeszcze tego nie zr"
"obiłeś. Kiedy skończysz nagranie, naciśnij ponownie migający przycisk `Rec`, a"
" zostaniesz poproszony o podanie nazwy pliku, pod jaką ma zostać zapisane Twoj"
"e nagranie. Zostanie ono zapisane jako plik WAV, który może być bardzo łatwo z"
"edytowany i skonwertowany do formatu MP3 przez jeden z wielu darmowych program"
"ów (spróbuj na przykład programu Audacity)."

#: 10.3-Sharing.md:43
msgid "Hope"
msgstr "Nadzieja"

#: 10.3-Sharing.md:45
msgid ""
"I encourage you to share your work and really hope that we'll all teach each o"
"ther new tricks and moves with Sonic Pi. I'm really excited by what you'll hav"
"e to show me."
msgstr ""
"Zachęcam Cię, abyś dzielił się swoją pracą i naprawdę wierzę w to, że wszyscy "
"razem będziemy się uczyć od siebie nowych sztuczek i trików w Sonic Pi. Jestem"
" bardzo podekscytowany tym, co będziesz chciał mi pokazać."

#: 10.4-Performing.md:1
msgid "10.4 Performing"
msgstr "10.4 Występy Na Scenie"

#: 10.4-Performing.md:3
msgid "Performing"
msgstr "Występy Na Scenie"

#: 10.4-Performing.md:5
msgid ""
"One of the most exciting aspects of Sonic Pi is that it enables you to use cod"
"e as a *musical instrument*. This means that writing code live can now be seen"
" as a new way of performing music."
msgstr ""
"Jednym z najbardziej ekscytujących aspektów Sonic Pi jest fakt, że pozwala Ci "
"na używanie kodu jako *instrumentu muzycznego*. Oznacza to, że pisanie kodu na"
" żywo może być teraz uznawane jako nowa metoda prezentowania muzyki na scenie."

#: 10.4-Performing.md:9
msgid "We call this *Live Coding*."
msgstr "Nazywamy to *Kodowaniem Na Żywo*."

#: 10.4-Performing.md:11
msgid "Show Your Screen"
msgstr "Pokaż Swój Ekran"

#: 10.4-Performing.md:13
msgid ""
"When you live code I recommend you *show your screen* to your audience. Otherw"
"ise it's like playing a guitar but hiding your fingers and the strings. When I"
" practice at home I use a Raspberry Pi and a little mini projector on my livin"
"g room wall. You could use your TV or one of your school/work projectors to gi"
"ve a show. Try it, it's a lot of fun."
msgstr ""
"Kiedy kodujesz na żywo, polecam Ci, abyś *pokazał* swojej publiczności *Twój e"
"kran*. W przeciwnym przypadku będzie to tak, jak granie na gitarze, ale chowaj"
"ąc swoje palce i struny. Kiedy ćwiczę w domu używam Raspberry Pi i małego mini"
" projektora na ścianie w moim salonie. Możesz użyć Twojego TV albo jednego z p"
"rojektorów, które są dostępne w twojej szkole lub pracy, aby dać występ. Sprób"
"uj, to świetna zabawa."

#: 10.4-Performing.md:20
msgid "Form a Band"
msgstr "Stwórz Zespół"

#: 10.4-Performing.md:22
msgid ""
"Don't just play on your own - form a live coding band! It's a lot of fun jammi"
"ng with others. One person could do beats, another ambient background, etc. Se"
"e what interesting combinations of sounds you can have together."
msgstr ""
"Nie graj tylko sam - spróbuj stworzyć zespół kodujący na żywo! Granie z innymi"
" daje wiele radości i satysfakcji. Jedna osoba może robić bity, inna podkład w"
" stylu ambient, itd. Spróbuj zobaczyć, jakie ciekawe kombinacje dźwięków możec"
"ie razem stworzyć."

#: 10.4-Performing.md:27
msgid "TOPLAP"
msgstr "TOPLAP"

#: 10.4-Performing.md:29
msgid ""
"Live coding isn't completely new - a small number of people have been doing it"
" for a few years now, typically using bespoke systems they've built for themse"
"lves. A great place to go and find out more about other live coders and system"
"s is [TOPLAP](http://toplap.org)."
msgstr ""
"Kodowanie na żywo nie jest całkowicie nowe - mała grupa ludzi robi to już od k"
"ilku lat, zazwyczaj korzystając z systemów na zamówienie, które zbudowali dla "
"siebie sami. Świetnym miejscem, do którego możesz się udać i dowiedzieć się wi"
"ęcej na temat innych osób kodujących na żywo oraz ich systemów, jest [TOPLAP]("
"http://toplap.org)."

#: 10.4-Performing.md:34
msgid "Algorave"
msgstr "Algorave"

#: 10.4-Performing.md:36
msgid ""
"Another great resource for exploring the live coding world is [Algorave](http:"
"//algorave.com). Here you can find all about a specific strand of live coding "
"for making music in nightclubs."
msgstr ""
"Innym świetnym źródłem dla odkrywania świata kodowania na żywo jest [Algorave]"
"(http://algorave.com). Możesz tutaj znaleźć wszystko, co dotyczy wszystkich as"
"pektów kodowania na żywo, które są związane z tworzeniem muzyki w klubach."

#: 11-Minecraft-Pi.md:1
msgid "11 Minecraft Pi"
msgstr "11 Minecraft Pi"

#: 11-Minecraft-Pi.md:3
msgid "Minecraft Pi"
msgstr "Minecraft Pi"

#: 11-Minecraft-Pi.md:5
msgid ""
"Sonic Pi now supports a simple API for interacting with Minecraft Pi - the spe"
"cial edition of Minecraft which is installed by default on the Raspberry Pi's "
"Raspbian Linux-based operating system."
msgstr ""
"Sonic Pi wspiera proste API umożliwia interakcję z Minecraft Pi - specjalną ed"
"ycją gry Minecraft, która jest domyślnie preinstalowana w systemie Raspbian na"
" Raspberry Pi (system operacyjny bazujący na Linuksie)."

#: 11-Minecraft-Pi.md:9
msgid "No need to import libraries"
msgstr "Brak konieczności importowania bibliotek"

#: 11-Minecraft-Pi.md:11
msgid ""
"The Minecraft Pi integration has been designed to be insanely easy to use. All"
" you need to do is to launch Minecraft Pi and create a world. You're then free"
" to use the `mc_*` fns just like you might use `play` and `synth`. There's no "
"need to import anything or install any libraries - it's all ready to go and wo"
"rks out of the box."
msgstr ""
"Integracja z Minecraft Pi została zaprojektowana, aby być szalenie łatwa w uży"
"ciu. Wszystko, co potrzebujesz zrobić, to włączyć Minecraft Pi i stworzyć nowy"
" świat. Gdy już to zrobić, możesz dowolnie używać funkcji `mc_*` tak samo, jak"
" używałeś do tej pory poleceń `play` i `synth`. Nie ma konieczności importowan"
"ia czegokolwiek lub instalacji dodatkowych bibliotek - wszystko jest gotowe i "
"działa po wyjęciu z pudełka."

#: 11-Minecraft-Pi.md:17
msgid "Automatic Connection"
msgstr "Automatyczne Połączenie"

#: 11-Minecraft-Pi.md:19
msgid ""
"The Minecraft Pi API takes care of managing your connection to the Minecraft P"
"i application. This means you don't need to worry about a thing. If you try an"
"d use the Minecraft Pi API when Minecraft Pi isn't open, Sonic Pi will politel"
"y tell you. Similarly, if you close Minecraft Pi whilst you're still running a"
" `live_loop` that uses the API, the live loop will stop and politely tell you "
"that it can't connect. To reconnect, just launch Minecraft Pi again and Sonic "
"Pi will automatically detect and re-create the connection for you."
msgstr ""
"API serwowane przez Minecraft Pi zajmuje się zarządzaniem Twoim połączeniem z "
"aplikacją Minecraft Pi. Oznacza to, że nie musisz się przejmować o nic. Jeśli "
"spróbujesz skorzystać z API oferowanego przez Minecraft Pi, kiedy gra nie jest"
" włączona, Sonic Pi uprzejmie Cię o tym poinformuje. Podobnie, jeśli zamkniesz"
" Minecraft Pi w momencie, kiedy wciąż masz uruchomioną żywą pętlę `live_loop`,"
" która korzysta z API, żywa pętla zatrzyma się i uprzejmie poinformuje Cię, że"
" nie może się połączyć. Aby wznowić połączenie, wystarczy że ponownie włączysz"
" Minecraft Pi, a Sonic Pi automatycznie wykryje i ponownie utworzy połączenie "
"za Ciebie."

#: 11-Minecraft-Pi.md:28
msgid "Designed to be Live Coded"
msgstr "Zaprojektowanie do Kodowania Na Żywo"

#: 11-Minecraft-Pi.md:30
msgid ""
"The Minecraft Pi API has been designed to work seamlessly within `live_loop`s."
" This means it's possible to synchronise modifications in your Minecraft Pi wo"
"rlds with modifications in your Sonic Pi sounds. Instant Minecraft-based music"
" videos! Note however that Minecraft Pi is alpha software and is known to be s"
"lightly buggy. If you encounter any problems simply restart Minecraft Pi and c"
"arry on as before. Sonic Pi's automatic connection functionality will take car"
"e of things for you."
msgstr ""
"API oferowane przez Minecraft Pi zostało zaprojektowane w taki sposób, aby pra"
"cować bez żadnych problemów o obrębie żywych pętli tworzonych z wykorzystaniem"
" polecenia `live_loop`. Oznacza to, że jest możliwe, a synchronizacja zmian w "
"Twoim świecie Minecraft Pi ze zmianami dokonywanymi w dźwiękach brzmiących w T"
"woim Sonic Pi. Błyskawiczne nagrania wideo z muzyką bazujące na grze Minecraft"
"! Jeśli jednak zdarzy się, że natrafisz na jakieś problemy, po prostu uruchom "
"ponownie Minecraft Pi i kontynuuj wcześniejszą zabawę. Funkcjonalność automaty"
"cznego połączenia Sonic Pi zajmie się wszystkim za Ciebie."

#: 11-Minecraft-Pi.md:39
msgid "Requires a Raspberry Pi 2.0"
msgstr "Wymaga Raspberry Pi 2.0"

#: 11-Minecraft-Pi.md:41
msgid ""
"It is highly recommended that you use a Raspberry Pi 2 if you wish to run both"
" Sonic Pi and Minecraft at the same time - especially if you want to use Sonic"
" Pi's sound capabilities."
msgstr ""
"Zalecane jest, abyś używał Raspberry Pi 2, jeśli chcesz jednocześnie uruchomić"
" Sonic Pi i Minecraft - zwłaszcza wtedy, gdy chcesz wykorzystać możliwości dźw"
"iękowe Sonic Pi."

#: 11-Minecraft-Pi.md:45
msgid "API Support"
msgstr "Wspierane API"

#: 11-Minecraft-Pi.md:47
msgid ""
"At this stage, Sonic Pi supports basic block and player manipulations which ar"
"e detailed in Section 11.1. Support for event callbacks triggered by player in"
"teractions in the world is planned for a future release."
msgstr ""
"Na ten moment Sonic Pi wspiera podstawowe bloki oraz manipulacje graczy, które"
" są opisane w rozdziale 11.1. Wsparcie dla zdarzeń zwrotnych wywoływanych prze"
"z interakcje gracza w świecie jest planowane na przyszłe wydanie."

#: 11.1-Basic-API.md:1
msgid "11.1 Basic API"
msgstr "11.1 Podstawowe API"

#: 11.1-Basic-API.md:3
msgid "Basic Minecraft Pi API"
msgstr "Podstawowe API oferowane przez Minecraft Pi"

#: 11.1-Basic-API.md:5
msgid ""
"Sonic Pi currently supports the following basic interactions with Minecraft Pi"
":"
msgstr "Sonic Pi aktualnie wspiera następujące podstawowe interakcje z Minecraft Pi:"

#: 11.1-Basic-API.md:7 11.1-Basic-API.md:16
msgid "Displaying chat messages"
msgstr "Wyświetlanie wiadomości czatowych"

#: 11.1-Basic-API.md:8 11.1-Basic-API.md:33
msgid "Setting the position of the user"
msgstr "Ustawianie pozycji gracza"

#: 11.1-Basic-API.md:9
msgid "Getting the position of the user"
msgstr "Odczyt pozycji gracza"

#: 11.1-Basic-API.md:10
msgid "Setting the block type at a given coordinate"
msgstr "Ustawianie typu bloku na podanych współrzędnych"

#: 11.1-Basic-API.md:11
msgid "Getting the block type at a given coordinate"
msgstr "Zabieranie typu bloku na podanych współrzędnych"

#: 11.1-Basic-API.md:14
msgid "Let's look at each of these in turn."
msgstr "Spróbujmy przyjrzeć się każemu z nich po kolei."

#: 11.1-Basic-API.md:18
msgid ""
"Let's see just how easy it is to control Minecraft Pi from Sonic Pi. First, ma"
"ke sure you have both Minecraft Pi and Sonic Pi open at the same time and also"
" make sure you've entered a Minecraft world and can walk around."
msgstr ""
"Zobaczmy, jak łatwo jest kontrolować Minecraft Pi z Sonic Pi. Najpierw upewnij"
" się, że zarówno Minecraft Pi, jak i Sonic Pi są jednocześnie otwarte, a także"
" upewnij się, że udało Ci się wejść do świata Minecraft i możesz się poruszać."

#: 11.1-Basic-API.md:23
msgid "In a fresh Sonic Pi buffer simply enter the following code:"
msgstr "W czystym buforze Sonic Pi po prostu wprowadź poniższy kod:"

#: 11.1-Basic-API.md:25
#, no-wrap
msgid "mc_message \"Hello from Sonic Pi\""
msgstr "mc_message \"Hello from Sonic Pi\""

#: 11.1-Basic-API.md:29
msgid ""
"When you hit the *Run* button, you'll see your message flash up on the Minecra"
"ft window. Congratulations, you've written your first Minecraft code! That was"
" easy wasn't it."
msgstr ""
"Kiedy naciśniesz przycisk *Run*, zobaczysz migającą wiadomość w oknie Minecraf"
"t. Gratulacje, właśnie napisałeś swój pierwszy kod w Minecraft! Prawda, to był"
"o proste."

#: 11.1-Basic-API.md:35
msgid ""
"Now, let's try a little magic. Let's teleport ourselves somewhere! Try the fol"
"lowing:"
msgstr ""
"Teraz spróbujmy odrobiny magii. Spróbujmy przeteleportować nas w inne miejsce."
" Sprawdź następujący kod:"

#: 11.1-Basic-API.md:38
#, no-wrap
msgid "mc_teleport 50, 50, 50"
msgstr "mc_teleport 50, 50, 50"

#: 11.1-Basic-API.md:42
msgid ""
"When you hit *Run* - boom! You're instantantly transported to a new place. Mos"
"t likely it was somewhere in the sky and you fell down either to dry land or i"
"nto water. Now, what are those numbers: `50, 50, 50`? They're the coordinates "
"of the location you're trying to teleport to. Let's take a brief moment to exp"
"lore what coordinates are and how they work because they're really, really imp"
"ortant for programming Minecraft."
msgstr ""
"Kiedy naciśniesz *Run* - bum! Zostajesz błyskawicznie przetransportowany w now"
"e miejsce. Bardzo prawdopodobne jest to, że to gdzieś w powietrzu i spadniesz "
"w dół, na suchy ląd, lub do wody. Teraz, co to za liczby: `50, 50, 50`? Są to "
"współrzędne miejsca, do którego starasz się przeteleportować. Poświęćmy krótką"
" chwilę, żeby dowiedzieć się, czym są współrzędne i jak działają, ponieważ są "
"one naprawdę ważne w programowaniu Minecraft."

#: 11.1-Basic-API.md:50
msgid "Coordinates"
msgstr "Współrzędne"

#: 11.1-Basic-API.md:52
msgid ""
"Imagine a pirate's map with a big `X` marking the location of some treasure. T"
"he exact location of the `X` can be described with two numbers - how far along"
" the map from left to right and how far along the map from bottom to top. For "
"example `10cm` across and `8cm` up. These two numbers `10` and `8` are coordin"
"ates. You could easily imagine describing the locations of other stashes of tr"
"easure with other pairs of numbers. Perhaps there's a big chest of gold at `2`"
" across and `9` up..."
msgstr ""
"Wyobraź sobie mapę piratów z wielkim `X` oznaczającym miejsce jakiegoś skarbu."
" Dokładna lokalizacja `X` może być opisana przez podanie dwóch liczb - jak dal"
"eko na mapie od lewej do prawej oraz jak daleko od dołu mapy w górę. Na przykł"
"ad `10cm` wszerz i `8cm` w górę. Te dwie liczby `10` i `8` to współrzędne. Moż"
"esz bardzo łatwo wyobrazić sobie opisywanie sekretnych miejsc ze skarbami za p"
"omocą innej pary liczb. Być może bardzo duża skrzynia złota znajduje się na `2"
"` w poprzek, `9` w górę."

#: 11.1-Basic-API.md:61
msgid ""
"Now, in Minecraft two numbers isn't quite enough. We also need to know how hig"
"h we are. We therefore need three numbers:"
msgstr ""
"Teraz w Minecraft dwie liczby to za mało. Potrzebujemy także wiedzieć o tym, j"
"ak wysoko się znajdujemy. Dlatego też potrzebujemy trzech liczb:"

#: 11.1-Basic-API.md:64
msgid "How far from right to left in the world - `x`"
msgstr "Jak daleko od prawej do lewej w naszym świecie - `x`"

#: 11.1-Basic-API.md:65
msgid "How far from front to back in the world - `z`"
msgstr "Jak daleko od przodu do tyłu w naszym świecie - `z`"

#: 11.1-Basic-API.md:66
msgid "How high up we are in the world - `y`"
msgstr "Jak wysoko znajdujemy się w naszym świecie - `y`"

#: 11.1-Basic-API.md:68
msgid ""
"One more thing - we typically describe these coordinates in this order `x`, `y"
"`, `z`."
msgstr ""
"Jeszcze jedna rzecz - zazwyczaj opisujemy te współrzędne w następującej kolejn"
"ości `x`, `y`, `z`."

#: 11.1-Basic-API.md:71
msgid "Finding your current coordinates"
msgstr "Odczytywanie Twojej aktualnej lokalizacji"

#: 11.1-Basic-API.md:73
msgid ""
"Let's have a play with coordinates. Navigate to a nice place in the Minecraft "
"map and then switch over to Sonic Pi. Now enter the following:"
msgstr ""
"Spróbujmy pobawić się współrzędnymi. Przenieś się do jakiegoś ładnego miejsca "
"na mapie Minecraft, a następnie przełącz się do Sonic Pi. Teraz wpisz następuj"
"ącą linijkę:"

#: 11.1-Basic-API.md:76
#, no-wrap
msgid "puts mc_location"
msgstr "puts mc_location"

#: 11.1-Basic-API.md:80
msgid ""
"When you hit the *Run* button you'll see the coordinates of your current posit"
"ion displayed in the log window. Take a note of them, then move forward in the"
" world and try again. Notice how the coordinates changed! Now, I recommend you"
" spend some time repeating exactly this - move a bit in the world, take a look"
" at the coordinates and repeat. Do this until you start to get a feel for how "
"the coordinates change when you move. Once you've understood how coordinates w"
"ork, programming with the Minecraft API will be a complete breeze."
msgstr ""
"Kiedy uruchomisz przycisk *Run*, zobaczysz współrzędne Twojego aktualnego poło"
"żenia wyświetlone w panelu z logami. Zapisz je, a następnie spróbuj przemieści"
"ć się do przodu w świecie i spróbuj jeszcze raz. Zauważ, że współrzędne się zm"
"ieniły! Teraz zalecam Ci poświęcić trochę czasu na powtórzenie tego kilka razy"
" - przenieś się gdzieś kawałek w Twoim świecie, zerknij na współrzędne i powtó"
"rz. Próbuj tego do momentu, w którym poczujesz, jak zmieniają się współrzędne,"
" gdy się poruszasz. Gdy już zrozumiesz, jak działają współrzędne, programowani"
"e z API oferowanym przez Minecraft będzie dla Ciebie bułką z masłem."

#: 11.1-Basic-API.md:89
msgid "Let's Build!"
msgstr "Zbudujmy Coś!"

#: 11.1-Basic-API.md:91
msgid ""
"Now that you know how to find the current position and to teleport using coord"
"inates, you have all the tools you need to start building things in Minecraft "
"with code. Let's say you want to make the block with coordinates `40`, `50`, `"
"60` to be glass. That's super easy:"
msgstr ""
"Teraz gdy już wiesz, w jaki sposob znaleźć aktualną pozycję oraz w jaki sposob"
" możesz się teleportować, korzystając z współrzędnych, posiadasz już wszystkie"
" narzędzia, których potrzebujesz, aby zacząć budować rzeczy w Minecraft za pom"
"ocą kodu. Powiedzmy, że chciałbyś stworzyć blok ze szkła o współrzędnych `40`,"
" `50`, `60`. Proste:"

#: 11.1-Basic-API.md:96
#, no-wrap
msgid "mc_set_block :glass, 40, 50, 60"
msgstr "mc_set_block :glass, 40, 50, 60"

#: 11.1-Basic-API.md:100
msgid ""
"Haha, it really was that easy. To see your handywork just teleport nearby and "
"take a look:"
msgstr ""
"Haha, to naprawdę było takie proste. Aby obejrzeć swoje dzieło, po prostu prze"
"teleportuj się niedaleko i zerknij na nie:"

#: 11.1-Basic-API.md:103
#, no-wrap
msgid "mc_teleport 35, 50, 60"
msgstr "mc_teleport 35, 50, 60"

#: 11.1-Basic-API.md:107
msgid ""
"Now turn around and you should see your glass block! Try changing it to diamon"
"d:"
msgstr ""
"Teraz obróć się dookoła, a Twoim oczom ukaże się Twój blok ze szkła! Spróbuj z"
"mienić go w diament:"

#: 11.1-Basic-API.md:110
#, no-wrap
msgid "mc_set_block :diamond, 40, 50, 60"
msgstr "mc_set_block :diamond, 40, 50, 60"

#: 11.1-Basic-API.md:114
msgid ""
"If you were looking in the right direction you might have even seen it change "
"in front of your eyes! This is the start of something exciting..."
msgstr ""
"Jeśli patrzyłeś w odpowiednim kierunku, to być może nawet zauważyłeś, jak zmie"
"nił się na twoich oczach! To początek czegoś ekscytującego..."

#: 11.1-Basic-API.md:117
msgid "Looking at blocks"
msgstr "Patrzenie na Bloki"

#: 11.1-Basic-API.md:119
msgid ""
"Let's look at one last thing before we move onto something a bit more involved"
". Given a set of coordinates we can ask Minecraft what the type of a specific "
"block is. Let's try it with the diamond block you just created:"
msgstr ""
"Spróbujmy spojrzeć na ostatnią rzecz, zanim zaczniemy coś bardziej angażująceg"
"o. Podając zestaw współrzędnych, możemy zapytać Minecraft o to, jakiego typu j"
"est specyficzny blok. Spróbujmy tego z naszym blokiem diamentu, który stworzył"
"eś przed chwilą:"

#: 11.1-Basic-API.md:124
#, no-wrap
msgid "puts mc_get_block 40, 50, 60"
msgstr "puts mc_get_block 40, 50, 60"

#: 11.1-Basic-API.md:128
msgid ""
"Yey! It's `:diamond`. Try changing it back to glass and asking again - does it"
" now say `:glass`? I'm sure it does :-)"
msgstr ""
"Łał! To diament (`:diamond`)! Spróbuj ponownie zmienić go w szkło i jeszcze ra"
"z zapytać o typ - czy teraz pokazał szkło (`:glass`)? Jestem pewien, że tak :-"
")"

#: 11.1-Basic-API.md:131
msgid "Available block types"
msgstr "Dostępne typy bloków"

#: 11.1-Basic-API.md:133
msgid ""
"Before you go on a Minecraft Pi coding rampage, you might find this list of av"
"ailable block types useful:"
msgstr ""
"Zanim oddasz się szaleństwu programowania z Minecraft Pi, być może zainteresuj"
"e Cię poniższa lista dostępnych typów bloków:"

#: 11.1-Basic-API.md:136
#, no-wrap
msgid ""
"    :air\n"
"    :stone\n"
"    :grass\n"
"    :dirt\n"
"    :cobblestone\n"
"    :wood_plank\n"
"    :sapling\n"
"    :bedrock\n"
"    :water_flowing\n"
"    :water\n"
"    :water_stationary\n"
"    :lava_flowing\n"
"    :lava\n"
"    :lava_stationary\n"
"    :sand\n"
"    :gravel\n"
"    :gold_ore\n"
"    :iron_ore\n"
"    :coal_ore\n"
"    :wood\n"
"    :leaves\n"
"    :glass\n"
"    :lapis\n"
"    :lapis_lazuli_block\n"
"    :sandstone\n"
"    :bed\n"
"    :cobweb\n"
"    :grass_tall\n"
"    :flower_yellow\n"
"    :flower_cyan\n"
"    :mushroom_brown\n"
"    :mushroom_red\n"
"    :gold_block\n"
"    :gold\n"
"    :iron_block\n"
"    :iron\n"
"    :stone_slab_double\n"
"    :stone_slab\n"
"    :brick\n"
"    :brick_block\n"
"    :tnt\n"
"    :bookshelf\n"
"    :moss_stone\n"
"    :obsidian\n"
"    :torch\n"
"    :fire\n"
"    :stairs_wood\n"
"    :chest\n"
"    :diamond_ore\n"
"    :diamond_block\n"
"    :diamond\n"
"    :crafting_table\n"
"    :farmland\n"
"    :furnace_inactive\n"
"    :furnace_active\n"
"    :door_wood\n"
"    :ladder\n"
"    :stairs_cobblestone\n"
"    :door_iron\n"
"    :redstone_ore\n"
"    :snow\n"
"    :ice\n"
"    :snow_block\n"
"    :cactus\n"
"    :clay\n"
"    :sugar_cane\n"
"    :fence\n"
"    :glowstone_block\n"
"    :bedrock_invisible\n"
"    :stone_brick\n"
"    :glass_pane\n"
"    :melon\n"
"    :fence_gate\n"
"    :glowing_obsidian\n"
"    :nether_reactor_core"
msgstr ""
"    :air\n"
"    :stone\n"
"    :grass\n"
"    :dirt\n"
"    :cobblestone\n"
"    :wood_plank\n"
"    :sapling\n"
"    :bedrock\n"
"    :water_flowing\n"
"    :water\n"
"    :water_stationary\n"
"    :lava_flowing\n"
"    :lava\n"
"    :lava_stationary\n"
"    :sand\n"
"    :gravel\n"
"    :gold_ore\n"
"    :iron_ore\n"
"    :coal_ore\n"
"    :wood\n"
"    :leaves\n"
"    :glass\n"
"    :lapis\n"
"    :lapis_lazuli_block\n"
"    :sandstone\n"
"    :bed\n"
"    :cobweb\n"
"    :grass_tall\n"
"    :flower_yellow\n"
"    :flower_cyan\n"
"    :mushroom_brown\n"
"    :mushroom_red\n"
"    :gold_block\n"
"    :gold\n"
"    :iron_block\n"
"    :iron\n"
"    :stone_slab_double\n"
"    :stone_slab\n"
"    :brick\n"
"    :brick_block\n"
"    :tnt\n"
"    :bookshelf\n"
"    :moss_stone\n"
"    :obsidian\n"
"    :torch\n"
"    :fire\n"
"    :stairs_wood\n"
"    :chest\n"
"    :diamond_ore\n"
"    :diamond_block\n"
"    :diamond\n"
"    :crafting_table\n"
"    :farmland\n"
"    :furnace_inactive\n"
"    :furnace_active\n"
"    :door_wood\n"
"    :ladder\n"
"    :stairs_cobblestone\n"
"    :door_iron\n"
"    :redstone_ore\n"
"    :snow\n"
"    :ice\n"
"    :snow_block\n"
"    :cactus\n"
"    :clay\n"
"    :sugar_cane\n"
"    :fence\n"
"    :glowstone_block\n"
"    :bedrock_invisible\n"
"    :stone_brick\n"
"    :glass_pane\n"
"    :melon\n"
"    :fence_gate\n"
"    :glowing_obsidian\n"
"    :nether_reactor_core"

#: 12-Conclusions.md:1
msgid "12 Conclusions"
msgstr "12 Wnioski"

#: 12-Conclusions.md:3
msgid "Conclusions"
msgstr "Wnioski"

#: 12-Conclusions.md:5
msgid ""
"This concludes the Sonic Pi introductory tutorial. Hopefully you've learned so"
"mething along the way. Don't worry if you feel you didn't understand everythin"
"g - just play and have fun and you'll pick things up in your own time. Feel fr"
"ee to dive back in when you have a question that might be covered in one of th"
"e sections."
msgstr ""
"Czas na podsumowanie samouczka wprowadzającego do Sonic Pi. Mam nadzieję, że n"
"auczyłeś się czegoś w trakcie jego czytania. Nie przejmuj się, jeśli czujesz, "
"że nie wszystko zrozumiałeś - po prostu graj i baw się, a na pewno załapiesz k"
"olejne rzeczy w odpowiednim dla siebie czasie. Nie krępuj się i zajrzyj tutaj "
"ponownie, jeśli będziesz miał jakieś pytanie, na które odpowiedź znajduje się "
"w jednym z rozdziałów."

#: 12-Conclusions.md:11
msgid ""
"If you have any questions that haven't been covered in the tutorial, then plea"
"se jump onto the [Sonic Pi forums](http://groups.google.com/group/sonic-pi/) a"
"nd ask your question there. You'll find someone friendly and willing to lend a"
" hand."
msgstr ""
"Jeśli masz jakiekolwiek pytania, na które nie znalazłeś odpowiedzi w tym samou"
"czku, polecam Ci zajrzeć na [forum Sonic Pi](http://groups.google.com/group/so"
"nic-pi/) i zadać swoje pytanie właśnie tam. Na pewno znajdziesz tam kogoś, kto"
" bez problemu i z chęcią poda Ci pomocną dłoń."

#: 12-Conclusions.md:16
msgid ""
"Finally, I also invite you to take a deeper look at the rest of the documentat"
"ion in this help system. There are a number of features that haven't been cove"
"red in this tutorial that are waiting for your discovery."
msgstr ""
"I na koniec zachęcam Cię również, abyś przyjrzał się głębiej pozostałej części"
" dokumentacji dostępnej w systemie pomocy. Znajdziesz tam wiele funkcjonalnośc"
"i, które nie zostały omówione w tym samouczku i czekają tam, abyś je odkrył."

#: 12-Conclusions.md:21
msgid ""
"So play, have fun, share your code, perform for your friends, show your screen"
"s and remember:"
msgstr ""
"A więc graj, baw się, dziel się twoim  kodem, występuj na żywo przed twoimi zn"
"ajomymi, pokazuj swój ekran i pamiętaj:"

#: 12-Conclusions.md:24
msgid "*There are no mistakes, only opportunities.*"
msgstr "*Błędów nie ma, są tylko nowe możliwości.*"

#: 12-Conclusions.md:26
msgid "[Sam Aaron](http://twitter.com/samaaron)"
msgstr "[Sam Aaron](http://twitter.com/samaaron)"

#: A-Articles.md:1
msgid "A Appendix A - MagPi Articles"
msgstr "A Dodatek A - Artykuły z magazynu  MagPi"

#: A-Articles.md:3
msgid "MagPi Articles"
msgstr "Artykuły z magazynu MagPi"

#: A-Articles.md:5
msgid "Appendix A collects all the Sonic Pi articles written for the MagPi magazine."
msgstr ""
"Dodatek A to zbiór wszystkich artykułów o Sonic Pi, które zostały napisane dla"
" magazynu MagPi."

#: A-Articles.md:8
msgid "Dive into Topics"
msgstr "Jak czytać poszczególne tematy"

#: A-Articles.md:10
msgid ""
"These articles aren't meant to be read in any strict order and contain a lot o"
"f cross-over material from the tutorial itself. Rather than try and teach you "
"all of Sonic Pi, they instead each focus on a specific aspect of Sonic Pi and "
"cover it in a fun and accessible way."
msgstr ""
"Artykuły te nie zostały napisane aby czytać je w określonej kolejności czy por"
"ządku. Materiał w nich zawarty często pokrywa się z materiałem zawartym w samo"
"uczku. Zamiast próbować nauczyć Cię wszystkiego o Sonic Pi, skupia się raczej "
"na specyficznych aspektach Sonic Pi i stara się opisać je w sposób zabawny i p"
"rzystępny."

#: A-Articles.md:15
msgid "Read the MagPi"
msgstr "Czytaj magazyn MagPi"

#: A-Articles.md:17
msgid ""
"You can see them in their glorious professionally typeset form in the free PDF"
" downloads of The MagPi here: https://www.raspberrypi.org/magpi/"
msgstr ""
"Artykuły te możesz przeczytać i obejrzeć w pełnej krasie, w darmowej wersji PD"
"F magazynu MagPi, który możesz pobrać tutaj: https://www.raspberrypi.org/magpi"
"/"

#: A-Articles.md:20
msgid "Suggest a Topic"
msgstr "Zaproponuj temat"

#: A-Articles.md:22
msgid ""
"If you don't see a topic that interests you covered in these articles - why no"
"t suggest one? The easiest way to do that is to tweet your suggestion to [@Son"
"ic_Pi](http://twitter.com/sonic_pi). You never know - your suggestion might be"
" the subject of the next article!"
msgstr ""
"Jeśli okaże się, że pośród tych artykułów nie znalazłeś tematu, który Cię inte"
"resuje - to czemu nie miałbyś go zaproponować? Najlepszy sposób to napisanie o"
" tym pomyśle do [@Sonic Pi](http://twitter.com/sonic_pi). Nigdy nie wiadomo - "
"być może temat który zaproponujesz będzie głównym tematem kolejnego artykułu!"

#: A.01-tips.md:1
msgid "A.1 Tips for Sonic Pi"
msgstr "A.1 Wskazówki dla Sonic Pi"

#: A.01-tips.md:3
msgid "Five Top Tips"
msgstr "Pięć najważniejszych wskazówek"

#: A.01-tips.md:5
msgid "1. There are no mistakes"
msgstr "1. Błędów nie ma"

#: A.01-tips.md:7
msgid ""
"The most important lesson to learn with Sonic Pi is that there really are no m"
"istakes. The best way to learn is to just try and try and try. Try lots of dif"
"ferent things out, stop worrying whether your code sounds good or not and star"
"t experimenting with as many different synths, notes, FX and opts as possible."
" You'll discover a lot of things that make you laugh because they sound just a"
"wful and some real gems that sound truly amazing. Simply drop the things you d"
"on't like and keep the things you do. The more 'mistakes' you allow yourself t"
"o make the quicker you'll learn and discover your personal coding sound."
msgstr ""
"Najważniejszą lekcją jaką powinieneś wynieść z Sonic Pi jest taka, że tak napr"
"awdę błędów nie ma. Najlepsza metoda nauki to ciągłe próbowanie, próbowanie i "
"próbowanie. Próbuj wielu różnych rzeczy, nie przejmuj się tym, czy twój kod br"
"zmi dobrze czy źle i zacznij eksperymenty z możliwie największą liczbą różnych"
" syntezatorów, nut, efektów (FX) i opcji. Odkryjesz ogrom rzeczy, które spowod"
"ują, że będziesz się śmiać. Niektóre będą brzmieć strasznie a inne będą prawdz"
"iwymi perełkami i będą brzmieć niesamowicie dobrze. Wystarczy, że pominiesz rz"
"eczy, które Ci się nie podobają i zostawisz tylko te, które wpadną Ci w ucho. "
"Im więcej 'błędów' pozwolisz sobie popełnić tym szybciej się będziesz uczyć i "
"odkryjesz kod, który oddaje twoje indywidualne brzmienie."

#: A.01-tips.md:18
msgid "2. Use the FX"
msgstr "2. Używaj efektów (FX)"

#: A.01-tips.md:20
msgid ""
"Say you've already mastered the Sonic Pi basics of making sounds with `sample`"
", `play`? What's next? Did you know that Sonic Pi supports over 27 studio FX t"
"o change the sound of your code? FX are like fancy image filters in drawing pr"
"ograms except that instead of blurring or making something black and white, yo"
"u can add things like reverb, distortion and echo to your sound. Think of it l"
"ike sticking the cable from your guitar to an effects pedal of your choice and"
" then into the amplifier. Luckily, Sonic Pi makes using FX really easy and req"
"uires no cables! All you need to do is to choose which section of your code yo"
"u'd like the FX added to and wrap it with the FX code. Let's look at an exampl"
"e. Say you had the following code:"
msgstr ""
"Więc mówisz, że właśnie opanowałeś podstawy Sonic Pi polegające na tworzeniu d"
"źwięków z wykorzystaniem poleceń `sample` i `play`? Co dalej? Czy wiedziałeś, "
"że Sonic Pi wspiera ponad 27 efektów studyjnych (FX), które pozwalają na zmian"
"ę brzmienia twojego kodu? Efekty są niczym ekstrawaganckie filtry obrazów jaki"
"e możesz znaleźć w programach graficznych, z tym że zamiast rozmazywania lub s"
"prawiania, że coś staje się czarno białe, możesz dodać rzeczy takie jak pogłos"
" (ang. reverb), zniekształcenie (ang. distortion) lub echo do twoich dźwięków."
" Pomyśl o tym jak o kablu, który łączy twoją gitarę z pedałami do efektów, któ"
"re sam wybrałeś a następnie prowadzi do wzmacniacza. Na szczęście Sonic Pi spr"
"awia, że używanie efektów jest naprawdę proste i nie wymaga żadnych kabli! Jed"
"yne co musisz zrobić to wybrać, która sekcja twojego kodu powinna być objęta e"
"fektem i otoczyć ją kodem FX. Spójrzmy na przykład. Powiedzmy, że masz następu"
"jący kawałek kodu:"

#: A.01-tips.md:32
#, no-wrap
msgid ""
"sample :loop_garzul\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"sample :loop_garzul\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.01-tips.md:41
msgid ""
"If you wanted to add FX to the `:loop_garzul` sample, you'd just tuck it insid"
"e a `with_fx` block like this:"
msgstr ""
"Jeśli chcesz nałożyć efekt na sampel `:loop_garzul`, wystarczy że wsadzisz go "
"w blok `with_fx` w taki sposób:"

#: A.01-tips.md:44
#, no-wrap
msgid ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"16.times do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.01-tips.md:55
msgid ""
"Now, if you wanted to add FX to the bass drum, go and wrap that with `with_fx`"
" too:"
msgstr ""
"A teraz, jeśli chcesz dodać efekt do bębna, to jego też po prostu otocz polece"
"niem `with_fx`:"

#: A.01-tips.md:58
#, no-wrap
msgid ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"with_fx :echo do\n"
"  16.times do\n"
"    sample :bd_haus\n"
"    sleep 0.5\n"
"  end\n"
"end"
msgstr ""
"with_fx :flanger do\n"
"  sample :loop_garzul\n"
"end\n"
"with_fx :echo do\n"
"  16.times do\n"
"    sample :bd_haus\n"
"    sleep 0.5\n"
"  end\n"
"end"

#: A.01-tips.md:71
msgid ""
"Remember, you can wrap *any* code within `with_fx` and any sounds created will"
" pass through that FX."
msgstr ""
"Zapamiętaj, możesz otoczyć *dowolny* kawałek kodu poleceniem `with_fx` i każdy"
" z tworzonych dźwięków będzie przepuszczony przez ten efekt (FX)."

#: A.01-tips.md:75
msgid "3. Parameterise your synths"
msgstr "3. Używaj parametrów w twoich syntezatorach"

#: A.01-tips.md:77
msgid ""
"In order to really discover your coding sound you'll soon want to know how to "
"modify and control synths and FX. For example, you might want to change the du"
"ration of a note, add more reverb, or change the time between echoes. Luckily,"
" Sonic Pi gives you an amazing level of control to do exactly this with specia"
"l things called optional parameters or opts for short. Let's take a quick look"
". Copy this code into a workspace and hit run:"
msgstr ""
"Jeśli naprawdę chcesz odkryć twoje własne brzmienie w kodzie to dość szybko bę"
"dziesz chciał dowiedzieć się w jaki sposób zmieniać i kontrolować syntezatory "
"oraz efekty. Na przykład, możesz chcieć zmienić czas trwania jakiejś nuty, dod"
"ać więcej pogłosu (reverb) lub zmienić odstęp pomiędzy echo. Na szczęście, Son"
"ic Pi daje Ci niesamowity poziom kontroli nad tymi aspektami za pomocą rzeczy,"
" które nazywają się parametrami opcjonalnymi, w skrócie opcjami. Rzućmy okiem."
" Skopiuj poniższy kawałek kodu do buforu i naciśnij przycisk \"Run\":"

#: A.01-tips.md:85
#, no-wrap
msgid "sample :guit_em9"
msgstr "sample :guit_em9"

#: A.01-tips.md:89
msgid ""
"Ooh, a lovely guitar sound! Now, let's start playing with it. How about changi"
"ng its rate?"
msgstr ""
"Ooo, przyjemny dźwięk gitary! A teraz, spróbujmy się tym pobawić. Co powiesz n"
"a zmianę tempa?"

#: A.01-tips.md:92
#, no-wrap
msgid "sample :guit_em9, rate: 0.5"
msgstr "sample :guit_em9, rate: 0.5"

#: A.01-tips.md:96
msgid ""
"Hey, what's that `rate: 0.5` bit I just added at the end? That's called an opt"
". All of Sonic Pi's synths and FX support them and there's loads to play aroun"
"d with. They're also available for FX too. Try this:"
msgstr ""
"Hej, czym jest ten kawałek `rate: 0.5`, który przed chwilą dodałem na końcu? N"
"azywamy to opcją. Wszystkie syntezatory i efekty w Sonic Pi je wspierają i jes"
"t ich bardzo dużo do zabawy. Są również dostępne dla efektów. Spróbuj tego:"

#: A.01-tips.md:100
#, no-wrap
msgid ""
"with_fx :flanger, feedback: 0.6 do\n"
"  sample :guit_em9\n"
"end"
msgstr ""
"with_fx :flanger, feedback: 0.6 do\n"
"  sample :guit_em9\n"
"end"

#: A.01-tips.md:106
msgid ""
"Now, try increasing that feedback to 1 to hear some crazy sounds! Read the doc"
"s for full details on all the many opts available to you."
msgstr ""
"A teraz spróbuj zwiększyć wartość opcji feedback do 1 aby usłyszeć trochę zwar"
"iowanych dźwięków! Zajrzyj do dokumentacji, znajdziesz tam wiele dokładnie opi"
"sanych szczegółów, które dotyczą wszystkich opcji, z których możesz korzystać."

#: A.01-tips.md:110
msgid "5. Live Code"
msgstr "5. Koduj na żywo"

#: A.01-tips.md:112
msgid ""
"The best way to quickly experiment and explore Sonic Pi is to live code. This "
"allows you to start off some code and continually change and tweak it whilst i"
"t's still playing. For example, if you don't know what the cutoff parameter do"
"es to a sample, just play around. Let's have a try! Copy this code into one of"
" your Sonic Pi workspaces:"
msgstr ""
"Najlepszym metodą na szybkie eksperymenty i naukę Sonic Pi jest kodowanie na ż"
"ywo. Pozwala Ci to na uruchomienie jakiegoś kawałka kodu a następnie na sukces"
"ywne zmienianie i ulepszanie go gdy ten cały czas gra.  Przypuśćmy, że nie wie"
"sz jak działa opcja `cutoff` na wybrany przez Ciebie sampel, wystarczy że zacz"
"niesz się nim bawić. Spróbujmy tego! Skopiuj poniższy kawałek kodu do jednego "
"z twoich buforów:"

#: A.01-tips.md:118
#, no-wrap
msgid ""
"live_loop :experiment do\n"
"  sample :loop_amen, cutoff: 70\n"
"  sleep 1.75\n"
"end"
msgstr ""
"live_loop :experiment do\n"
"  sample :loop_amen, cutoff: 70\n"
"  sleep 1.75\n"
"end"

#: A.01-tips.md:125
msgid ""
"Now, hit run and you'll hear a slightly muffled drum break. Now, change the `c"
"utoff:` value to `80` and hit run again. Can you hear the difference? Try `90`"
", `100`, `110`..."
msgstr ""
"A teraz naciśnij przycisk \"Run\" a usłyszysz lekko przytłumiony breakbit. Teraz"
" zmień wartość opcji `cutoff:` na 80 i ponownie naciśnij \"Run\". Słyszysz różni"
"cę? Spróbuj tego samego dla kolejnych wartości: `90`, `100`, `110`..."

#: A.01-tips.md:129
msgid ""
"Once you get the hang of using `live_loop`s you'll not turn back. Whenever I d"
"o a live coding gig I rely on `live_loop` as much as a drummer relies on their"
" sticks. For more information about live coding check out Section 9 of the bui"
"lt-in tutorial."
msgstr ""
"Gdy już raz spróbujesz polecenia `live_loop` to już nigdy nie będziesz chciał "
"wrócić. Zawsze kiedy koduję na żywo na jakiejś imprezie to polegam na poleceni"
"u `live_loop` tak samo jak perkusista polega na swoich pałeczkach. Jeśli chces"
"z dowiedzieć się więcej o kodowaniu na żywo zajrzyj do rozdziału nr 9 samouczk"
"a, który jest wbudowany w Sonic Pi."

#: A.01-tips.md:134
msgid "5. Surf the random streams"
msgstr "5. Surfuj po losowych strumieniach"

#: A.01-tips.md:136
msgid ""
"Finally, one thing I love doing is cheating by getting Sonic Pi to compose thi"
"ngs for me. A really great way to do this is using randomisation. It might sou"
"nd complicated but it really isn't. Let's take a look. Copy this into a spare "
"workspace:"
msgstr ""
"Jedna z rzeczy, którą uwielbiam robić to oszukiwanie poprzez wykorzystywanie S"
"onic Pi aby komponował melodie za mnie. Bardzo dobrym sposobem jest wykorzysta"
"nie do tego celu randomizacji. Może to brzmieć odrobinę skomplikowanie, ale ta"
"k naprawdę nie jest. Przyjrzyjmy się temu bliżej. Skopiuj poniższy kod do jaki"
"egoś pustego buforu:"

#: A.01-tips.md:141
#, no-wrap
msgid ""
"live_loop :rand_surfer do\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :rand_surfer do\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.01-tips.md:152
msgid ""
"Now, when you play this, you'll hear a constant stream of random notes from th"
"e scale `:e2 :minor_pentatonic` played with the `:dsaw` synth. \"Wait, wait! Th"
"at's not a melody\", I hear you shout! Well, here's the first part of the magic"
" trick. Every time we go round the `live_loop` we can tell Sonic Pi to reset t"
"he random stream to a known point. This is a bit like going back in time in th"
"e TARDIS with the Doctor to a particular point in time and space. Let's try it"
" - add the line `use_random_seed 1` to the `live_loop`:"
msgstr ""
"Teraz, kiedy włączysz ten kawałek, usłyszysz stały strumień losowych nut z gam"
"y (skali) pentatonicznej e-moll zagranej przez syntezator `:dsaw`. \"Czekaj, cz"
"ekaj! Przecież to nie jest melodia\" Usłyszałem jak krzyczysz! Spokojnie, pro p"
"ierwsza część magicznej ścieżki. Możemy powiedzieć Sonic Pi, aby zmieniał loso"
"wy strumień dźwięków po każdym przebiegu pętli. To jest trochę podobne do sytu"
"acji w której przenieślibyśmy się w czasie i przestrzeni za pomocą TARDIS'a ra"
"zem z Doktorem Who. Spróbuj dodać linijkę `use_random_seed 1` w pętli `live_lo"
"op`:"

#: A.01-tips.md:161
#, no-wrap
msgid ""
"live_loop :rand_surfer do\n"
"  use_random_seed 1\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :rand_surfer do\n"
"  use_random_seed 1\n"
"  use_synth :dsaw\n"
"  notes = (scale :e2, :minor_pentatonic, num_octaves: 2)\n"
"  16.times do\n"
"    play notes.choose, release: 0.1, cutoff: rrand(70, 120)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.01-tips.md:173
msgid ""
"Now, every time the `live_loop` loops around, the random stream is reset. This"
" means it chooses the same 16 notes every time. Hey presto! An instant melody."
" Now, here's the really exciting bit. Change the seed value from `1` to anothe"
"r number. Say `4923`. Wow! Another melody! So, just by changing one number (th"
"e random seed), you can explore as many melodic combinations as you can imagin"
"e! Now, that's the magic of code."
msgstr ""
"Teraz , przy każdej kolejnej iteracji pętli losowy strumień jest resetowany. O"
"znacza to, że za każdym razem kiedy losowane te same 16 nut. Bułka z masłem! M"
"elodia błyskawiczna. A teraz czas na coś naprawdę ekstra. Zmień wartość przy p"
"oleceniu `seed` na inną liczbę. Powiedzmy `4923`. Łał! Kolejną melodia! Wystar"
"czy więc zmienić jedną liczbę aby móc poznawać tyle kombinacji melodii ile tyl"
"ko sobie wyobrazisz. I to jest właśnie magia kodu."

#: A.02-live-coding.md:1
msgid "A.2 Live Coding"
msgstr "A.2 Kodowanie na żywo"

#: A.02-live-coding.md:5
msgid ""
"The laser beams sliced through the wafts of smoke as the subwoofer pumped bass"
" deep into the bodies of the crowd. The atmosphere was ripe with a heady mix o"
"f synths and dancing. However something wasn't quite right in this nightclub. "
"Projected in bright colours above the DJ booth was futuristic text, moving, da"
"ncing, flashing. This wasn't fancy visuals, it was merely a projection of Soni"
"c Pi running on a Raspberry Pi. The occupant of the DJ booth wasn't spinning d"
"isks, he was writing, editing and evaluating code. Live. This is Live Coding."
msgstr ""
"Promienie lasera przecinały smugi dymu a  bas pulsujący z subwoofera przeszywa"
"ł ciała tłumu na parkiecie.  Atmosfera była gorąca, \n"
" tworzyły ją syntezatory i taniec. W klubie tym było jednak coś dziwnego. Na ś"
"cianie tuż nad głową DJ'a był wyświetlany jasny futurystyczny tekst, który bez"
" przerwy się poruszał, zmieniał, tańczył i świecił... Nie były to żadne fantaz"
"yjne wizualizacje, tylko Sonic Pi uruchomiony na Raspberry Pi. Osoba okupująca"
" stanowisko DJ'a nie kręciła płytami winylowymi lecz pisała, edytowała i uruch"
"amiała kod. Na żywo. To jest właśnie kodowanie na żywo."

#: A.02-live-coding.md:14
msgid ""
"![Sam Aaron Live Coding](../images/tutorial/articles/A.02-live-coding/sam-aaro"
"n-live-coding.png)"
msgstr ""
"![Sam Aaron kodujący na żywo](../images/tutorial/articles/A.02-live-coding/sam"
"-aaron-live-coding.png)"

#: A.02-live-coding.md:16
msgid ""
"This may sound like a far fetched story from a futuristic night club but codin"
"g music like this is a growing trend and is often described as Live Coding (ht"
"tp://toplap.org). One of the recent directions this approach to music making h"
"as taken is the Algorave (http://algorave.com) - events where artists like mys"
"elf code music for people to dance to. However, you don't need to be in a nigh"
"tclub to Live Code - with Sonic Pi v2.6+ you can do it anywhere you can take y"
"our Raspberry Pi and a pair of headphones or some speakers. Once you reach the"
" end of this article, you'll be programming your own beats and modifying them "
"live. Where you go afterwards will only be constrained by your imagination."
msgstr ""
"Być może brzmi to jak historia z przyszłości opisująca futurystyczny klub, ale"
" kodowanie muzyki w ten sposób to rosnący trend i często jest opisywany jako k"
"odowanie na żywo (http://toplap.org). Jednym z obecnych kierunków jaki obrał r"
"uch tworzący muzykę w taki sposób jest Algorave (http://algorave.com) - wydarz"
"enia podczas których osoby takie jak ja kodują muzykę do tańca dla ludzi. Jedn"
"akże, wcale nie musisz być w klubie żeby Kodować Na Żywo - z Sonic Pi v2.6+ mo"
"żesz to robić gdziekolwiek tylko uda Ci zabrać ze sobą swój komputer, parę słu"
"chawek lub głośniki. Kiedy skończysz czytać ten artykuł będziesz programował s"
"woje własne bity i zmieniał je na żywo. Gdzie pójdziesz dalej będzie ograniczo"
"ne tylko twoją wyobraźnią."

#: A.02-live-coding.md:27
msgid "Live Loop"
msgstr "Live Loop (Żywa Pętla)"

#: A.02-live-coding.md:29
msgid ""
"The key to live coding with Sonic Pi is mastering the `live_loop`. Let's look "
"at one:"
msgstr ""
"Kluczem do kodowania na żywo jest okiełznanie polecenia `live_loop`. Przyjrzyj"
"my się jednej:"

#: A.02-live-coding.md:32
#, no-wrap
msgid ""
"live_loop :beats do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :beats do\n"
"  sample :bd_haus\n"
"  sleep 0.5\n"
"end"

#: A.02-live-coding.md:39
msgid ""
"There are 4 core ingredients to a `live_loop`. The first is its name. Our `liv"
"e_loop` above is called `:beats`. You're free to call your `live_loop` anythin"
"g you want. Go crazy. Be creative. I often use names that communicate somethin"
"g about the music they're making to the audience. The second ingredient is the"
" `do` word which marks where the `live_loop` starts. The third is the `end` wo"
"rd which marks where the `live_loop` finishes, and finally there is the body o"
"f the `live_loop` which describes what the loop is going to repeat - that's th"
"e bit between the `do` and `end`. In this case we're repeatedly playing a bass"
" drum sample and waiting for half a beat. This produces a nice regular bass be"
"at. Go ahead, copy it into an empty Sonic Pi buffer and hit run. Boom, Boom, B"
"oom!."
msgstr ""
"Aby stworzyć żywą pętlę (`live_loop`) potrzebujemy 4 składników. Pierwszym jes"
"t jej nazwa. Nasza pętla  `live_loop` powyżej została nazwana `:beats`. Masz p"
"ełną  dowolność  w wyborze nazwy dla twojej pętli ` live_loop`. Możesz tutaj s"
"zaleć do woli. Bądź kreatywny. Często używam nazw, które mówią publiczności co"
"ś o muzyce, którą tworzą. Drugi składnik to słowo kluczowe `do`, które zaznacz"
"a gdzie się zaczyna dana pętla `live_loop`. Trzeci składnik to słowo kluczowe "
"`end`, które zaznacza gdzie nasza pętla `live_loop` się kończy. Ostatni składn"
"ik to ciało żywej pętli `live_loop`, które opisuje co dana pętla będzie powtar"
"zać - jest to kawałek pomiędzy słowami kluczowymi `do` i `end`. W tym przypadk"
"u będziemy w koło odtwarzać sampel grający bęben i czekać przez połowę uderzen"
"ia. To spowoduje, ze usłyszymy przyjemne i regularne uderzenia bębna. Śmiało, "
"skopiuj ten kawałek do pustego buforu w Sonic Pi i naciśnij przycisk uruchom. "
"Bum, Bum, Bum!."

#: A.02-live-coding.md:52
msgid "Redefining On-the-fly"
msgstr "Redefiniowanie w locie"

#: A.02-live-coding.md:54
msgid ""
"Ok, so what's so special about the `live_loop`? So far it just seems like a gl"
"orified `loop`! Well, the beauty of `live_loop`s is that you can redefine them"
" on-the-fly. This means that whilst they're still running, you can change what"
" they do. This is the secret to live coding with Sonic Pi. Let's have a play:"
msgstr ""
"No dobra, ale co w takim razie jest takiego wyjątkowego w żywej pętli `live_lo"
"op`? Jak do tej pory wygląda to jak zwykła pętla `loop`, która została  wynies"
"iona na piedestał. Całe piękno pętli `live_loop` polega na tym, że możemy zmie"
"niać je w locie. Oznacza to, że możemy sprawić, ze zmieni się ich zachowanie. "
"Jest to klucz do kodowania na żywo. Spróbujmy zrobić coś takiego:"

#: A.02-live-coding.md:60
#, no-wrap
msgid ""
"live_loop :choral_drone do\n"
"  sample :ambi_choir, rate: 0.4\n"
"  sleep 1\n"
"end"
msgstr ""
"live_loop :choral_drone do\n"
"  sample :ambi_choir, rate: 0.4\n"
"  sleep 1\n"
"end"

#: A.02-live-coding.md:67
msgid ""
"Now press the Run button or hit `alt-r`. You're now listening to some gorgeous"
" choir sounds. Now, whilst it's still playing, change the rate from `0.4` to `"
"0.38`. Hit run again. Woah! Did you hear the choir change note? Change it back"
" up to `0.4` to return back to how it was. Now, drop it to `0.2`, down to `0.1"
"9` and then back up to `0.4`. See how changing just one parameter on the fly c"
"an give you real control of the music? Now play around with the rate yourself "
"- choose your own values. Try negative numbers, really small numbers and large"
" numbers. Have fun!"
msgstr ""
"A teraz naciśnij przycisk \"Run\" lub wciśnij klawisze `alt-r`. Słyszysz teraz p"
"arę wspaniałych dźwięków chóralnych. A teraz, kiedy pętla wciąż gra zmień wart"
"ości opcji rate z `0.4` na `0.38`. Naciśnij Run ponownie. Łał! Zauważyłeś, że "
"chór wybrzmiewa teraz inną nutą? Zmień ją ponownie na wartość `0.4` aby przywr"
"ócić wcześniejsze brzmienie. Teraz obniż wartość na `0.2`, potem ma `0.19` i w"
"róć do `0.4`. Widzisz jak zmiana tylko jednego parametru w locie fajkę Ci real"
"ną kontrolę nad muzyką? Spróbuj teraz pobawić się parametrem rate samodzielnie"
" - wybierz swoje własne wartości. Spróbuj użyć liczb ujemnych, naprawdę bardzo"
" małych wartości oraz dużych liczb. Przyjemnej zabawy!"

#: A.02-live-coding.md:77
msgid "Sleeping is important"
msgstr "Spanie (ang. sleep) jest ważne"

#: A.02-live-coding.md:79
msgid ""
"One of the most important lessons about `live_loop`s is that they need rest. C"
"onsider the following `live_loop`:"
msgstr ""
"Jedną z najważniejszych lekcji dotyczących pętli `live_loop` jest to, że potrz"
"ebują one odpoczynku. Przyjrzyjmy się następującej pętli `live_loop`:"

#: A.02-live-coding.md:82
#, no-wrap
msgid ""
"live_loop :infinite_impossibilities do\n"
"  sample :ambi_choir\n"
"end"
msgstr ""
"live_loop :infinite_impossibilities do\n"
"  sample :ambi_choir\n"
"end"

#: A.02-live-coding.md:88
msgid ""
"If you try running this code, you'll immediately see Sonic Pi complaining that"
" the `live_loop` did not sleep. This is a safety system kicking in! Take a mom"
"ent to think about what this code is asking the computer to do. That's right, "
"it's asking the computer to play an infinite amount of choir samples in zero t"
"ime. Without the safety system the poor computer will try and do this and cras"
"h and burn in the process. So remember, your `live_loop`s must contain a `slee"
"p`."
msgstr ""
"Jeśli spróbujesz uruchomić powyższy kawałek kodu, szybko zauważysz, że pętla `"
"live_loop` zacznie narzekać, że nie spała. To jest miejsce, w którym do akcji "
"wkracza system bezpieczeństwa! Zatrzymaj się na chwilę i zastanów się czego te"
"n kawałek kodu oczekuje od komputera. Tak jest, prosi komputer, żeby zagrał sa"
"mpel ambi_hoir nieskończoną ilość razy od razu. Gdyby nie system bezpieczeństw"
"a, to nasz biedny komputer spróbowałby zrobić to o co go prosimy w wyniku czeg"
"o popsułby się i spalił. Pamiętaj więc, twoje żywe pętle muszą posiadać polece"
"nie `sleep`."

#: A.02-live-coding.md:97
msgid "Combining Sounds"
msgstr "Łączenie Dźwięków"

#: A.02-live-coding.md:99
msgid ""
"Music is full of things happening at the same time. Drums at the same time as "
"bass at the same time as vocals at the same time as guitars... In computing we"
" call this concurrency and Sonic Pi provides us with an amazingly simple way o"
"f playing things at the same time. Simply use more than one `live_loop`!"
msgstr ""
"Muzyka jest pełna rzeczy, które się dzieją w tym samym czasie. Bębny grają, a "
"w tym samym czasie słychać bas, wokal i gitarę... W komputerach nazywamy to ws"
"półbieżnością a Sonic Pi pozwala nam na granie różnych dźwięków w tym samym cz"
"asie w niesamowicie prosty sposób. Wystarczy, że użyjemy więcej niż jednej pęt"
"li `live_loop`!"

#: A.02-live-coding.md:105
#, no-wrap
msgid ""
"live_loop :beats do\n"
"  sample :bd_tek\n"
"  with_fx :echo, phase: 0.125, mix: 0.4 do\n"
"    sample  :drum_cymbal_soft, sustain: 0, release: 0.1\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"live_loop :bass do\n"
"  use_synth :tb303\n"
"  synth :tb303, note: :e1, release: 4, cutoff: 120, cutoff_attack: 1\n"
"  sleep 4\n"
"end"
msgstr ""
"live_loop :beats do\n"
"  sample :bd_tek\n"
"  with_fx :echo, phase: 0.125, mix: 0.4 do\n"
"    sample  :drum_cymbal_soft, sustain: 0, release: 0.1\n"
"    sleep 0.5\n"
"  end\n"
"end\n"
"live_loop :bass do\n"
"  use_synth :tb303\n"
"  synth :tb303, note: :e1, release: 4, cutoff: 120, cutoff_attack: 1\n"
"  sleep 4\n"
"end"

#: A.02-live-coding.md:121
msgid ""
"Here, we have two `live_loop`s, one looping quickly making beats and another l"
"ooping slowly making a crazy bass sound."
msgstr ""
"Mamy tu dwie pętle `live_loop`, jedna kręci się szybko wygrywając rytm natomia"
"st druga kręci się powoli tworząc zwariowaną sekcję basową."

#: A.02-live-coding.md:124
msgid ""
"One of the interesting things about using multiple `live_loop`s is that they e"
"ach manage their own time. This means it's really easy to create interesting p"
"olyrhythmical structures and even play with phasing Steve Reich style. Check t"
"his out:"
msgstr ""
"Jedną z interesujących rzeczy w używaniu wielu pętli `live_loop` jest to, że k"
"ażda z nich zarządza swoim czasem. Oznacza to, że bardzo łatwo można stworzyć "
"interesujące struktury polirytmiczne a nawet grać fazami w stylu Stevena Reich"
"a. Spróbuj tego:"

#: A.02-live-coding.md:129
#, no-wrap
msgid ""
"# Steve Reich's Piano Phase\n"
"notes = (ring :E4, :Fs4, :B4, :Cs5, :D5, :Fs4, :E4, :Cs5, :B4, :Fs4, :D5, :Cs5"
")\n"
"live_loop :slow do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.3\n"
"end\n"
"live_loop :faster do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.295\n"
"end"
msgstr ""
"# Steve Reich's Piano Phase\n"
"notes = (ring :E4, :Fs4, :B4, :Cs5, :D5, :Fs4, :E4, :Cs5, :B4, :Fs4, :D5, :Cs5"
")\n"
"live_loop :slow do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.3\n"
"end\n"
"live_loop :faster do\n"
"  play notes.tick, release: 0.1\n"
"  sleep 0.295\n"
"end"

#: A.02-live-coding.md:145 A.03-coded-beats.md:155 A.04-synth-riffs.md:166
#: A.05-acid-bass.md:147 A.06-minecraft.md:156 A.07-bizet.md:138
#: A.09-randomisation.md:145 A.10-controlling-your-sound.md:149
#: A.11-beat-tracking.md:176 A.12-sample-slicing.md:137
#: A.13-probabilistic-sequencer.md:137 A.14-amplitude-modulation.md:192
#: A.15-five-live-coding-techniques.md:152 A.15-performance.md:152
#: A.16-practice.md:166
msgid "Bringing it all together"
msgstr "Połączenie tego wszystkiego w jedną całość"

#: A.02-live-coding.md:147
msgid ""
"In each of these tutorials, we'll end with a final example in the form of a ne"
"w piece of music which draws from all of the ideas introduced. Read this code "
"and see if you can imagine what it's doing. Then, copy it into a fresh Sonic P"
"i buffer and hit Run and actually hear what it sounds like. Finally, change on"
"e of the numbers or comment and uncomment things out. See if you can use this "
"as a starting point for a new performance, and most of all have fun! See you n"
"ext time..."
msgstr ""
"Każdy z tutoriali ma swoje zwieńczenie, którym jest przykład końcowy. Jest to "
"kawałek muzyki, która prezentuje wszystkie idee zaprezentowane w danym tutoria"
"lu. Przeczytaj ten kod i zobacz, czy jesteś w stanie wyobrazić sobie, co ten k"
"od robi. Następnie skopiuj go do czystego buforu w Sonic Pi i naciśnij przycis"
"k Run, aby usłyszeć, jak brzmi naprawdę. Na koniec zmień wybraną przez siebie "
"liczbę albo wykomentuj lub odkomentuj wybrane przez siebie linijki kodu. Pomyś"
"l, czy możesz użyć tego kawałka jako punkt wyjściowy dla nowego występu, a tak"
"że najważniejsze - spróbuj się dobrze bawić. Do zobaczenia następnym razem..."

#: A.02-live-coding.md:156
#, no-wrap
msgid ""
"with_fx :reverb, room: 1 do\n"
"  live_loop :time do\n"
"    synth :prophet, release: 8, note: :e1, cutoff: 90, amp: 3\n"
"    sleep 8\n"
"  end\n"
"end\n"
"live_loop :machine do\n"
"  sample :loop_garzul, rate: 0.5, finish: 0.25\n"
"  sample :loop_industrial, beat_stretch: 4, amp: 1\n"
"  sleep 4\n"
"end\n"
"live_loop :kik do\n"
"  sample :bd_haus, amp: 2\n"
"  sleep 0.5\n"
"end\n"
"with_fx :echo do\n"
"  live_loop :vortex do\n"
"    # use_random_seed 800\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 3)\n"
"    16.times do\n"
"      play notes.choose, release: 0.1, amp: 1.5\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"with_fx :reverb, room: 1 do\n"
"  live_loop :time do\n"
"    synth :prophet, release: 8, note: :e1, cutoff: 90, amp: 3\n"
"    sleep 8\n"
"  end\n"
"end\n"
"live_loop :machine do\n"
"  sample :loop_garzul, rate: 0.5, finish: 0.25\n"
"  sample :loop_industrial, beat_stretch: 4, amp: 1\n"
"  sleep 4\n"
"end\n"
"live_loop :kik do\n"
"  sample :bd_haus, amp: 2\n"
"  sleep 0.5\n"
"end\n"
"with_fx :echo do\n"
"  live_loop :vortex do\n"
"    # use_random_seed 800\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 3)\n"
"    16.times do\n"
"      play notes.choose, release: 0.1, amp: 1.5\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.03-coded-beats.md:1
msgid "A.3 Coded Beats"
msgstr "A.3 Zakodowane Bity"

#: A.03-coded-beats.md:3
msgid "Coded Beats"
msgstr "Zakodowane bity"

#: A.03-coded-beats.md:5
msgid ""
"One of the most exciting and disrupting technical developments in modern music"
" was the invention of samplers. These were boxes that allowed you to record an"
"y sound into them and then manipulate and play back those sounds in many inter"
"esting ways. For example, you could take an old record, find a drum solo (or b"
"reak), record it into your sampler and then play it back on repeat at half-spe"
"ed to provide the foundation for your latest beats. This is how early hip-hop "
"music was born and today it's almost impossible to find electronic music that "
"doesn't incorporate samples of some kind. Using samples is a really great way "
"of easily introducing new and interesting elements into your live coded perfor"
"mances."
msgstr ""
"Jednym z najbardziej ekscytujących i zawrotnych rozwoju technicznego nowoczesn"
"ej muzyki było wynalezienie samplerów. Były to pudełka, które pozwalały na nag"
"rywanie i wrzucenie do nich dowolnego dźwięku, który można było potem zmieniać"
" i odtwarzać te dźwięki na wiele ciekawych sposobów. Na przykład: mogłeś wziąć"
" jakieś stare nagranie, znaleźć sekcję z solówką na perkusji, nagrać ją na Two"
"im samplerze, a następnie odtwarzać ją w kółko, zwalniając przy tym tempo tego"
" fragmentu o połowę, aby stworzyć bazę dla Twoich najnowszych bitów. W taki wł"
"aśnie sposób narodził się wczesny hip-hop i w dzisiejszych czasach prawie niem"
"ożliwym jest znalezienie muzyki elektronicznej, która by nie korzystała z samp"
"li w jakimś stopniu. Używanie sampli jest naprawdę świetnym sposobem na wprowa"
"dzanie nowych i ciekawych elementów do Twoich występów polegających na kodowan"
"iu muzyki na żywo."

#: A.03-coded-beats.md:17
msgid ""
"So where can you get a sampler? Well you already have one - it's your Raspberr"
"y Pi! The built-in live coding app Sonic Pi has an extremely powerful sampler "
"built into its core. Let's play with it!"
msgstr ""
"Skąd w takim razie możesz wziąć sampler? Właściwie to aktualnie już jeden posi"
"adasz - jest nim Twój komputer Raspberry Pi (albo Mac lub PC)! Aplikacja Sonic"
" Pi posiada wbudowany sampler, który jest bardzo potężny. Spróbujmy się nim po"
"bawić!"

#: A.03-coded-beats.md:21
msgid "The Amen Break"
msgstr "Amen Break"

#: A.03-coded-beats.md:23
msgid ""
"One of the most classic and recognisable drum break samples is called the Amen"
" Break. It was first performed in 1969 in the song \"Amen Brother\" by the Winst"
"ons as part of a drum break. However, it was when it was discovered by early h"
"ip-hop musicians in the 80s and used in samplers that it started being heavily"
" used in a wide variety of other styles such as drum and bass, breakbeat, hard"
"core techno and breakcore."
msgstr ""
"Jeden z najbardziej klasycznych i rozpoznawalnych samplem zawierającym perkusj"
"ę nazywa się Amen Break. Po raz pierwszy został użyty w roku 1969 w piosence \""
"Amen Brother\" (Amen Bracie) przez zespół Winstons jako część solówki na perkus"
"ji. Jednakże, od chwili kiedy została odkryta przez wczesnych muzyków tworzący"
"ch hip-hop w latach 80-tych i użyta w samplerach zaczęła być bardzo często uży"
"wana w wielu innych stylach muzycznych np. drum and bass, breakbeat, hardcore "
"techno i breakcore."

#: A.03-coded-beats.md:30
msgid ""
"I'm sure you're excited to hear that it's also built right into Sonic Pi. Clea"
"r up a buffer and throw in the following code:"
msgstr ""
"Jestem pewien, że będziesz podekscytowany gdy powiem Ci, że one też są "
"wbudowane w Sonic Pi. Wyczyść bufor i wklej następujący kod:"

#: A.03-coded-beats.md:37
msgid ""
"Hit *Run* and boom! You're listening to one of the most influential drum break"
"s in the history of dance music. However, this sample wasn't famous for being "
"played as a one-shot, it was built for being looped."
msgstr ""
"Naciśnij *Run* i bum! Słuchasz jednej z najbardziej wpływowych połamanych "
"pętli w historii muzyki tanecznej. Jednakże sampel ten nie zawdzięcza swej "
"sławy jednorazowemu odtworzeniu, został stworzony po to aby się kręcić w "
"kółko."

#: A.03-coded-beats.md:42
msgid "Beat Stretching"
msgstr "Sięgnięcie Po Beat"

#: A.03-coded-beats.md:44
msgid ""
"Let's loop the Amen Break by using our old friend the `live_loop` introduced i"
"n this tutorial last month:"
msgstr ""
"Zapętlijmy amen break, używając naszego starego dobrego przyjaciela `live_loop"
"`, wprowadzonego w tym poradniku ostatniego miesiąca:"

#: A.03-coded-beats.md:47
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  sample :loop_amen\n"
"  sleep 2\n"
"end"
msgstr ""
"live_loop :amen_break do\n"
"  sample :loop_amen\n"
"  sleep 2\n"
"end"

#: A.03-coded-beats.md:54
#, fuzzy
msgid ""
"OK, so it is looping, but there's an annoying pause every time round. That is "
"because we asked it to sleep for `2` beats and with the default BPM of 60 the "
"`:loop_amen` sample only lasts for `1.753` beats. We therefore have a silence "
"of `2 - 1.753 = 0.247` beats. Even though it's short, it's still noticeable."
msgstr ""
"Okej, więc to jest zapętlone, ale są tutaj irytujące pauzy za każdym razem, gd"
"y ponownie odtwarzany jest sampel. Tak się dzieje, gdyż poprosiliśmy go o uśpi"
"enie na '2' uderzenia, z domyślnym BPM 60. `: loop_amen` trwa jedynie przez `1"
".753` uderzenia. Mamy więc ciszę przez 0.247 uderzenia ('2-1.753 = 0.247'). Mi"
"mo krótkiego czasu trwania, jest to jeszcze zauważalne."

#: A.03-coded-beats.md:60
msgid ""
"To fix this issue we can use the `beat_stretch:` opt to ask Sonic Pi to stretc"
"h (or shrink) the sample to match the specified number of beats."
msgstr ""
"Żeby naprawić ten problem możemy użyć opcji `beat_stretch:`aby poprosić Sonic "
"Pi by rozciągnęło (lub skurczyło) sampla tak aby wpasował się w określoną licz"
"bę uderzeń (bitów)."

#: A.03-coded-beats.md:63
msgid ""
"Sonic Pi's `sample` and `synth` fns give you a lot of control via optional par"
"ameters such as `amp:`, `cutoff:` and `release:`. However, the term optional p"
"arameter is a real mouthful so we just call them *opts* to keep things nice an"
"d simple."
msgstr ""
"Funkcje `sample` i `synth`, które są dostępne w Sonic Pi pozwalają Ci na dużą "
"kontrolę za pomocą opcjonalnych parametrów takich jak `amp:`, `cutoff:` czy `r"
"elease:`. Jednakże termin parametry opcjonalne jest dosyć długi więc będziemy "
"używać skróconego terminu *opcje* aby było nam wygodniej i łatwiej."

#: A.03-coded-beats.md:68
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end  "
msgstr ""
"live_loop :amen_break do\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end  "

#: A.03-coded-beats.md:75
msgid ""
"Now we're dancing! Although, perhaps we want to speed it up or slow it down to"
" suit the mood."
msgstr ""
"Teraz możemy zacząć tańczyć! Aczkolwiek, może chcielibyśmy przyśpieszyć trochę"
" tempo lub zwolnić aby dostosować je do nastroju."

#: A.03-coded-beats.md:78
msgid "Playing with Time"
msgstr "Zabawa z Czasem"

#: A.03-coded-beats.md:80
#, fuzzy
msgid ""
"OK, so what if we want to change styles to old school hip hop or breakcore? On"
"e simple way of doing this is to play with time - or in other words mess with "
"the tempo. This is super easy in Sonic Pi - just throw in a `use_bpm` into you"
"r live loop:"
msgstr ""
"Dobrze! Więc co, jeśli chcemy zmienić styl na starą szkołę hip-hop lub breakco"
"re? Jednym z prostszych sposobów jest zabawa z czasem - lub, w innym słowa zna"
"czeniu, bałagan z tempem. To jest super łatwe w Sonic Pi - po prostu dodaj 'us"
"e_bpm' do Twojej żywej pętli:"

#: A.03-coded-beats.md:85
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 30\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end "
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 30\n"
"  sample :loop_amen, beat_stretch: 2\n"
"  sleep 2\n"
"end "

#: A.03-coded-beats.md:93
msgid ""
"Whilst you're rapping over those slow beats, notice that we're still sleeping "
"for 2 and our BPM is 30, yet everything is in time. The `beat_stretch` opt wor"
"ks with the current BPM to make sure everything just works."
msgstr ""
"Zauważ, że w czasie gdy rapujesz do tych powolnych uderzeń, przy każdym kolejn"
"ym obiegu pętli wciąż śpimy przez 2 uderzenia, nasze BPM (z ang. Beats Per Min"
"ute - ilość uderzeń na minutę) jest równe 30, a wszystkie nasze dźwięki idealn"
"ie mieszczą się w czasie jednej pętli. Opcja `beat_stretch` współpracuje z akt"
"ualnym BPM aby zapewnić, że wszystko działa jak należy."

#: A.03-coded-beats.md:97
msgid ""
"Now, here's the fun part. Whilst the loop is still live, change the `30` in th"
"e `use_bpm 30` line to `50`. Woah, everything just got faster yet *kept in tim"
"e*! Try going faster - up to 80, to 120, now go crazy and punch in 200!"
msgstr ""
"A teraz czas na zabawę. Podczas gdy pętla jest wciąż żywa, zmień wartość `30` "
"w linijce `use_bpm 30` na `50`. Łoooo, wszystko ot tak przyśpiesza *a jednocze"
"śnie* wciąż mieści się w czasie trwania jednej pętli! Spróbuj pójść jeszcze sz"
"ybciej - do 80, do 120, a nawet zaszalej i uderz w 200!"

#: A.03-coded-beats.md:103
msgid "Filtering"
msgstr "Filtrowanie"

#: A.03-coded-beats.md:105
msgid ""
"Now we can live loop samples, let's look at some of the most fun opts provided"
" by the `sample` synth. First up is `cutoff:` which controls the cutoff filter"
" of the sampler. By default this is disabled but you can easily turn it on:"
msgstr ""
"Potrafimy już wplatać sample do naszych żywych pętli, spójrzmy zatem na jedną "
"z najfajniejszych opcji, które są dostępne dla syntezatora `sample`. Pierwszą "
"jest `cutoff:`, która kontroluje filtr odcięcia samplera. Domyślnie jest ona w"
"yłączona, ale możesz ją bardzo łatwo włączyć:"

#: A.03-coded-beats.md:110
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  sample :loop_amen, beat_stretch: 2, cutoff: 70\n"
"  sleep 2\n"
"end  "
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  sample :loop_amen, beat_stretch: 2, cutoff: 70\n"
"  sleep 2\n"
"end  "

#: A.03-coded-beats.md:118
msgid ""
"Go ahead and change the `cutoff:` opt. For example, increase it to 100, hit *R"
"un* and wait for the loop to cycle round to hear the change in the sound. Noti"
"ce that low values like 50 sound mellow and bassy and high values like 100 and"
" 120 are more full-sounding and raspy. This is because the `cutoff:` opt will "
"chop out the high frequency parts of the sound just like a lawn-mower chops of"
"f the top of the grass. The `cutoff:` opt is like the length setting - determi"
"ning how much grass is left over."
msgstr ""
"Śmiało, spróbuj zmienić wartość opcji `cutoff:`. Na przykład, zwiększ ją do 10"
"0, naciśnij przycisk *Run*, poczekaj aż aktualna pętla skończy swój przebieg a"
"by usłyszeć zmianę w dźwięku. Zauważ, że niskie wartości takie jak 50 brzmią ł"
"agodnie i basowo, natomiast wyższe wartości takie jak 100 czy 120 pozwalają uz"
"yskać pełniejsze i bardziej zgrzytliwe brzmienie. Dzieje się tak ponieważ opcj"
"a `cutoff:` wycina część dźwięku o wyższych częstotliwościach tak jak kosiarka"
" ścina trawę. Opcja `cutoff:` jest jak ustawienie długości - określamy jaka wy"
"sokość trawy ma pozostać po skoszeniu."

#: A.03-coded-beats.md:128
#, fuzzy
msgid "Slicing"
msgstr "Przycinanie"

#: A.03-coded-beats.md:130
msgid ""
"Another great tool to play with is the slicer FX. This will chop (slice) the s"
"ound up. Wrap the `sample` line with the FX code like this:"
msgstr ""
"Kolejnym świetnym narzędziem do zabawy jest efekt slicer. Użycie go spowoduje "
"posiekanie dźwięku (z ang. slice - pokroić). Opakujmy linijkę zawierającą pole"
"cenie `sample` w efekt tak jak na poniższym kodzie:"

#: A.03-coded-beats.md:133
#, no-wrap
msgid ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  with_fx :slicer, phase: 0.25, wave: 0, mix: 1 do\n"
"    sample :loop_amen, beat_stretch: 2, cutoff: 100\n"
"  end\n"
"  sleep 2\n"
"end"
msgstr ""
"live_loop :amen_break do\n"
"  use_bpm 50\n"
"  with_fx :slicer, phase: 0.25, wave: 0, mix: 1 do\n"
"    sample :loop_amen, beat_stretch: 2, cutoff: 100\n"
"  end\n"
"  sleep 2\n"
"end"

#: A.03-coded-beats.md:143
msgid ""
"Notice how the sound bounces up and down a little more. (You can hear the orig"
"inal sound without the FX by changing the `mix:` opt to `0`.) Now, try playing"
" around with the `phase:` opt. This is the rate (in beats) of the slicing effe"
"ct. A smaller value like `0.125` will slice faster and larger values like `0.5"
"` will slice more slowly. Notice that successively halving or doubling the `ph"
"ase:` opts val tends to always sound good. Finally, change the `wave:` opt to "
"one of 0, 1, or 2 and hear how it changes the sound. These are the various wav"
"e shapes. 0 is a saw wave, (hard in, fade out) 1 is a square wave (hard in, ha"
"rd out) and 2 is a triangle wave (fade in, fade out)."
msgstr ""
"Zauważ, jak dźwięki odbijają się po trochu w górę i w dół. (Możesz usłyszeć pi"
"erwotne brzmienie bez efektu zmieniając wartość opcji `mix:` na `0`.) Teraz sp"
"róbuj pobawić się opcją `phase:`. Opowiada ona za tempo (w uderzeniach) z jaki"
"m jest aplikowany efekt cięcia. Mniejsze wartości takie jak `0.125` spowodują,"
" że cięcia będą szybsze, natomiast większe wartości takie jak `0.5` będą powod"
"ować, że cięcia będą wolniejsze. Zauważ, że kolejno zmniejszając o połowę lub "
"podwajając wartość opcji `phase:` zazwyczaj powoduje fajne brzmienia. Na konie"
"c zmień wartość opcji `wave:` na 0, 1 lub 2 a usłyszysz jak zmienia się dźwięk"
". To są różne barwy dźwięku. 0 to fala piłokształtna (mocne wejście i normalne"
" wyjście), 1 to fala kwadratowa (mocne wejście, mocne wyjście), natomiast 2 to"
" fala trójkątna (normalne wejście, normalne wyjście)."

#: A.03-coded-beats.md:157
msgid ""
"Finally, let's go back in time and revisit the early Bristol drum and bass sce"
"ne with this month's example. Don't worry too much about what all this means, "
"just type it in, hit Run, then start live coding it by changing opt numbers an"
"d see where you can take it. Please do share what you create! See you next tim"
"e..."
msgstr ""
"Na koniec cofnijmy się w czasie i zanurzmy się ponownie we wczesnej scenie "
"drum and bass miasta Bristol  wykorzystując do tego celu przykład z "
"bieżącego miesiąca. Nie przejmuj się zbytnio tym, że nie rozumiesz "
"wszystkiego z tego kawałka kodu, po prostu przepisz go lub przekopiuj i "
"naciśnij przycisk Run, następnie zacznij kodować na żywo zmieniając liczby "
"znajdujące się przy opcjach i zobacz dokąd Cię to zaprowadzi. Pamiętaj "
"tylko, żeby podzielić się tym co uda Ci się stworzyć! Do zobaczenia "
"następnym razem..."

#: A.03-coded-beats.md:163
#, no-wrap
msgid ""
"use_bpm 100\n"
"live_loop :amen_break do\n"
"  p = [0.125, 0.25, 0.5].choose\n"
"  with_fx :slicer, phase: p, wave: 0, mix: rrand(0.7, 1) do\n"
"    r = [1, 1, 1, -1].choose\n"
"    sample :loop_amen, beat_stretch: 2, rate: r, amp: 2\n"
"  end\n"
"  sleep 2\n"
"end\n"
"live_loop :bass_drum do\n"
"  sample :bd_haus, cutoff: 70, amp: 1.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :landing do\n"
"  bass_line = (knit :e1, 3, [:c1, :c2].choose, 1)\n"
"  with_fx :slicer, phase: [0.25, 0.5].choose, invert_wave: 1, wave: 0 do\n"
"    s = synth :square, note: bass_line.tick, sustain: 4, cutoff: 60\n"
"    control s, cutoff_slide: 4, cutoff: 120\n"
"  end\n"
"  sleep 4\n"
"end"
msgstr ""
"use_bpm 100\n"
"live_loop :amen_break do\n"
"  p = [0.125, 0.25, 0.5].choose\n"
"  with_fx :slicer, phase: p, wave: 0, mix: rrand(0.7, 1) do\n"
"    r = [1, 1, 1, -1].choose\n"
"    sample :loop_amen, beat_stretch: 2, rate: r, amp: 2\n"
"  end\n"
"  sleep 2\n"
"end\n"
"live_loop :bass_drum do\n"
"  sample :bd_haus, cutoff: 70, amp: 1.5\n"
"  sleep 0.5\n"
"end\n"
"live_loop :landing do\n"
"  bass_line = (knit :e1, 3, [:c1, :c2].choose, 1)\n"
"  with_fx :slicer, phase: [0.25, 0.5].choose, invert_wave: 1, wave: 0 do\n"
"    s = synth :square, note: bass_line.tick, sustain: 4, cutoff: 60\n"
"    control s, cutoff_slide: 4, cutoff: 120\n"
"  end\n"
"  sleep 4\n"
"end"

#: A.04-synth-riffs.md:1
msgid "A.4 Synth Riffs"
msgstr "A.4 Riffy Syntezatorów"

#: A.04-synth-riffs.md:3
msgid "Synth Riffs"
msgstr "Riffy Syntezatorów"

#: A.04-synth-riffs.md:5
msgid ""
"Whether it's the haunting drift of rumbling oscillators or the detuned punch o"
"f saw waves piercing through the mix, the lead synth plays an essential role o"
"n any electronic track. In last month's edition of this tutorial series we cov"
"ered how to code our beats. In this tutorial we'll cover how to code up the th"
"ree core components of a synth riff - the timbre, melody and rhythm."
msgstr ""
"Niezależnie od tego czy mamy do czynienia z niepokojącym dryftem dudniących "
"oscylatorów czy rozstrojonymi uderzeniami dźwięków piły przeszywającej miks, "
"syntezator wiodący odgrywa kluczową rolę w każdym utworze muzyki "
"elektronicznej. W ostatniej edycji tego samouczka z poprzedniego miesiąca "
"omówiliśmy w jaki sposób możemy kodować nasze bity. W bieżącym numerze "
"omówimy w jaki sposób zakodować trzy podstawowe części riffu syntezatorem - "
"tembr (barwa dźwięku), melodię i rytm."

#: A.04-synth-riffs.md:12
msgid ""
"OK, so power up your Raspberry Pi, crack open Sonic Pi v2.6+ and let's make so"
"me noise!"
msgstr ""
"OK, czas żebyś włączył twojego Raspberry Pi, odpal Sonic Pi w wersji 2.6+ i "
"zróbmy jakiś hałas!"

#: A.04-synth-riffs.md:16
msgid "Timbral Possibilities"
msgstr "Możliwości związane z Barwą Dźwięku"

#: A.04-synth-riffs.md:18
msgid ""
"An essential part of any synth riff is changing and playing with the timbre of"
" the sounds. We can control the timbre in Sonic Pi in two ways - choosing diff"
"erent synths for a dramatic change and setting the various synth opts for more"
" subtle modifications. We can also use FX, but that's for another tutorial..."
msgstr ""
"Esencją dowolnego riffu opartego o syntezatory jest zmienianie i granie z "
"różnymi barwami dźwięku. W Sonic Pi możemy kontrolować barwę dźwięku na dwa "
"sposoby - wybierając różne syntezatory dla uzyskania diametralnej zmiany "
"oraz poprzez ustawianie różnych wartości opcji danego syntezatora dla "
"otrzymania bardziej subtelnych zmian. Możemy również używać efektów (FX), "
"ale to temat na osobny artykuł..."

#: A.04-synth-riffs.md:24
msgid "Let's create a simple live loop where we continually change the current synth:"
msgstr ""
"Spróbujmy stworzyć prostą żywą pętlę, w której będziemy zmieniać aktualny "
"syntezator w trakcie gry:"

#: A.04-synth-riffs.md:27
#, no-wrap
msgid ""
"live_loop :timbre do\n"
"  use_synth (ring :tb303, :blade, :prophet, :saw, :beep, :tri).tick\n"
"  play :e2, attack: 0, release: 0.5, cutoff: 100\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :timbre do\n"
"  use_synth (ring :tb303, :blade, :prophet, :saw, :beep, :tri).tick\n"
"  play :e2, attack: 0, release: 0.5, cutoff: 100\n"
"  sleep 0.5\n"
"end"

#: A.04-synth-riffs.md:35
msgid ""
"Take a look at the code. We're simply ticking through a ring of synth names (t"
"his will cycle through each of these in turn repeating the list over and over)"
". We pass this synth name to the `use_synth` fn (function) which will change t"
"he `live_loop`'s current synth. We also play note `:e2` (E at the second octav"
"e), with a release time of 0.5 beats (half a second at the default BPM of 60) "
"and with the `cutoff:` opt set to 100."
msgstr ""
"Spójrzmy na powyższy kawałek kodu. Cykamy tu przez pierścień z nazwami "
"syntezatorów (iterując w kółko po wszystkich syntezatorach z listy). "
"Przekazujemy nazwy kolejno wybieranych syntezatorów do funkcji `use_synth` "
"co powoduje zmianę aktualnego syntezatora przy każdym kolejnym przebiegu "
"żywej pętli. Ponadto gramy nutę `:e2` (dźwięk E w drugiej oktawie) z czasem "
"zanikania amplitudy ustawionym na 0.5 uderzenia (przy domyślnym BPM równym "
"60 jest to pół sekundy) oraz z opcją `cutoff:` ustawioną na 100."

#: A.04-synth-riffs.md:42
msgid ""
"Hear how the different synths have very different sounds even though they're a"
"ll playing the same note. Now experiment and have a play. Change the release t"
"ime to bigger and smaller values. For example, change the `attack:` and `relea"
"se:` opts to see how different fade in/out times have a huge impact on the sou"
"nd. Finally change the `cutoff:` opt to see how different cutoff values also m"
"assively influence the timbre (values between 60 and 130 are good). See how ma"
"ny different sounds you can create by just changing a few values. Once you've "
"mastered that, just head to the Synths tab in the Help system for a full list "
"of all the synths and all the available opts each individual synth supports to"
" see just how much power you have under your coding fingertips."
msgstr ""
"Zauważ, że każdy z syntezatorów ma zupełnie inne brzmienie pomimo, że "
"wszystkie grają tę samą nutę. Spróbuj teraz poeksperymentować i pobaw się. "
"Zmień czas zanikania amplitudy (opcja release) na wyższe i mniejsze "
"wartości. Na przykład, zmień wartości dla opcji `attack:` i `release:` aby "
"zobaczyć jak wielki wpływ na dźwięk mają różne czasy wejścia/wyjścia. Na "
"koniec zmień opcję `cutoff:` aby usłyszeć jak znaczące na barwę dźwięku ma "
"ustawianie różnych wartości odcięcia (najlepsze są wartości pomiędzy 60 a "
"130). Widzisz jak wiele różnych dźwięków możesz stworzyć zmieniając tylko te "
"kilka wartości? Gdy już uda Ci się to opanować udaj się na zakładkę "
"Syntezatory znajdującą się w systemie pomocy. Zobaczysz tam pełną listę "
"syntezatorów oraz wszystkie indywidualne opcje jakie są dostępne dla każdego "
"z nich. Powinno dać Ci to wyobrażenie jak wiele możliwości jest w zasięgu "
"twoich palców."

#: A.04-synth-riffs.md:55
msgid "Timbre"
msgstr "Barwa dźwięku"

#: A.04-synth-riffs.md:57
msgid ""
"Timbre is just a fancy word describing the sound of a sound. If you play the s"
"ame note with different instruments such as a violin, guitar, or piano, the pi"
"tch (how high or low it sounds) would be the same, but the sound quality would"
" be different. That sound quality - the thing which allows you to tell the dif"
"ference between a piano and a guitar is the timbre."
msgstr ""
"Tembr to nic innego jak wyszukane słowo dla opisania jakie jest brzmienie "
"dźwięku. Jeśli zagrasz tę samą nutę z innym instrumentem takim jak  "
"skrzypce, gitara czy fortepian wysokość dźwięku (jak wysoki lub niski jest "
"dźwięk) będzie taka sama, za to barwa będzie inna. Ta właściwość dźwięku - "
"ta cecha, która pozwala ci rozróżnić pianino od gitary to tembr."

#: A.04-synth-riffs.md:65
msgid "Melodic Composition"
msgstr "Kompozycja Malodyczna"

#: A.04-synth-riffs.md:67
msgid ""
"Another important aspect to our lead synth is the choice of notes we want to p"
"lay. If you already have a good idea, then you can simply create a ring with y"
"our notes in and tick through them:"
msgstr ""
"Kolejnym aspektem ważnym dla naszego syntezatora wiodącego jest wybór nut, "
"które chcemy zagrać. Jeśli posiadasz aktualnie fajny pomysł, wtedy możesz po "
"prostu stworzyć pierścień (ring) z twoich nut i cykać przez nie w kółko:"

#: A.04-synth-riffs.md:71
#, no-wrap
msgid ""
"live_loop :riff do\n"
"  use_synth :prophet\n"
"  riff = (ring :e3, :e3, :r, :g3, :r, :r, :r, :a3)\n"
"  play riff.tick, release: 0.5, cutoff: 80\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :riff do\n"
"  use_synth :prophet\n"
"  riff = (ring :e3, :e3, :r, :g3, :r, :r, :r, :a3)\n"
"  play riff.tick, release: 0.5, cutoff: 80\n"
"  sleep 0.25\n"
"end"

#: A.04-synth-riffs.md:80
msgid ""
"Here, we've defined our melody with a ring which includes both notes such as `"
":e3` and rests represented by `:r`. We're then using `.tick` to cycle through "
"each note to give us a repeating riff."
msgstr ""
"Zdefiniowaliśmy tutaj naszą melodię za pomocą pierścienia, który zawiera w "
"sobie zarówno nuty takie jak `:e3` jak i przerwy reprezentowane za pomocą "
"symbolu `:r`. Następnie wykorzystujemy polecenie `.tick` żeby przechodzić "
"kolejno przez każdą z nut co daje nam powtarzalny riff."

#: A.04-synth-riffs.md:84
msgid "Auto Melody"
msgstr "Melodia Automatyczna"

#: A.04-synth-riffs.md:86
msgid ""
"It's not always easy to come up with a nice riff from scratch. Instead it's of"
"ten easier to ask Sonic Pi for a selection of random riffs and to choose the o"
"ne you like the best. To do that we need to combine three things: rings, rando"
"misation and random seeds. Let's look at an example:"
msgstr ""
"Nie zawsze łatwo jest wymyślić ciekawy riff od zera. Zamiast tego, często "
"dużo łatwiej jest poprosić Sonic Pi  aby wybrał dla nas losowy riff i wybrać "
"ten, który spodoba się nam najbardziej. Aby to osiągnąć potrzebujemy "
"połączyć trzy rzeczy: pierścienie, losowość, oraz losowe ziarna. Spójrzmy na "
"poniższy przykład:"

#: A.04-synth-riffs.md:91
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 3\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  play notes.tick, release: 0.25, cutoff: 80\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 3\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  play notes.tick, release: 0.25, cutoff: 80\n"
"  sleep 0.25\n"
"end"

#: A.04-synth-riffs.md:101
msgid ""
"There's a few things going on - let's look at them in turn. First, we specify "
"that we're using random seed 3. What does this mean? Well, the useful thing is"
" that when we set the seed, we can predict what the next random value is going"
" to be - it's the same as it was last time we set the seed to 3! Another usefu"
"l thing to know is that shuffling a ring of notes works in the same way. In th"
"e example above we're essentially asking for the 'third shuffle' in the standa"
"rd list of shuffles - which is also the same every time as we're always settin"
"g the random seed to the same value right before the shuffle. Finally we're ju"
"st ticking through our shuffled notes to play the riff."
msgstr ""
"Dzieje się tutaj kilka rzeczy - przyjrzyjmy się im po kolei. Na samym "
"początku określamy, że używamy 3-go zestawu losowych ziaren. Co to znaczy? "
"Otóż, dość przydatną rzeczą jest możliwość ustawienia określonej wartości "
"dla tych ziaren, dzięki czemu możemy przewidzieć jaka będzie kolejna losowa "
"wartość. Przy każdym obiegu żywej pętli będzie to taki sam zestaw wartości "
"jaki ustawiliśmy na początku - zestaw nr 3! Kolejną przydatną rzeczą, którą "
"warto wiedzieć jest to, że tasowanie pierścienia z nutami działa w taki sam "
"sposób. W powyższym przykładzie, prosimy w gruncie rzeczy o 'trzecie "
"rozdanie' ze standardowej listy tasowań - które za każdym jest tym samym "
"rozdaniem, gdyż za każdym razem tuż przed tasowaniem ustawiamy losowe ziarno "
"na tę samą. Koniec końców tykamy kolejno przez nasze potasowane nuty aby "
"zagrać riff."

#: A.04-synth-riffs.md:112
msgid ""
"Now, here's where the fun starts. If we change the random seed value to anothe"
"r number, say 3000, we get an entirely different shuffling of the notes. So no"
"w it's extremely easy to explore new melodies. Simply choose the list of notes"
" we want to shuffle (scales are a great starting point) and then choose the se"
"ed we want to shuffle with. If we don't like the melody, just change one of th"
"ose two things and try again. Repeat until you like what you hear!"
msgstr ""
"A teraz moment, w którym zaczyna się zabawa. Jeśli zmienimy wartość losowego "
"ziarna na inną liczbę, powiedzmy 3000, otrzymamy zupełnie inne rozdanie nut. "
"Dzięki temu możemy teraz bardzo łatwo odkrywać nowe melodie. Po prostu "
"wybieramy listę nut, które chcemy przetasować (gamy są tutaj dobrym punktem "
"wyjścia), a następnie wybieramy wartość ziarna wg jakiej chcemy tasować. "
"Jeśli dana melodia nam się nie spodoba, wystarczy zmienić jedną z tych dwóch "
"rzeczy i spróbować ponownie. Teraz wystarczy, że będziesz powtarzał te kroki "
"do momentu aż usłyszysz coś co Ci się spodoba!"

#: A.04-synth-riffs.md:121
msgid "Pseudo Randomisation"
msgstr "Pseudo Losowość"

#: A.04-synth-riffs.md:123
msgid ""
"Sonic Pi's randomisation is not actually random it's what's called pseudo rand"
"om. Imagine if you were to roll a dice 100 times and write down the result of "
"each roll onto a piece of paper. Sonic Pi has the equivalent of this list of r"
"esults which it uses when you ask for a random value. Instead of rolling an ac"
"tual dice, it just picks the next value from the list. Setting the random seed"
" is just jumping to a specific point in that list."
msgstr ""

#: A.04-synth-riffs.md:131
msgid "Finding your Rhythm"
msgstr ""

#: A.04-synth-riffs.md:133
msgid ""
"Another important aspect to our riff is the rhythm - when to play a note and w"
"hen not to. As we saw above we can use `:r` in our rings to insert rests. Anot"
"her very powerful way is to use spreads which we'll cover in a future tutorial"
". Today we'll use randomisation to help us find our rhythm. Instead of playing"
" every note we can use a conditional to play a note with a given probability. "
"Let's take a look:"
msgstr ""

#: A.04-synth-riffs.md:140
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 30\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  16.times do\n"
"    play notes.tick, release: 0.2, cutoff: 90 if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_synth :dsaw\n"
"  use_random_seed 30\n"
"  notes = (scale :e3, :minor_pentatonic).shuffle\n"
"  16.times do\n"
"    play notes.tick, release: 0.2, cutoff: 90 if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.04-synth-riffs.md:152
msgid ""
"A really useful fn to know is `one_in` which will give us a `true` or `false` "
"value with the specified probability. Here, we're using a value of 2 so on ave"
"rage one time every two calls to `one_in` it will return `true`. In other word"
"s, 50% of the time it will return `true`. Using higher values will make it ret"
"urn `false` more often introducing more space into the riff."
msgstr ""

#: A.04-synth-riffs.md:159
msgid ""
"Notice that we've added some iteration in here with `16.times`. This is becaus"
"e we only want to reset our random seed value every 16 notes so our rhythm rep"
"eats every 16 times. This doesn't affect the shuffling as that is still done i"
"mmediately after the seed is set. We can use the iteration size to alter the l"
"ength of the riff. Try changing the 16 to 8 or even 4 or 3 and see how it affe"
"cts the rhythm of the riff."
msgstr ""

#: A.04-synth-riffs.md:168
msgid ""
"OK, so let's combine everything we've learned together into one final example."
" See you next time!"
msgstr ""

#: A.04-synth-riffs.md:171
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  #  uncomment to bring in:\n"
"  #  synth :blade, note: :e4, release: 4, cutoff: 100, amp: 1.5\n"
"  use_synth :dsaw\n"
"  use_random_seed 43\n"
"  notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle.take(8)\n"
"  8.times do\n"
"    play notes.tick, release: rand(0.5), cutoff: rrand(60, 130) if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  use_random_seed 500\n"
"  16.times do\n"
"    sample :bd_haus, rate: 2, cutoff: 110 if rand < 0.35\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :bd do\n"
"  sample :bd_haus, cutoff: 100, amp: 3\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  #  uncomment to bring in:\n"
"  #  synth :blade, note: :e4, release: 4, cutoff: 100, amp: 1.5\n"
"  use_synth :dsaw\n"
"  use_random_seed 43\n"
"  notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle.take(8)\n"
"  8.times do\n"
"    play notes.tick, release: rand(0.5), cutoff: rrand(60, 130) if one_in(2)\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  use_random_seed 500\n"
"  16.times do\n"
"    sample :bd_haus, rate: 2, cutoff: 110 if rand < 0.35\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
" \n"
"live_loop :bd do\n"
"  sample :bd_haus, cutoff: 100, amp: 3\n"
"  sleep 0.5\n"
"end"

#: A.05-acid-bass.md:1
msgid "A.5 Acid Bass"
msgstr ""

#: A.05-acid-bass.md:3
msgid "Acid Bass"
msgstr ""

#: A.05-acid-bass.md:5
msgid ""
"It's impossible to look through the history of electronic dance music without "
"seeing the enormous impact of the tiny Roland TB-303 synthesiser. It's the sec"
"ret sauce behind the original acid bass sound. Those classic squealing and squ"
"elching TB-303 bass riffs can be heard from the early Chicago House scene thro"
"ugh to more recent electronic artists such as Plastikman, Squarepusher and Aph"
"ex Twin."
msgstr ""

#: A.05-acid-bass.md:12
msgid ""
"Interestingly, Roland never intended for the TB-303 to be used in dance music."
" It was originally created as a practice aid for guitarists. They imagined tha"
"t people would program them to play bass lines to jam along to. Unfortunately "
"there were a number of problems: they were a little fiddly to program, didn't "
"sound particularly good as a bass-guitar replacement and were pretty expensive"
" to buy. Deciding to cut their losses, Roland stopped making them after 10,000"
" units were sold and after a number of years sitting on guitarist's shelves, t"
"hey soon could be found in the windows of second hand shops. These lonely disc"
"arded TB-303s were waiting to be discovered by a new generation of experimente"
"rs who started using them in ways that Roland didn't imagine to create new cra"
"zy sounds. Acid House was born."
msgstr ""

#: A.05-acid-bass.md:25
msgid ""
"Although getting your hands on an original TB-303 is not so easy you will be p"
"leased to know that you can turn your Raspberry Pi into one using the power of"
" Sonic Pi. Behold, fire up Sonic Pi and throw this code into an empty buffer a"
"nd hit Run:"
msgstr ""

#: A.05-acid-bass.md:30
#, no-wrap
msgid ""
"use_synth :tb303\n"
"play :e1"
msgstr ""
"use_synth :tb303\n"
"play :e1"

#: A.05-acid-bass.md:35
msgid "Instant acid bass! Let's play around..."
msgstr ""

#: A.05-acid-bass.md:37
msgid "Squelch that Bass"
msgstr ""

#: A.05-acid-bass.md:39
msgid ""
"First, let's build a live arpeggiator to make things fun. In the last tutorial"
" we looked at how riffs can just be a ring of notes that we tick through one a"
"fter another, repeating when we get to the end. Let's create a live loop that "
"does exactly that:"
msgstr ""

#: A.05-acid-bass.md:44
#, no-wrap
msgid ""
"use_synth :tb303\n"
"live_loop :squelch do\n"
"  n = (ring :e1, :e2, :e3).tick\n"
"  play n, release: 0.125, cutoff: 100, res: 0.8, wave: 0\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_synth :tb303\n"
"live_loop :squelch do\n"
"  n = (ring :e1, :e2, :e3).tick\n"
"  play n, release: 0.125, cutoff: 100, res: 0.8, wave: 0\n"
"  sleep 0.125\n"
"end"

#: A.05-acid-bass.md:53
msgid "Take a look at each line."
msgstr ""

#: A.05-acid-bass.md:55
msgid ""
"On the first line we set the default synth to be `tb303` with the `use_synth` "
"fn."
msgstr ""

#: A.05-acid-bass.md:58
msgid ""
"On line two we create a live loop called `:squelch` which will just loop round"
" and round."
msgstr ""

#: A.05-acid-bass.md:61
msgid ""
"Line three is where we create our riff - a ring of notes (E in octaves 1, 2, a"
"nd 3) which we simply tick through with `.tick`. We define `n` to represent th"
"e current note in the riff. The equals sign just means to assign the value on "
"the right to the name on the left. This will be different every time round the"
" loop. The first time round, `n` will be set to `:e1`. The second time round i"
"t will be `:e2`, followed by `:e3`, and then back to `:e1`, cycling round fore"
"ver."
msgstr ""

#: A.05-acid-bass.md:70
msgid ""
"Line four is where we actually trigger our `:tb303` synth. We're passing a few"
" interesting opts here: `release:`, `cutoff:`, `res:` and `wave:` which we'll "
"discuss below."
msgstr ""

#: A.05-acid-bass.md:74
msgid ""
"Line five is our `sleep` - we're asking the live loop to loop round every `0.1"
"25`s or 8 times a second at the default BPM of 60."
msgstr ""

#: A.05-acid-bass.md:77
msgid ""
"Line six is the `end` to the live loop. This just tells Sonic Pi where the end"
" of the live loop is."
msgstr ""

#: A.05-acid-bass.md:80
msgid ""
"Whilst you're still figuring out what's going on, type in the code above and h"
"it the Run button. You should hear the `:tb303` kick into action. Now, this is"
" where the action is: let's start live coding."
msgstr ""

#: A.05-acid-bass.md:84
msgid ""
"Whilst the loop is still live, change the `cutoff:` opt to `110`. Now hit the "
"Run button again. You should hear the sound become a little harsher and more s"
"quelchy. Dial in `120` and hit run. Now `130`. Listen how higher cutoff values"
" make it sound more piercing and intense. Finally, drop it down to `80` when y"
"ou feel like a rest. Then repeat as many times as you want. Don't worry, I'll "
"still be here..."
msgstr ""

#: A.05-acid-bass.md:91
msgid ""
"Another opt worth playing with is `res:`. This controls the level of resonance"
" of the filter. A high resonance is characteristic of acid bass sounds. We cur"
"rently have our `res:` set to `0.8`. Try cranking it up to `0.85`, then `0.9`,"
" and finally `0.95`. You might find that a cutoff such as `110` or higher will"
" make the differences easier to hear. Finally go crazy and dial in `0.999` for"
" some insane sounds. At a `res` this high, you're hearing the cutoff filter re"
"sonate so much it starts to make sounds of its own!"
msgstr ""

#: A.05-acid-bass.md:100
msgid ""
"Finally, for a big impact on the timbre try changing the `wave:` opt to `1`. T"
"his is the choice of source oscillator. The default is `0` which is a sawtooth"
" wave. `1` is a pulse wave and `2` is a triangle wave."
msgstr ""

#: A.05-acid-bass.md:104
msgid ""
"Of course, try different riffs by changing the notes in the ring or even picki"
"ng notes from scales or chords. Have fun with your first acid bass synth."
msgstr ""

#: A.05-acid-bass.md:108
msgid "Deconstructing the TB-303"
msgstr ""

#: A.05-acid-bass.md:110
msgid ""
"The design of the original TB-303 is actually pretty simple. As you can see fr"
"om the following diagram there's only 4 core parts."
msgstr ""

#: A.05-acid-bass.md:113
msgid "![TB-303 Design](../images/tutorial/articles/A.05-acid-bass/tb303-design.png)"
msgstr ""

#: A.05-acid-bass.md:115
msgid ""
"First is the oscillator wave - the raw ingredients of the sound. In this case "
"we have a square wave. Next there's the oscillator's amplitude envelope which "
"controls the amp of the square wave through time. These are accessed in Sonic "
"Pi by the `attack:`, `decay:`, `sustain:` and `release:` opts along with their"
" level counterparts. For more information read Section 2.4 'Duration with Enve"
"lopes' in the built-in tutorial. We then pass our enveloped square wave throug"
"h a resonant low pass filter. This chops off the higher frequencies as well as"
" having that nice resonance effect. Now this is where the fun starts. The cuto"
"ff value of this filter is also controlled by its own envelope! This means we "
"have amazing control over the timbre of the sound by playing with both of thes"
"e envelopes. Let's take a look:"
msgstr ""

#: A.05-acid-bass.md:128
#, no-wrap
msgid ""
"use_synth :tb303\n"
"with_fx :reverb, room: 1 do\n"
"  live_loop :space_scanner do\n"
"    play :e1, cutoff: 100, release: 7, attack: 1, cutoff_attack: 4, cutoff_rel"
"ease: 4\n"
"    sleep 8\n"
"  end\n"
"end"
msgstr ""
"use_synth :tb303\n"
"with_fx :reverb, room: 1 do\n"
"  live_loop :space_scanner do\n"
"    play :e1, cutoff: 100, release: 7, attack: 1, cutoff_attack: 4, cutoff_rel"
"ease: 4\n"
"    sleep 8\n"
"  end\n"
"end"

#: A.05-acid-bass.md:138
msgid ""
"For each standard envelope opt, there's a `cutoff_` equivalent opt in the `:tb"
"303` synth. So, to change the cutoff attack time we can use the `cutoff_attack"
":` opt. Copy the code above into an empty buffer and hit Run. You'll hear a cr"
"azy sound warble in and out. Now start to play. Try changing the `cutoff_attac"
"k:` time to `1` and then `0.5`. Now try `8`."
msgstr ""

#: A.05-acid-bass.md:144
msgid ""
"Notice that I've passed everything through a `:reverb` FX for extra atmosphere"
" - try other FX to see what works!"
msgstr ""

#: A.05-acid-bass.md:149
msgid ""
"Finally, here's a piece I composed using the ideas in this tutorial. Copy it i"
"nto an empty buffer, listen for a while and then start live coding your own ch"
"anges. See what crazy sounds you can make with it! See you next time..."
msgstr ""

#: A.05-acid-bass.md:154
#, no-wrap
msgid ""
"use_synth :tb303\n"
"use_debug false\n"
" \n"
"with_fx :reverb, room: 0.8 do\n"
"  live_loop :space_scanner do\n"
"    with_fx :slicer, phase: 0.25, amp: 1.5 do\n"
"      co = (line 70, 130, steps: 8).tick\n"
"      play :e1, cutoff: co, release: 7, attack: 1, cutoff_attack: 4, cutoff_re"
"lease: 4\n"
"      sleep 8\n"
"    end\n"
"  end\n"
" \n"
"  live_loop :squelch do\n"
"    use_random_seed 3000\n"
"    16.times do\n"
"      n = (ring :e1, :e2, :e3).tick\n"
"      play n, release: 0.125, cutoff: rrand(70, 130), res: 0.9, wave: 1, amp: "
"0.8\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"use_synth :tb303\n"
"use_debug false\n"
" \n"
"with_fx :reverb, room: 0.8 do\n"
"  live_loop :space_scanner do\n"
"    with_fx :slicer, phase: 0.25, amp: 1.5 do\n"
"      co = (line 70, 130, steps: 8).tick\n"
"      play :e1, cutoff: co, release: 7, attack: 1, cutoff_attack: 4, cutoff_re"
"lease: 4\n"
"      sleep 8\n"
"    end\n"
"  end\n"
" \n"
"  live_loop :squelch do\n"
"    use_random_seed 3000\n"
"    16.times do\n"
"      n = (ring :e1, :e2, :e3).tick\n"
"      play n, release: 0.125, cutoff: rrand(70, 130), res: 0.9, wave: 1, amp: "
"0.8\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.06-minecraft.md:1
msgid "A.6 Musical Minecraft"
msgstr ""

#: A.06-minecraft.md:3
msgid "Musical Minecraft"
msgstr ""

#: A.06-minecraft.md:7
msgid ""
"Hello and welcome back! In the previous tutorials we've focussed purely on the"
" music possibilities of Sonic Pi - (turning your Raspberry Pi into a performan"
"ce ready musical instrument). So far we've learned how to:"
msgstr ""

#: A.06-minecraft.md:11
msgid "Live Code - changing the sounds on-the-fly,"
msgstr ""

#: A.06-minecraft.md:12
msgid "Code some huge beats,"
msgstr ""

#: A.06-minecraft.md:13
msgid "Generate powerful synth leads,"
msgstr ""

#: A.06-minecraft.md:14
msgid "Re-create the famous TB-303 acid-bass sound."
msgstr ""

#: A.06-minecraft.md:16
msgid ""
"There's so much more to show you (which we will explore in future editions). H"
"owever, this month, let's look at something Sonic Pi can do that you probably "
"didn't realise: control Minecraft."
msgstr ""

#: A.06-minecraft.md:20
msgid "Hello Minecraft World"
msgstr ""

#: A.06-minecraft.md:22
msgid ""
"OK, let's get started. Boot up your Raspberry Pi, fire up Minecraft Pi and cre"
"ate a new world. Now start up Sonic Pi and re-size and move your windows so yo"
"u can see both Sonic Pi and Minecraft Pi at the same time."
msgstr ""

#: A.06-minecraft.md:26
msgid "In a fresh buffer type the following:"
msgstr ""

#: A.06-minecraft.md:28
#, no-wrap
msgid "mc_message \"Hello Minecraft from Sonic Pi!\""
msgstr "mc_message \"Hello Minecraft from Sonic Pi!\""

#: A.06-minecraft.md:32
msgid ""
"Now, hit Run. Boom! Your message appeared in Minecraft! How easy was that? Now"
", stop reading this for a moment and play about with your own messages. Have f"
"un!"
msgstr ""

#: A.06-minecraft.md:36
msgid ""
"![Screen 0](../images/tutorial/articles/A.06-minecraft/Musical-Minecraft-0-sma"
"ll.png)"
msgstr ""

#: A.06-minecraft.md:38
msgid "Sonic Teleporter"
msgstr ""

#: A.06-minecraft.md:40
msgid ""
"Now let's do some exploring. The standard option is to reach for the mouse and"
" keyboard and start walking around. That works, but it's pretty slow and borin"
"g. It would be far better if we had some sort of teleport machine. Well, thank"
"s to Sonic Pi, we have one. Try this:"
msgstr ""

#: A.06-minecraft.md:45
#, no-wrap
msgid "mc_teleport 80, 40, 100"
msgstr "mc_teleport 80, 40, 100"

#: A.06-minecraft.md:49
msgid ""
"Crikey! That was a long way up. If you weren't in flying-mode then you would h"
"ave fallen back down all the way to the ground. If you double-tap space to ent"
"er flying-mode and teleport again, you'll stay hovering at the location you za"
"p to."
msgstr ""

#: A.06-minecraft.md:54
msgid ""
"Now, what do those numbers mean? We have three numbers which describe the coor"
"dinates of where in the world we want to go. We give each number a name - x, y"
" and z:"
msgstr ""

#: A.06-minecraft.md:58
msgid "x - how far left and right (80 in our example)"
msgstr ""

#: A.06-minecraft.md:59
msgid "y - how high we want to be (40 in our example)"
msgstr ""

#: A.06-minecraft.md:60
msgid "z - how far forward and back (100 in our example)"
msgstr ""

#: A.06-minecraft.md:62
msgid ""
"By choosing different values for x, y and z we can teleport *anywhere* in our "
"world. Try it! Choose different numbers and see where you can end up. If the s"
"creen goes black it's because you've teleported yourself under the ground or i"
"nto a mountain. Just choose a higher y value to get back out above land. Keep "
"on exploring until you find somewhere you like..."
msgstr ""

#: A.06-minecraft.md:69
msgid ""
"Using the ideas so far, let's build a Sonic Teleporter which makes a fun telep"
"ort sound whilst it whizzes us across the Minecraft world:"
msgstr ""

#: A.06-minecraft.md:72
#, no-wrap
msgid ""
"mc_message \"Preparing to teleport....\"\n"
"sample :ambi_lunar_land, rate: -1\n"
"sleep 1\n"
"mc_message \"3\"\n"
"sleep 1\n"
"mc_message \"2\"\n"
"sleep 1\n"
"mc_message \"1\"\n"
"sleep 1\n"
"mc_teleport 90, 20, 10\n"
"mc_message \"Whoooosh!\""
msgstr ""
"mc_message \"Preparing to teleport....\"\n"
"sample :ambi_lunar_land, rate: -1\n"
"sleep 1\n"
"mc_message \"3\"\n"
"sleep 1\n"
"mc_message \"2\"\n"
"sleep 1\n"
"mc_message \"1\"\n"
"sleep 1\n"
"mc_teleport 90, 20, 10\n"
"mc_message \"Whoooosh!\""

#: A.06-minecraft.md:86
msgid ""
"![Screen 1](../images/tutorial/articles/A.06-minecraft/Musical-Minecraft-1-sma"
"ll.png)"
msgstr ""

#: A.06-minecraft.md:88
msgid "Magic Blocks"
msgstr ""

#: A.06-minecraft.md:90
msgid ""
"Now you've found a nice spot, let's start building. You could do what you're u"
"sed to and start clicking the mouse furiously to place blocks under the cursor"
". Or you could use the magic of Sonic Pi. Try this:"
msgstr ""

#: A.06-minecraft.md:94
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"mc_set_block :melon, x, y + 5, z"
msgstr ""
"x, y, z = mc_location\n"
"mc_set_block :melon, x, y + 5, z"

#: A.06-minecraft.md:99
msgid ""
"Now look up! There's a melon in the sky! Take a moment to look at the code. Wh"
"at did we do? On line one we grabbed the current location of Steve as the vari"
"ables x, y and z. These correspond to our coordinates described above. We use "
"these coordinates in the fn `mc_set_block` which will place the block of your "
"choosing at the specified coordinates. In order to make something higher up in"
" the sky we just need to increase the y value which is why we add 5 to it. Let"
"'s make a long trail of them:"
msgstr ""

#: A.06-minecraft.md:107
#, no-wrap
msgid ""
"live_loop :melon_trail do\n"
"  x, y, z = mc_location\n"
"  mc_set_block :melon, x, y-1, z\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :melon_trail do\n"
"  x, y, z = mc_location\n"
"  mc_set_block :melon, x, y-1, z\n"
"  sleep 0.125\n"
"end"

#: A.06-minecraft.md:115
msgid ""
"Now, jump over to Minecraft, make sure you're in flying-mode (double tap space"
" if not) and fly all around the world. Look behind you to see a pretty trail o"
"f melon blocks! See what kind of twisty patterns you can make in the sky."
msgstr ""

#: A.06-minecraft.md:120
msgid "Live Coding Minecraft"
msgstr ""

#: A.06-minecraft.md:122
msgid ""
"Those of you that have been following this tutorial over the last few months w"
"ill probably have your minds blown at this point. The trail of melons is prett"
"y cool, but the most exciting part of the previous example is that you can use"
" `live_loop` with Minecraft! For those that don't know, `live_loop` is Sonic P"
"i's special magic ability that no other programming language has. It lets you "
"run multiple loops at the same time and allows you to change them whilst they "
"run. They are incredibly powerful and amazing fun. I use `live_loop`s to perfo"
"rm music in nightclubs with Sonic Pi - DJs use discs and I use `live_loop`s :-"
") However, today we're going to live code both music and Minecraft."
msgstr ""

#: A.06-minecraft.md:133
msgid ""
"Let's get started. Run the code above and start making your melon trail again."
" Now, without stopping the code, just simply change `:melon` to `:brick` and h"
"it run. Hey presto, you're now making a brick trail. How simple was that! Fanc"
"y some music to go with it? Easy. Try this:"
msgstr ""

#: A.06-minecraft.md:138
#, no-wrap
msgid ""
"live_loop :bass_trail do\n"
"  tick\n"
"  x, y, z = mc_location\n"
"  b = (ring :melon, :brick, :glass).look\n"
"  mc_set_block b, x, y -1, z\n"
"  note = (ring :e1, :e2, :e3).look\n"
"  use_synth :tb303\n"
"  play note, release: 0.1, cutoff: 70\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :bass_trail do\n"
"  tick\n"
"  x, y, z = mc_location\n"
"  b = (ring :melon, :brick, :glass).look\n"
"  mc_set_block b, x, y -1, z\n"
"  note = (ring :e1, :e2, :e3).look\n"
"  use_synth :tb303\n"
"  play note, release: 0.1, cutoff: 70\n"
"  sleep 0.125\n"
"end"

#: A.06-minecraft.md:151
msgid ""
"Now, whilst that's playing start changing the code. Change the block types - t"
"ry `:water`, `:grass` or your favourite block type. Also, try changing the cut"
"off value from `70` to `80` and then up to `100`. Isn't this fun?"
msgstr ""

#: A.06-minecraft.md:158
msgid ""
"![Screen 2](../images/tutorial/articles/A.06-minecraft/Musical-Minecraft-2-sma"
"ll.png)"
msgstr ""

#: A.06-minecraft.md:160
msgid ""
"Let's combine everything we've seen so far with a little extra magic. Let's co"
"mbine our teleportation ability with block placing and music to make a Minecra"
"ft Music Video. Don't worry if you don't understand it all, just type it in an"
"d have a play by changing some of the values whilst it's running live. Have fu"
"n and see you next time..."
msgstr ""

#: A.06-minecraft.md:166
#, no-wrap
msgid ""
"live_loop :note_blocks do\n"
"  mc_message \"This is Sonic Minecraft\"\n"
"  with_fx :reverb do\n"
"    with_fx :echo, phase: 0.125, reps: 32 do\n"
"      tick\n"
"      x = (range 30, 90, step: 0.1).look\n"
"      y = 20\n"
"      z = -10\n"
"      mc_teleport x, y, z\n"
"      ns = (scale :e3, :minor_pentatonic)\n"
"      n = ns.shuffle.choose\n"
"      bs = (knit :glass, 3, :sand, 1)\n"
"      b = bs.look\n"
"      synth :beep, note: n, release: 0.1\n"
"      mc_set_block b, x+20, n-60+y, z+10\n"
"      mc_set_block b, x+20, n-60+y, z-10\n"
"      sleep 0.25\n"
"    end\n"
"  end\n"
"end\n"
"live_loop :beats do\n"
"  sample :bd_haus, cutoff: 100\n"
"  sleep 0.5\n"
"end"
msgstr ""
"live_loop :note_blocks do\n"
"  mc_message \"This is Sonic Minecraft\"\n"
"  with_fx :reverb do\n"
"    with_fx :echo, phase: 0.125, reps: 32 do\n"
"      tick\n"
"      x = (range 30, 90, step: 0.1).look\n"
"      y = 20\n"
"      z = -10\n"
"      mc_teleport x, y, z\n"
"      ns = (scale :e3, :minor_pentatonic)\n"
"      n = ns.shuffle.choose\n"
"      bs = (knit :glass, 3, :sand, 1)\n"
"      b = bs.look\n"
"      synth :beep, note: n, release: 0.1\n"
"      mc_set_block b, x+20, n-60+y, z+10\n"
"      mc_set_block b, x+20, n-60+y, z-10\n"
"      sleep 0.25\n"
"    end\n"
"  end\n"
"end\n"
"live_loop :beats do\n"
"  sample :bd_haus, cutoff: 100\n"
"  sleep 0.5\n"
"end"

#: A.07-bizet.md:1
msgid "A.7 Bizet Beats"
msgstr ""

#: A.07-bizet.md:3
msgid "Bizet Beats"
msgstr ""

#: A.07-bizet.md:5
msgid ""
"After our brief excursion to the fantastic world of coding Minecraft with Soni"
"c Pi last month, let's get musical again. Today we're going to bring a classic"
"al operatic dance piece straight into the 21st century using the awesome power"
" of code."
msgstr ""

#: A.07-bizet.md:10
msgid "Outrageous and Disruptive"
msgstr ""

#: A.07-bizet.md:12
msgid ""
"Let's jump into a time machine back to the year 1875. A composer called Bizet "
"had just finished his latest opera Carmen. Unfortunately like many exciting an"
"d disruptive new pieces of music people initially didn't like it at all becaus"
"e it was too outrageous and different. Sadly Bizet died ten years before the o"
"pera gained huge international success and became one of the most famous and f"
"requently performed operas of all time. In sympathy with this tragedy let's ta"
"ke one of the main themes from Carmen and convert it to a modern format of mus"
"ic that is also too outrageous and different for most people in our time - liv"
"e coded music!"
msgstr ""

#: A.07-bizet.md:23
msgid "Decoding the Habanera"
msgstr ""

#: A.07-bizet.md:25
msgid ""
"Trying to live code the whole opera would be a bit of a challenge for this tut"
"orial, so let's focus on one of the most famous parts - the bass line to the H"
"abanera:"
msgstr ""

#: A.07-bizet.md:29
msgid "![Habanera Riff](../images/tutorial/articles/A.07-bizet/habanera.png)"
msgstr ""

#: A.07-bizet.md:31
msgid ""
"This may look extremely unreadable to you if you haven't yet studied music not"
"ation. However, as programmers we see music notation as just another form of c"
"ode - only it represents instructions to a musician instead of a computer. We "
"therefore need to figure out a way of decoding it."
msgstr ""

#: A.07-bizet.md:36
msgid "Notes"
msgstr ""

#: A.07-bizet.md:38
msgid ""
"The notes are arranged from left to right like the words in this magazine but "
"also have different heights. *The height on the score represents the pitch of "
"the note.* The higher the note on the score, the higher the pitch of the note."
msgstr ""

#: A.07-bizet.md:43
msgid ""
"In Sonic Pi we already know how to change the pitch of a note - we either use "
"high or low numbers such as `play 75` and `play 80` or we use the note names: "
"`play :E` and `play :F`. Luckily each of the vertical positions of the musical"
" score represents a specific note name. Take a look at this handy look up tabl"
"e:"
msgstr ""

#: A.07-bizet.md:49
msgid "![Notes](../images/tutorial/articles/A.07-bizet/notes.png)"
msgstr ""

#: A.07-bizet.md:51
msgid "Rests"
msgstr ""

#: A.07-bizet.md:53
msgid ""
"Music scores are an extremely rich and expressive kind of code capable of comm"
"unicating many things. It therefore shouldn't come as much of a surprise that "
"musical scores can not only tell you what notes to play but also when *not* to"
" play notes. In programming this is pretty much equivalent to the idea of `nil"
"` or `null` - the absence of a value. In other words not playing a note is lik"
"e the absence of a note."
msgstr ""

#: A.07-bizet.md:60
msgid ""
"If you look closely at the score you'll see that it's actually a combination o"
"f black dots with lines which represent notes to play and squiggly things whic"
"h represent the rests. Luckily Sonic Pi has a very handy representation for a "
"rest: `:r`, so if we run: `play :r` it actually plays silence! We could also w"
"rite `play :rest`, `play nil` or `play false` which are all equivalent ways of"
" representing rests."
msgstr ""

#: A.07-bizet.md:67
msgid "Rhythm"
msgstr ""

#: A.07-bizet.md:69
msgid ""
"Finally, there's one last thing to learn how to decode in the notation - the t"
"imings of the notes. In the original notation you'll see that the notes are co"
"nnected with thick lines called beams. The second note has two of these beams "
"which means it lasts for a 16th of a beat. The other notes have a single beam "
"which means they last for an 8th of a beat. The rest has two squiggly beams wh"
"ich means it also represents a 16th of the beat."
msgstr ""

#: A.07-bizet.md:77
msgid ""
"When we attempt to decode and explore new things a very handy trick is to make"
" everything as similar as possible to try and see any relationships or pattern"
"s. For example, when we re-write our notation purely in 16ths you can see that"
" our notation just turns into a nice sequence of notes and rests."
msgstr ""

#: A.07-bizet.md:83
msgid "![Habanera Riff 2](../images/tutorial/articles/A.07-bizet/habanera2.png)"
msgstr ""

#: A.07-bizet.md:85
msgid "Re-coding the Habanera"
msgstr ""

#: A.07-bizet.md:87
msgid ""
"We're now in a position to start translating this bass line to Sonic Pi. Let's"
" encode these notes and rests in a ring:"
msgstr ""

#: A.07-bizet.md:90
#, no-wrap
msgid "(ring :d, :r, :r, :a, :f5, :r, :a, :r)"
msgstr "(ring :d, :r, :r, :a, :f5, :r, :a, :r)"

#: A.07-bizet.md:94
msgid "Let's see what this sounds like. Throw it in a live loop and tick through it:"
msgstr ""

#: A.07-bizet.md:97
#, no-wrap
msgid ""
"live_loop :habanera do\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end"
msgstr ""
"live_loop :habanera do\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end"

#: A.07-bizet.md:104
msgid ""
"Fabulous, that instantly recognisable riff springs to life through your speake"
"rs. It took a lot of effort to get here, but it was worth it - high five!"
msgstr ""

#: A.07-bizet.md:108
msgid "Moody Synths"
msgstr ""

#: A.07-bizet.md:110
msgid ""
"Now we have the bass line, let's re-create some of the ambience of the operati"
"c scene. One synth to try out is `:blade` which is a moody 80s style synth lea"
"d. Let's try it with the starting note `:d` passed through a slicer and reverb"
":"
msgstr ""

#: A.07-bizet.md:115
#, no-wrap
msgid ""
"live_loop :habanera do\n"
"  use_synth :fm\n"
"  use_transpose -12\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end\n"
"with_fx :reverb do\n"
"  live_loop :space_light do\n"
"    with_fx :slicer, phase: 0.25 do\n"
"      synth :blade, note: :d, release: 8, cutoff: 100, amp: 2\n"
"    end\n"
"    sleep 8\n"
"  end\n"
"end"
msgstr ""
"live_loop :habanera do\n"
"  use_synth :fm\n"
"  use_transpose -12\n"
"  play (ring :d, :r, :r, :a, :f5, :r, :a, :r).tick\n"
"  sleep 0.25\n"
"end\n"
"with_fx :reverb do\n"
"  live_loop :space_light do\n"
"    with_fx :slicer, phase: 0.25 do\n"
"      synth :blade, note: :d, release: 8, cutoff: 100, amp: 2\n"
"    end\n"
"    sleep 8\n"
"  end\n"
"end"

#: A.07-bizet.md:133
msgid ""
"Now, try the other notes in the bass line: `:a` and `:f5`. Remember, you don't"
" need to hit stop, just modify the code whilst the music is playing and hit ru"
"n again. Also, try different values for the slicer's `phase:` opt such as `0.5"
"`, `0.75` and `1`."
msgstr ""

#: A.07-bizet.md:140
msgid ""
"Finally, let's combine all the ideas so far into a new remix of the Habanera. "
"You might notice that I've included another part of the bass line as a comment"
". Once you've typed it all into a fresh buffer hit Run to hear the composition"
". Now, without hitting stop, *uncomment* the second line by removing the `#` a"
"nd hit run again - how marvellous is that! Now, start mashing it around yourse"
"lf and have fun."
msgstr ""

#: A.07-bizet.md:147
#, no-wrap
msgid ""
"use_debug false\n"
"bizet_bass = (ring :d, :r, :r, :a, :f5, :r, :a, :r)\n"
"#bizet_bass = (ring :d, :r, :r, :Bb, :g5, :r, :Bb, :r)\n"
" \n"
"with_fx :reverb, room: 1, mix: 0.3 do\n"
"  live_loop :bizet do\n"
"    with_fx :slicer, phase: 0.125 do\n"
"      synth :blade, note: :d4, release: 8,\n"
"        cutoff: 100, amp: 1.5\n"
"    end\n"
"    16.times do\n"
"      tick\n"
"      play bizet_bass.look, release: 0.1\n"
"      play bizet_bass.look - 12, release: 0.3\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end\n"
" \n"
"live_loop :ind do\n"
"  sample :loop_industrial, beat_stretch: 1,\n"
"    cutoff: 100, rate: 1\n"
"  sleep 1\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  sample :bd_haus, cutoff: 110\n"
"  synth :beep, note: 49, attack: 0,\n"
"    release: 0.1\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_debug false\n"
"bizet_bass = (ring :d, :r, :r, :a, :f5, :r, :a, :r)\n"
"#bizet_bass = (ring :d, :r, :r, :Bb, :g5, :r, :Bb, :r)\n"
" \n"
"with_fx :reverb, room: 1, mix: 0.3 do\n"
"  live_loop :bizet do\n"
"    with_fx :slicer, phase: 0.125 do\n"
"      synth :blade, note: :d4, release: 8,\n"
"        cutoff: 100, amp: 1.5\n"
"    end\n"
"    16.times do\n"
"      tick\n"
"      play bizet_bass.look, release: 0.1\n"
"      play bizet_bass.look - 12, release: 0.3\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end\n"
" \n"
"live_loop :ind do\n"
"  sample :loop_industrial, beat_stretch: 1,\n"
"    cutoff: 100, rate: 1\n"
"  sleep 1\n"
"end\n"
" \n"
"live_loop :drums do\n"
"  sample :bd_haus, cutoff: 110\n"
"  synth :beep, note: 49, attack: 0,\n"
"    release: 0.1\n"
"  sleep 0.5\n"
"end"

#: A.08-minecraft-vj.md:1
msgid "A.8 Become a Minecraft VJ"
msgstr ""

#: A.08-minecraft-vj.md:3
msgid "Become a Minecraft VJ"
msgstr ""

#: A.08-minecraft-vj.md:5
msgid ""
"![Screen 0](../images/tutorial/articles/A.08-minecraft-vj/minecraft-vj-0-small"
".png)"
msgstr ""

#: A.08-minecraft-vj.md:7
msgid ""
"Everyone has played Minecraft. You will all have built amazing structures, des"
"igned cunning traps and even created elaborate cart lines controlled by redsto"
"ne switches. How many of you have performed with Minecraft? We bet you didn't "
"know that you could use Minecraft to create amazing visuals just like a profes"
"sional VJ."
msgstr ""

#: A.08-minecraft-vj.md:13
msgid ""
"If your only way of modifying Minecraft was with the mouse, you'd have a tough"
" time changing things fast enough. Luckily for you your Raspberry Pi comes wit"
"h a version of Minecraft that can be controlled with code. It also comes with "
"an app called Sonic Pi which makes coding Minecraft not only easy but also inc"
"redibly fun."
msgstr ""

#: A.08-minecraft-vj.md:19
msgid ""
"In today's article we'll be showing you some of the tips and tricks that we've"
" used to create performances in night clubs and music venues around the world."
msgstr ""

#: A.08-minecraft-vj.md:23
msgid "Let's get started..."
msgstr ""

#: A.08-minecraft-vj.md:25
msgid "Getting Started"
msgstr ""

#: A.08-minecraft-vj.md:27
msgid ""
"Let's start with a simple warm up exercise to refresh ourselves with the basic"
"s. First up, crack open your Raspberry Pi and then fire up both Minecraft and "
"Sonic Pi. In Minecraft, create a new world, and in Sonic Pi choose a fresh buf"
"fer and write in this code:"
msgstr ""

#: A.08-minecraft-vj.md:32
#, no-wrap
msgid "mc_message \"Let's get started...\""
msgstr "mc_message \"Let's get started...\""

#: A.08-minecraft-vj.md:36
msgid ""
"Hit the Run button and you'll see the message over in the Minecraft window. OK"
", we're ready to start, let's have some fun......"
msgstr ""

#: A.08-minecraft-vj.md:39
msgid "Sand Storms"
msgstr ""

#: A.08-minecraft-vj.md:41
msgid ""
"When we're using Minecraft to create visuals we try and think about what will "
"both look interesting and also be easy to generate from code. One nice trick i"
"s to create a sand storm by dropping sand blocks from the sky. For that all we"
" need are a few basic fns:"
msgstr ""

#: A.08-minecraft-vj.md:46
msgid "`sleep` - for inserting a delay between actions"
msgstr ""

#: A.08-minecraft-vj.md:47
msgid "`mc_location` - to find our current location"
msgstr ""

#: A.08-minecraft-vj.md:48
msgid "`mc_set_block`- to place sand blocks at a specific location"
msgstr ""

#: A.08-minecraft-vj.md:49
msgid "`rrand` - to allow us to generate random values within a range"
msgstr ""

#: A.08-minecraft-vj.md:50
msgid "`live_loop` - to allow us to continually make it rain sand"
msgstr ""

#: A.08-minecraft-vj.md:52
msgid ""
"If you're unfamiliar with any of the built-in fns such as `rrand`, just type t"
"he word into your buffer, click on it and then hit the keyboard combo `Control"
"-i` to bring up the built-in documentation. Alternatively you can navigate to "
"the *lang* tab in the Help system and then look up the fns directly along with"
" all the other exciting things you can do."
msgstr ""

#: A.08-minecraft-vj.md:58
msgid ""
"Let's make it rain a little first before unleashing the full power of the stor"
"m. Grab your current location and use it to create a few sand blocks up in the"
" sky nearby:"
msgstr ""

#: A.08-minecraft-vj.md:62
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"mc_set_block :sand, x, y + 20, z + 5\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 6\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 7\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 8"
msgstr ""
"x, y, z = mc_location\n"
"mc_set_block :sand, x, y + 20, z + 5\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 6\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 7\n"
"sleep 2\n"
"mc_set_block :sand, x, y + 20, z + 8"

#: A.08-minecraft-vj.md:73
msgid ""
"When you hit Run, you might have to look around a little as the blocks may sta"
"rt falling down behind you depending on which direction you're currently facin"
"g. Don't worry, if you missed them just hit Run again for another batch of san"
"d rain - just make sure you're looking the right way!"
msgstr ""

#: A.08-minecraft-vj.md:79
msgid ""
"Let's quickly review what's going on here. On the first line we grabbed Steve'"
"s location as coordinates with the fn `mc_location` and placed them into the v"
"ars `x`, `y`, and `z`. Then on the next lines we used the `mc_set_block` fn to"
" place some sand at the same coordinates as Steve but with some modifications."
" We chose the same x coordinate, a y coordinate 20 blocks higher and then succ"
"essively larger z coordinates so the sand dropped in a line away from Steve."
msgstr ""

#: A.08-minecraft-vj.md:87
msgid ""
"Why don't you take that code and start playing around with it yourself? Try ad"
"ding more lines, changing the sleep times, try mixing `:sand` with `:gravel` a"
"nd choose different coordinates. Just experiment and have fun!"
msgstr ""

#: A.08-minecraft-vj.md:91
msgid "Live Loops Unleashed"
msgstr ""

#: A.08-minecraft-vj.md:93
msgid ""
"OK, it's time to get the storm raging by unleashing the full power of the `liv"
"e_loop` - Sonic Pi's magical ability which unleashes the full power of live co"
"ding - changing code on-the-fly whilst it's running!"
msgstr ""

#: A.08-minecraft-vj.md:97
#, no-wrap
msgid ""
"live_loop :sand_storm do\n"
"  x, y, z = mc_location\n"
"  xd = rrand(-10, 10)\n"
"  zd = rrand(-10, 10)\n"
"  co = rrand(70, 130)\n"
"  synth :cnoise, attack: 0, release: 0.125, cutoff: co\n"
"  mc_set_block :sand, x + xd, y+20, z+zd\n"
"  sleep 0.125\n"
"end"
msgstr ""
"live_loop :sand_storm do\n"
"  x, y, z = mc_location\n"
"  xd = rrand(-10, 10)\n"
"  zd = rrand(-10, 10)\n"
"  co = rrand(70, 130)\n"
"  synth :cnoise, attack: 0, release: 0.125, cutoff: co\n"
"  mc_set_block :sand, x + xd, y+20, z+zd\n"
"  sleep 0.125\n"
"end"

#: A.08-minecraft-vj.md:109
msgid ""
"What fun! We're looping round pretty quickly (8 times a second) and during eac"
"h loop we're finding Steve's location like before but then generating 3 random"
" values:"
msgstr ""

#: A.08-minecraft-vj.md:113
msgid "`xd` - the difference for x which will be between -10 and 10"
msgstr ""

#: A.08-minecraft-vj.md:114
msgid "`zd` - the difference for z also between -10 and 10"
msgstr ""

#: A.08-minecraft-vj.md:115
msgid "`co` - a cutoff value for the low pass filter between 70 and 130"
msgstr ""

#: A.08-minecraft-vj.md:117
msgid ""
"We then use those random values in the fns `synth` and `mc_set_block` giving u"
"s sand falling in random locations around Steve along with a percussive rain-l"
"ike sound from the `:cnoise` synth."
msgstr ""

#: A.08-minecraft-vj.md:121
msgid ""
"For those of you new to live loops - this is where the fun really starts with "
"Sonic Pi. Whilst the code is running and the sand is pouring down, try changin"
"g one of the values, perhaps the sleep time to `0.25` or the `:sand` block typ"
"e to `:gravel`. Now hit run *again*. Hey Presto! Things changed without the co"
"de stopping. This is your gateway to performing like a real VJ. Keep practisin"
"g and changing things around. How different can you make the visuals without s"
"topping the code?"
msgstr ""

#: A.08-minecraft-vj.md:129
msgid "Epic Block Patterns"
msgstr ""

#: A.08-minecraft-vj.md:131
msgid ""
"![Screen 1](../images/tutorial/articles/A.08-minecraft-vj/minecraft-vj-1-small"
".png)"
msgstr ""

#: A.08-minecraft-vj.md:133
msgid ""
"Finally, another great way of generating interesting visuals is to generate hu"
"ge patterned walls to fly towards and close by. For this effect we'll need to "
"move from placing the blocks randomly to placing them in an ordered manner. We"
" can do this by nesting two sets of iteration (hit the Help button and navigat"
"e to section 5.2 of the tutorial \"Iteration and Loops\" for more background on "
"iteration). The funny `|xd|` after the do means that `xd` will be set for each"
" value of the iteration. So the first time it will be 0, then 1, then 2... etc"
". By nesting two lots of iteration together like this we can generate all the "
"coordinates for a square. We can then randomly choose block types from a ring "
"of blocks for an interesting effect:"
msgstr ""

#: A.08-minecraft-vj.md:145
#, no-wrap
msgid ""
"x, y, z = mc_location\n"
"bs = (ring :gold, :diamond, :glass)\n"
"10.times do |xd|\n"
"  10.times do |yd|\n"
"    mc_set_block bs.choose, x + xd, y + yd, z\n"
"  end\n"
"end"
msgstr ""
"x, y, z = mc_location\n"
"bs = (ring :gold, :diamond, :glass)\n"
"10.times do |xd|\n"
"  10.times do |yd|\n"
"    mc_set_block bs.choose, x + xd, y + yd, z\n"
"  end\n"
"end"

#: A.08-minecraft-vj.md:155
msgid ""
"Pretty neat. Whilst we're having fun here, try changing `bs.choose` to `bs.tic"
"k` to move from a random pattern to a more regular one. Try changing the block"
" types and the more adventurous of you might want to try sticking this within "
"a `live_loop` so that the patterns keep changing automatically."
msgstr ""

#: A.08-minecraft-vj.md:161
msgid ""
"Now, for the VJ finale - change the two `10.times` to `100.times` and hit Run."
" Kaboom! A Huge gigantic wall of randomly placed bricks. Imagine how long it w"
"ould take you to build that manually with your mouse! Double-tap space to ente"
"r fly-mode and start swooping by for some great visual effects. Don't stop her"
"e though - use your imagination to conjure up some cool ideas and then use the"
" coding power of Sonic Pi to make it real. When you've practised enough dim th"
"e lights and put on a VJ show for your friends!"
msgstr ""

#: A.09-randomisation.md:1
msgid "A.9 Randomisation"
msgstr ""

#: A.09-randomisation.md:3
msgid "Surfing Random Streams"
msgstr ""

#: A.09-randomisation.md:5
msgid ""
"Back in episode 4 of this tutorial series we took a brief look at randomisatio"
"n whilst coding up some sizzling synth riffs. Given that randomisation is such"
" an important part of my live coding DJ sets I thought it would be useful to c"
"over the fundamentals in much greater detail. So, get your lucky hat on and le"
"t's surf some random streams!"
msgstr ""

#: A.09-randomisation.md:11
msgid "There is no random"
msgstr ""

#: A.09-randomisation.md:13
msgid ""
"The first thing to learn which might really surprise you when playing with Son"
"ic Pi's randomisation functions is that they're not actually really random. Wh"
"at does this actually mean? Well, let's try a couple of tests. First, imagine "
"a number in your head between 0 and 1. Keep it there and don't tell me. Now le"
"t me guess... was it `0.321567`? No? Bah, I'm clearly no good at this. Let me "
"have another go, but let's ask Sonic Pi to choose a number this time. Fire up "
"Sonic Pi v2.7+ and ask it for a random number but again don't tell me:"
msgstr ""

#: A.09-randomisation.md:22
#, no-wrap
msgid "print rand"
msgstr "print rand"

#: A.09-randomisation.md:26
msgid ""
"Now for the reveal... was it `0.75006103515625`? Yes! Ha, I can see you're a l"
"ittle sceptical. Perhaps it was just a lucky guess. Let's try again. Press the"
" Run button again and see what we get... What? `0.75006103515625` again? This "
"clearly can't be random! You're right, it's not."
msgstr ""

#: A.09-randomisation.md:32
msgid ""
"What's going on here? The fancy computer science word here is determinism. Thi"
"s just means that nothing is by chance and everything is destined to be. Your "
"version of Sonic Pi is destined to always return `0.75006103515625` in the pro"
"gram above. This might sound pretty useless, but let me assure you that it's o"
"ne of the most powerful parts of Sonic Pi. If you stick at it you'll learn how"
" to rely on the deterministic nature of Sonic Pi's randomisation as a fundamen"
"tal building block for your compositions and live coded DJ sets."
msgstr ""

#: A.09-randomisation.md:41
msgid "A Random Melody"
msgstr ""

#: A.09-randomisation.md:43
msgid ""
"When Sonic Pi boots it actually loads into memory a sequence of 441,000 pre-ge"
"nerated random values. When you call a random function such as `rand` or `rran"
"d`, this random stream is used to generate your result. Each call to a random "
"function consumes a value from this stream. Therefore the 10th call to a rando"
"m function will use the 10th value from the stream. Also, every time you press"
" the Run button, the stream is reset for that run. This is why I could predict"
" the result to `rand` and why the 'random' melody was the same every time. Eve"
"rybody's version of Sonic Pi uses the exact same random stream which is very i"
"mportant when we start sharing our pieces with each other."
msgstr ""

#: A.09-randomisation.md:54
msgid "Let's use this knowledge to generate a repeatable random melody:"
msgstr ""

#: A.09-randomisation.md:56
#, no-wrap
msgid ""
"8.times do\n"
" play rrand_i(50, 95)\n"
" sleep 0.125\n"
"end"
msgstr ""
"8.times do\n"
" play rrand_i(50, 95)\n"
" sleep 0.125\n"
"end"

#: A.09-randomisation.md:63
msgid ""
"Type this into a spare buffer and hit Run. You'll hear a melody consisting of "
"'random' notes between 50 and 95. When it's finished, hit Run again to hear ex"
"actly the same melody again."
msgstr ""

#: A.09-randomisation.md:67
msgid "Handy Randomisation Functions"
msgstr ""

#: A.09-randomisation.md:69
msgid ""
"Sonic Pi comes with a number of useful functions for working with the random s"
"tream. Here's a list of some of the most useful:"
msgstr ""

#: A.09-randomisation.md:72
msgid "`rand` - Simply returns the next value in the random stream"
msgstr ""

#: A.09-randomisation.md:73
msgid "`rrand` - Returns a random value within a range"
msgstr ""

#: A.09-randomisation.md:74
msgid "`rrand_i` - Returns a random whole number within a range"
msgstr ""

#: A.09-randomisation.md:75
msgid "`one_in` - Returns true or false with the given probability"
msgstr ""

#: A.09-randomisation.md:76
msgid "`dice` - Imitates rolling a dice and returns a value between 1 and 6"
msgstr ""

#: A.09-randomisation.md:77
msgid "`choose` - Chooses a random value from a list"
msgstr ""

#: A.09-randomisation.md:79
msgid ""
"Check out their documentation in the Help system for detailed information and "
"examples."
msgstr ""

#: A.09-randomisation.md:82
msgid "Resetting the Stream"
msgstr ""

#: A.09-randomisation.md:84
msgid ""
"Whilst the ability to repeat a sequence of chosen notes is essential to allow "
"you to replay a riff on the dance floor, it might not be exactly the riff you "
"want. Wouldn't it be great if we could try a number of different riffs and cho"
"ose the one we liked best? This is where the real magic starts."
msgstr ""

#: A.09-randomisation.md:90
msgid ""
"We can manually set the stream with the fn `use_random_seed`. In Computer Scie"
"nce, a random seed is the starting point from which a new stream of random val"
"ues can sprout out and blossom. Let's try it:"
msgstr ""

#: A.09-randomisation.md:94
#, no-wrap
msgid ""
"use_random_seed 0\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_random_seed 0\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"

#: A.09-randomisation.md:102
msgid ""
"Great, we get the first three notes of our random melody above: `84`, `83` and"
" `71`. However, we can now change the seed to something else. How about this:"
msgstr ""

#: A.09-randomisation.md:106
#, no-wrap
msgid ""
"use_random_seed 1\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"
msgstr ""
"use_random_seed 1\n"
"3.times do\n"
"  play rrand_i(50, 95)\n"
"  sleep 0.125\n"
"end"

#: A.09-randomisation.md:114
msgid ""
"Interesting, we get `83`, `71` and `61` . You might notice that the first two "
"numbers here are the same as the last two numbers before - this isn't a coinci"
"dence."
msgstr ""

#: A.09-randomisation.md:118
msgid ""
"Remember that the random stream is just a giant list of 'pre-rolled' values. U"
"sing a random seed simply jumps us to a point in that list. Another way of thi"
"nking about it is to imagine a huge deck of pre-shuffled cards. Using a random"
" seed is cutting the deck at a particular point. The fabulous part of this is "
"that it's precisely this ability to jump around the random stream which gives "
"us huge power when making music."
msgstr ""

#: A.09-randomisation.md:126
msgid ""
"Let's revisit our random melody of 8 notes with this new stream resetting powe"
"r, but let's also throw in a live loop so we can experiment live whilst it's p"
"laying:"
msgstr ""

#: A.09-randomisation.md:130
#, no-wrap
msgid ""
"live_loop :random_riff do    \n"
"  use_random_seed 0\n"
"  8.times do\n"
"    play rrand_i(50, 95), release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do    \n"
"  use_random_seed 0\n"
"  8.times do\n"
"    play rrand_i(50, 95), release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.09-randomisation.md:140
msgid ""
"Now, whilst it's still playing, change the seed value from `0` to something el"
"se. Try `100`, what about `999`. Try your own values, experiment and play arou"
"nd - see which seed generates the riff you like best."
msgstr ""

#: A.09-randomisation.md:147
msgid ""
"This month's tutorial has been quite a technical dive into the workings of Son"
"ic Pi's randomisation functionality. Hopefully it has given you some insight i"
"nto how it works and how you can start using randomisation in a reliable way t"
"o create repeatable patterns within your music. It's important to stress that "
"you can use repeatable randomisation *anywhere* you want. For example, you can"
" randomise the amplitude of notes, the timing of the rhythm, the amount of rev"
"erb, the current synth, the mix of an FX, etc. etc. In the future we'll take a"
" close look at some of these applications, but for now let me leave you with a"
" short example."
msgstr ""

#: A.09-randomisation.md:157
msgid ""
"Type the following into a spare buffer, hit Run, and then start changing the s"
"eeds around, hit Run again (whilst it's still playing) and explore the differe"
"nt sounds, rhythms and melodies you can make. When you find a nice one, rememb"
"er the seed number so you can get back to it. Finally, when you've found a few"
" seeds you like, put on a live coded performance for your friends by simply sw"
"itching between your favourite seeds to create a full piece."
msgstr ""

#: A.09-randomisation.md:165
#, no-wrap
msgid ""
"live_loop :random_riff do\n"
"  use_random_seed 10300\n"
"  use_synth :prophet\n"
"  s = [0.125, 0.25, 0.5].choose\n"
"  8.times do\n"
"    r = [0.125, 0.25, 1, 2].choose\n"
"    n = (scale :e3, :minor).choose\n"
"    co = rrand(30, 100)\n"
"    play n, release: r, cutoff: co\n"
"    sleep s\n"
"  end\n"
"end\n"
"live_loop :drums do\n"
"  use_random_seed 2001\n"
"  16.times do\n"
"    r = rrand(0.5, 10)\n"
"    sample :drum_bass_hard, rate: r, amp: rand\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr ""
"live_loop :random_riff do\n"
"  use_random_seed 10300\n"
"  use_synth :prophet\n"
"  s = [0.125, 0.25, 0.5].choose\n"
"  8.times do\n"
"    r = [0.125, 0.25, 1, 2].choose\n"
"    n = (scale :e3, :minor).choose\n"
"    co = rrand(30, 100)\n"
"    play n, release: r, cutoff: co\n"
"    sleep s\n"
"  end\n"
"end\n"
"live_loop :drums do\n"
"  use_random_seed 2001\n"
"  16.times do\n"
"    r = rrand(0.5, 10)\n"
"    sample :drum_bass_hard, rate: r, amp: rand\n"
"    sleep 0.125\n"
"  end\n"
"end"

#: A.10-controlling-your-sound.md:1
msgid "A.10 Control"
msgstr ""

#: A.10-controlling-your-sound.md:3
msgid "Controlling Your Sound"
msgstr ""

#: A.10-controlling-your-sound.md:5
msgid ""
"So far during this series we've focussed on triggering sounds. We've discovere"
"d that we can trigger the many synths built into Sonic Pi with `play` or `synt"
"h` and how to trigger pre-recorded samples with `sample`. We've also looked at"
" how we can wrap these triggered sounds within studio FX such as reverb and di"
"stortion using the `with_fx` command. Combine this with Sonic Pi's incredibly "
"accurate timing system and you can produce a vast array of sounds, beats and r"
"iffs. However, once you've carefully selected a particular sound's options and"
" triggered it, there's no ability to mess with it whilst it's playing right? W"
"rong! Today you're going to learn something very powerful - how to control run"
"ning synths."
msgstr ""

#: A.10-controlling-your-sound.md:17
msgid "A Basic Sound"
msgstr ""

#: A.10-controlling-your-sound.md:19
msgid ""
"Let's create a nice simple sound. Fire up Sonic Pi and in a fresh buffer type "
"the following:"
msgstr ""

#: A.10-controlling-your-sound.md:22
#, no-wrap
msgid "synth :prophet, note: :e1, release: 8, cutoff: 100"
msgstr "synth :prophet, note: :e1, release: 8, cutoff: 100"

#: A.10-controlling-your-sound.md:26
msgid ""
"Now press the Run button at the top left to hear a lovely rumbling synth sound"
". Go ahead, press it again a few times to get a feel for it. OK, done? Let's s"
"tart controlling it!"
msgstr ""

#: A.10-controlling-your-sound.md:30
msgid "Synth Nodes"
msgstr ""

#: A.10-controlling-your-sound.md:32
msgid ""
"A little known feature in Sonic Pi is that the fns `play`, `synth` and `sample"
"`, return something called a `SynthNode` which represents a running sound. You"
" can capture one of these `SynthNode`s using a standard variable and then **co"
"ntrol** it at a later point in time. For example, let's change the value of th"
"e `cutoff:` opt after 1 beat:"
msgstr ""

#: A.10-controlling-your-sound.md:38
#, no-wrap
msgid ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"control sn, cutoff: 130"
msgstr ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"control sn, cutoff: 130"

#: A.10-controlling-your-sound.md:44
msgid "Let's look at each line in turn:"
msgstr ""

#: A.10-controlling-your-sound.md:46
msgid ""
"Firstly we trigger the `:prophet` synth using the `synth` fn as normal. Howeve"
"r we also capture the result in a variable called `sn`. We could have called t"
"his variable something completely different such as `synth_node` or `jane` - t"
"he name doesn't matter. However, it's important to choose a name that's meanin"
"gful to you for your performances and for people reading your code. I chose `s"
"n` as it's a nice short mnemonic for synth node."
msgstr ""

#: A.10-controlling-your-sound.md:54
msgid ""
"On line 2 we have a standard `sleep` command. This does nothing special - it j"
"ust asks the computer to wait for 1 beat before moving onto the next line."
msgstr ""

#: A.10-controlling-your-sound.md:58
msgid ""
"Line 3 is where the control fun starts. Here, we use the `control` fn to tell "
"our running `SynthNode` to change the cutoff value to `130`. If you hit the **"
"Run** button, you'll hear the `:prophet` synth start playing as before, but af"
"ter 1 beat it will shift to sound a lot brighter."
msgstr ""

#: A.10-controlling-your-sound.md:63
msgid "Modulatable Options"
msgstr ""

#: A.10-controlling-your-sound.md:65
msgid ""
"Most of Sonic Pi's synths and FX opts may be changed after being triggered. Ho"
"wever, this isn't the case for all of them. For example, the envelope opts `at"
"tack:`, `decay:`, `sustain:` and `release:` can only be set when triggering th"
"e synth. Figuring out which opts can and can't be changed is simple - just hea"
"d to the documentation for a given synth or FX and then scroll down to the ind"
"ividual option documentation and look for the phrases \"May be changed whilst p"
"laying\" or \"Can not be changed once set\". For example, the documentation for t"
"he `:beep` synth's `attack:` opt makes it clear that it's not possible to chan"
"ge it:"
msgstr ""

#: A.10-controlling-your-sound.md:76
msgid "Default: 0"
msgstr ""

#: A.10-controlling-your-sound.md:77
msgid "Must be zero or greater"
msgstr ""

#: A.10-controlling-your-sound.md:78
msgid "Can not be changed once set"
msgstr ""

#: A.10-controlling-your-sound.md:79
msgid "Scaled with current BPM value"
msgstr ""

#: A.10-controlling-your-sound.md:81
msgid "Multiple Changes"
msgstr ""

#: A.10-controlling-your-sound.md:83
msgid ""
"Whilst a synth is running you're not limited to changing it only once - you're"
" free to change it as many times as you like. For example, we can turn our `:p"
"rophet` into a mini arpeggiator with the following:"
msgstr ""

#: A.10-controlling-your-sound.md:87
#, no-wrap
msgid ""
"notes = (scale :e3, :minor_pentatonic)\n"
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"16.times do\n"
"  control sn, note: notes.tick\n"
"  sleep 0.125\n"
"end"
msgstr ""
"notes = (scale :e3, :minor_pentatonic)\n"
"sn = synth :prophet, note: :e1, release: 8, cutoff: 100\n"
"sleep 1\n"
"16.times do\n"
"  control sn, note: notes.tick\n"
"  sleep 0.125\n"
"end"

#: A.10-controlling-your-sound.md:97
msgid ""
"In this snippet of code we just added a couple of extra things. First we defin"
"ed a new variable called `notes` which contains the notes we'd like to cycle t"
"hrough (an arpeggiator is just a fancy name for something that cycles through "
"a list of notes in order). Secondly we replaced our single call to `control` w"
"ith an iteration calling it 16 times. In each call to `control` we `.tick` thr"
"ough our ring of `notes` which will automatically repeat once we get to the en"
"d (thanks to the fabulous power of Sonic Pi's rings). For a bit of variety try"
" replacing `.tick` with `.choose` and see if you can hear the difference."
msgstr ""

#: A.10-controlling-your-sound.md:107
msgid ""
"Note that we can change multiple opts simultaneously. Try changing the control"
" line to the following and listen for the difference:"
msgstr ""

#: A.10-controlling-your-sound.md:110
#, no-wrap
msgid "control sn, note: notes.tick, cutoff: rrand(70, 130)"
msgstr "control sn, note: notes.tick, cutoff: rrand(70, 130)"

#: A.10-controlling-your-sound.md:114
msgid "Sliding"
msgstr ""

#: A.10-controlling-your-sound.md:116
msgid ""
"When we control a `SynthNode`, it responds exactly on time and instantly chang"
"es the value of the opt to the new one as if you'd pressed a button or flicked"
" a switch requesting the change. This can sound rhythmical and percussive - es"
"pecially if the opt controls an aspect of the timbre such as `cutoff:`. Howeve"
"r, sometimes you don't want the change to happen instantaneously. Instead, you"
" might want to smoothly move from the current value to the new one as if you'd"
" moved a slider or dial. Of course, Sonic Pi can also do this too using the `_"
"slide:` opts."
msgstr ""

#: A.10-controlling-your-sound.md:125
msgid ""
"Each opt that can be modified also has a special corresponding `_slide:` opt t"
"hat allows you to specify a slide time. For example, `amp:` has `amp_slide:` a"
"nd `cutoff:` has `cutoff_slide:`. These slide opts work slightly differently t"
"han all the other opts in that they tell the synth note how to behave **next t"
"ime they are controlled**. Let's take a look:"
msgstr ""

#: A.10-controlling-your-sound.md:131
#, no-wrap
msgid ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 70, cutoff_slide: 2\n"
"sleep 1\n"
"control sn, cutoff: 130"
msgstr ""
"sn = synth :prophet, note: :e1, release: 8, cutoff: 70, cutoff_slide: 2\n"
"sleep 1\n"
"control sn, cutoff: 130"

#: A.10-controlling-your-sound.md:137
msgid ""
"Notice how this example is exactly the same as before except with the addition"
" of `cutoff_slide:`. This is saying that next time this synth has its `cutoff:"
"` opt controlled, it will take 2 beats to slide from the current value to the "
"new one. Therefore, when we use `control` you can hear the cutoff slide from 7"
"0 to 130. It creates an interesting dynamic feel to the sound. Now, try changi"
"ng the `cutoff_slide:` time to a shorter value such as 0.5 or a longer value s"
"uch as 4 to see how it changes the sound. Remember, you can slide any of the m"
"odifiable opts in exactly this way and each `_slide:` value can be totally dif"
"ferent so you can have the cutoff sliding slowly, the amp sliding fast and the"
" pan sliding somewhere in between if that's what you're looking to create..."
msgstr ""

#: A.10-controlling-your-sound.md:151
msgid ""
"Let's look at a short example which demonstrates the power of controlling synt"
"hs after they've been triggered. Notice that you can also slide FX just like s"
"ynths although with a slightly different syntax. Check out section 7.2 of the "
"built-in tutorial for more information on controlling FX."
msgstr ""

#: A.10-controlling-your-sound.md:157
msgid ""
"Copy the code into a spare buffer and take a listen. Don't stop there though -"
" play around with the code. Change the slide times, change the notes, the synt"
"h, the FX and the sleep times and see if you can turn it into something comple"
"tely different!"
msgstr ""

#: A.10-controlling-your-sound.md:162
#, no-wrap
msgid ""
"live_loop :moon_rise do\n"
"  with_fx :echo, mix: 0, mix_slide: 8 do |fx|\n"
"    control fx, mix: 1\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle\n"
"    sn = synth :prophet , sustain: 8, note: :e1, cutoff: 70, cutoff_slide: 8\n"
"    control sn, cutoff: 130\n"
"    sleep 2\n"
"    32.times do\n"
"      control sn, note: notes.tick, pan: rrand(-1, 1)\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"
msgstr ""
"live_loop :moon_rise do\n"
"  with_fx :echo, mix: 0, mix_slide: 8 do |fx|\n"
"    control fx, mix: 1\n"
"    notes = (scale :e3, :minor_pentatonic, num_octaves: 2).shuffle\n"
"    sn = synth :prophet , sustain: 8, note: :e1, cutoff: 70, cutoff_slide: 8\n"
"    control sn, cutoff: 130\n"
"    sleep 2\n"
"    32.times do\n"
"      control sn, note: notes.tick, pan: rrand(-1, 1)\n"
"      sleep 0.125\n"
"    end\n"
"  end\n"
"end"

#: A.11-beat-tracking.md:1
msgid "A.11 Tick Tock"
msgstr ""

#: A.11-beat-tracking.md:3
msgid "Tracking the Beat"
msgstr ""

#: A.11-beat-tracking.md:5
msgid ""
"Last month in this series we took a deep technical dive into the randomisation"
" system underpinning Sonic Pi. We explored how we can use it to deterministica"
"lly add new levels of dynamic control over our code. This month we're going to"
" continue our technical dive and turn our attention to Sonic Pi's unique tick "
"system. By the end of this article you'll be ticking your way through rhythms "
"and riffs on your way to being a live coding DJ."
msgstr ""

#: A.11-beat-tracking.md:13
msgid "Beat Counting"
msgstr ""

#: A.11-beat-tracking.md:15
msgid ""
"When making music we often want to do a different thing depending on which bea"
"t it is. Sonic Pi has a special beat counting system called `tick` to give you"
" precise control over when a beat actually occurs and even supports multiple b"
"eats with their own tempos."
msgstr ""

#: A.11-beat-tracking.md:20
msgid ""
"Let's have a play - to advance the beat we just need to call `tick`. Open up a"
" fresh buffer, type in the following and hit Run:"
msgstr ""

#: A.11-beat-tracking.md:23
#, no-wrap
msgid "puts tick #=> 0"
msgstr "puts tick #=> 0"

#: A.11-beat-tracking.md:27
msgid ""
"This will return the current beat: `0`. Notice that even if you press the Run "
"button a few times it will always return `0`. This is because each run starts "
"a fresh beat counting from 0. However, whilst the run is still active, we can "
"advance the beat as many times as we want:"
msgstr ""

#: A.11-beat-tracking.md:32
#, no-wrap
msgid ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts tick #=> 2"
msgstr ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts tick #=> 2"

#: A.11-beat-tracking.md:38
msgid ""
"Whenever you see the symbol `#=>` at the end of a line of code it means that t"
"hat line will log the text on the right-hand-side. For example, `puts foo #=> "
"0` means the code `puts foo` prints `0` to the log at that point in the progra"
"m."
msgstr ""

#: A.11-beat-tracking.md:43
msgid "Checking the Beat"
msgstr ""

#: A.11-beat-tracking.md:45
msgid ""
"We've seen that `tick` does two things. It increments (adds one) and returns t"
"he current beat. Sometimes we just want to look at the current beat without ha"
"ving to increment it which we can do via `look`:"
msgstr ""

#: A.11-beat-tracking.md:49
#, no-wrap
msgid ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts look #=> 1\n"
"puts look #=> 1"
msgstr ""
"puts tick #=> 0\n"
"puts tick #=> 1\n"
"puts look #=> 1\n"
"puts look #=> 1"

#: A.11-beat-tracking.md:56
msgid ""
"In this code we tick the beat up twice and then call `look` twice. We'll see t"
"he following values in the log: `0`, `1`, `1`, `1`. The first two `tick`s retu"
"rned `0`, then `1` as expected, then the two `look`s just returned the last be"
"at value twice which was `1`."
msgstr ""

#: A.11-beat-tracking.md:64
msgid ""
"So now we can advance the beat with `tick` and check the beat with `look`. Wha"
"t next? We need something to tick over. Sonic Pi uses rings for representing r"
"iffs, melodies and rhythms and the tick system has been specifically designed "
"to work very closely with them. In fact, rings have their own dot version of `"
"tick` which does two things. Firstly, it acts like a regular tick and incremen"
"ts the beat. Secondly it looks up the ring value using the beat as the index. "
"Let's take a look:"
msgstr ""

#: A.11-beat-tracking.md:72
#, no-wrap
msgid "puts (ring :a, :b, :c).tick #=> :a"
msgstr "puts (ring :a, :b, :c).tick #=> :a"

#: A.11-beat-tracking.md:76
msgid ""
"`.tick` is a special dot version of `tick` which will return the first value o"
"f the ring `:a`. We can grab each of the values in the ring by calling `.tick`"
" multiple times:"
msgstr ""

#: A.11-beat-tracking.md:80
#, no-wrap
msgid ""
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts (ring :a, :b, :c).tick #=> :b\n"
"puts (ring :a, :b, :c).tick #=> :c\n"
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts look                   #=> 3"
msgstr ""
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts (ring :a, :b, :c).tick #=> :b\n"
"puts (ring :a, :b, :c).tick #=> :c\n"
"puts (ring :a, :b, :c).tick #=> :a\n"
"puts look                   #=> 3"

#: A.11-beat-tracking.md:88
msgid ""
"Take a look at the log and you'll see `:a`, `:b`, `:c` and then `:a` again. No"
"tice that `look` returns `3`. Calls to `.tick` act just like they are regular "
"calls to `tick` - they increment the local beat."
msgstr ""

#: A.11-beat-tracking.md:93
msgid "A Live Loop Arpeggiator"
msgstr ""

#: A.11-beat-tracking.md:95
msgid ""
"The real power comes when you mix `tick` with rings and `live_loop`s. When com"
"bined we have all the tools we need to both build and understand a simple arpe"
"giator. We need just four things:"
msgstr ""

#: A.11-beat-tracking.md:99
msgid "A ring containing the notes we want to loop over."
msgstr ""

#: A.11-beat-tracking.md:100
msgid "A means of incrementing and obtaining the beat."
msgstr ""

#: A.11-beat-tracking.md:101
msgid "The ability to play a note based on the current beat."
msgstr ""

#: A.11-beat-tracking.md:102
msgid "A loop structure to keep the arpegiator repeating."
msgstr ""

#: A.11-beat-tracking.md:104
msgid "These concepts can all be found in the following code:"
msgstr ""

#: A.11-beat-tracking.md:106
#, no-wrap
msgid ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"live_loop :arp do\n"
"  use_synth :dpulse\n"
"  play notes.tick, release: 0.2\n"
"  sleep 0.125\n"
"end"
msgstr ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"live_loop :arp do\n"
"  use_synth :dpulse\n"
"  play notes.tick, release: 0.2\n"
"  sleep 0.125\n"
"end"

#: A.11-beat-tracking.md:116
msgid ""
"Let's look at each of these lines. First we define our ring of notes which we'"
"ll continually play. We then create a `live_loop` called `:arp` which loops ro"
"und for us. Each time round the `live_loop` we set our synth to `:dpulse` and "
"then play the next note in our ring using `.tick`. Remember that this will inc"
"rement our beat counter and use the latest beat value as an index into our not"
"es ring. Finally, we wait for an eighth of a beat before looping round again."
msgstr ""

#: A.11-beat-tracking.md:124
msgid "Multiple Simultaneous Beats"
msgstr ""

#: A.11-beat-tracking.md:126
msgid ""
"A really important thing to know is that `tick`s are local to the `live_loop`."
" This means that each `live_loop` has its own independent beat counter. This i"
"s much more powerful than having a global metronome and beat. Let's take a loo"
"k at this in action:"
msgstr ""

#: A.11-beat-tracking.md:131
#, no-wrap
msgid ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"with_fx :reverb do\n"
"  live_loop :arp do\n"
"    use_synth :dpulse\n"
"    play notes.tick + 12, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play notes.tick - 12, release: 0.2\n"
"  sleep 0.75\n"
"end"
msgstr ""
"notes = (ring 57, 62, 55, 59, 64)\n"
"with_fx :reverb do\n"
"  live_loop :arp do\n"
"    use_synth :dpulse\n"
"    play notes.tick + 12, release: 0.1\n"
"    sleep 0.125\n"
"  end\n"
"end\n"
"live_loop :arp2 do\n"
"  use_synth :dsaw\n"
"  play notes.tick - 12, release: 0.2\n"
"  sleep 0.75\n"
"end"

#: A.11-beat-tracking.md:149
msgid "Clashing Beats"
msgstr ""

#: A.11-beat-tracking.md:151
msgid ""
"A big cause of confusion with Sonic Pi's tick system is when people want to ti"
"ck over multiple rings in the same `live_loop`:"
msgstr ""

#: A.11-beat-tracking.md:154
#, no-wrap
msgid ""
"use_bpm 300\n"
"use_synth :blade\n"
"live_loop :foo do\n"
"  play (ring :e1, :e2, :e3).tick\n"
"  play (scale :e3, :minor_pentatonic).tick\n"
"  sleep 1\n"
"end"
msgstr ""
"use_bpm 300\n"
"use_synth :blade\n"
"live_loop :foo do\n"
"  play (ring :e1, :e2, :e3).tick\n"
"  play (scale :e3, :minor_pentatonic).tick\n"
"  sleep 1\n"
"end"

#: A.11-beat-tracking.md:164
msgid ""
"Even though each `live_loop` has its own independent beat counter, we're calli"
"ng `.tick` twice within the same `live_loop`. This means that the beat will be"
" incremented twice every time round. This can produce some interesting polyrhy"
"thms but is often not what you want. There are two solutions to this problem. "
"One option is to manually call `tick` at the start of the `live_loop` and then"
" use `.look` to look up the current beat in each `live_loop`. The second solut"
"ion is to pass a unique name to each call to `.tick` such as `.tick(:foo)`. So"
"nic Pi will then create and track a separate beat counter for each named tick "
"you use. That way you can work with as many beats as you need! See the section"
" on named ticks in 9.4 of the built-in tutorial for more information."
msgstr ""

#: A.11-beat-tracking.md:178
msgid ""
"Let's bring all this knowledge of `tick`s, `ring`s and `live_loop`s together f"
"or a final fun example. As usual, don't treat this as a finished piece. Start "
"changing things and play around with it and see what you can turn it into. See"
" you next time..."
msgstr ""

#: A.11-beat-tracking.md:183
#, no-wrap
msgid ""
"use_bpm 240\n"
"notes = (scale :e3, :minor_pentatonic).shuffle\n"
"live_loop :foo do\n"
"  use_synth :blade\n"
"  with_fx :reverb, reps: 8, room: 1 do\n"
"    tick\n"
"    co = (line 70, 130, steps: 32).tick(:cutoff)\n"
"    play (octs :e3, 3).look, cutoff: co, amp: 2\n"
"    play notes.look, amp: 4\n"
"    sleep 1\n"
"  end\n"
"end\n"
"live_loop :bar do\n"
"  tick\n"
"  sample :bd_ada if (spread 1, 4).look\n"
"  use_synth :tb303\n"
"  co = (line 70, 130, steps: 16).look\n"
"  r = (line 0.1, 0.5, steps: 64).mirror.look\n"
"  play notes.look, release: r, cutoff: co\n"
"  sleep 0.5\n"
"end"
msgstr ""
"use_bpm 240\n"
"notes = (scale :e3, :minor_pentatonic).shuffle\n"
"live_loop :foo do\n"
"  use_synth :blade\n"
"  with_fx :reverb, reps: 8, room: 1 do\n"
"    tick\n"
"    co = (line 70, 130, steps: 32).tick(:cutoff)\n"
"    play (octs :e3, 3).look, cutoff: co, amp: 2\n"
"    play notes.look, amp: 4\n"
"    sleep 1\n"
"  end\n"
"end\n"
"live_loop :bar do\n"
"  tick\n"
"  sample :bd_ada if (spread 1, 4).look\n"
"  use_synth :tb303\n"
"  co = (line 70, 130, steps: 16).look\n"
"  r = (line 0.1, 0.5, steps: 64).mirror.look\n"
"  play notes.look, release: r, cutoff: co\n"
"  sleep 0.5\n"
"end"

#: A.12-sample-slicing.md:1
msgid "A.12 Sample Slicing"
msgstr ""

#: A.12-sample-slicing.md:3
msgid "Sample Slicing"
msgstr ""

#: A.12-sample-slicing.md:5
msgid ""
"Way back in episode 3 of this Sonic Pi series we looked at how to loop, stretc"
"h and filter one of the most famous drum breaks of all time - the Amen Break. "
"In this tutorial we're going to take this one step further and learn how to sl"
"ice it up, shuffle the slices and glue it back together in a completely new or"
"der. If that sounds a bit crazy to you, don't worry, it will all become clear "
"and you'll soon master a powerful new tool for your live coded sets."
msgstr ""

#: A.12-sample-slicing.md:13
msgid "Sound as Data"
msgstr ""

#: A.12-sample-slicing.md:15
msgid ""
"Before we get started let's just take a brief moment to understand how to work"
" with samples. By now, you've all hopefully played with Sonic Pi's powerful sa"
"mpler. If not, there's no time like the present! Boot up your Raspberry Pi, la"
"unch Sonic Pi from the Programming menu, type the following into a fresh buffe"
"r and then hit the Run button to hear a pre-recorded drum beat:"
msgstr ""

#: A.12-sample-slicing.md:26
msgid ""
"A recording of a sound is simply represented as data - lots of numbers between"
" -1 and 1 which represent the peaks and troughs of the sound wave. If we play "
"those numbers back in order, we get the original sound. However, what's to sto"
"p us from playing them back in a different order and creating a new sound?"
msgstr ""

#: A.12-sample-slicing.md:32
msgid ""
"How are samples actually recorded? It's actually pretty simple once you unders"
"tand the basic physics of sound. When you make a sound - for example by hittin"
"g a drum, the noise travels through the air in a similar fashion to how the su"
"rface of a lake ripples when you throw a pebble into it. When those ripples re"
"ach your ears, your eardrum moves sympathetically and converts those movements"
" into the sound you hear. If we wish to record and play back the sound, we the"
"refore need a way of capturing, storing and reproducing those ripples. One way"
" is to use a microphone which acts like an eardrum and moves back and forth as"
" the sound ripples hit it. The microphone then converts its position into a ti"
"ny electric signal which is then measured many times a second. These measureme"
"nts are then represented as a series of numbers between -1 and 1."
msgstr ""

#: A.12-sample-slicing.md:46
msgid ""
"If we were to plot a visualisation of the sound it would be a simple graph of "
"data with time on the x axis and microphone/speaker position as a value betwee"
"n -1 and 1 on the y axis. You can see an example of such a graph at the top of"
" the diagram."
msgstr ""

#: A.12-sample-slicing.md:51
msgid "Playing Part of a Sample"
msgstr ""

#: A.12-sample-slicing.md:53
msgid ""
"So, how do we code Sonic Pi to play a sample back in a different order? To ans"
"wer this question we need to take a look at the `start:` and `finish:` opts fo"
"r `sample`. These let us control the start and finish positions of our playbac"
"k of the numbers which represent the sound. The values for both of these opts "
"are represented as a number between `0` and `1` where `0` represents the start"
" of the sample and `1` is the end. So, to play the first half of the Amen Brea"
"k, we just need to specify a `finish:` of `0.5`:"
msgstr ""

#: A.12-sample-slicing.md:66
msgid "We can add in a `start:` value to play an even smaller section of the sample:"
msgstr ""

#: A.12-sample-slicing.md:68
#, no-wrap
msgid "sample :loop_amen, start: 0.25, finish: 0.5"
msgstr "sample :loop_amen, start: 0.25, finish: 0.5"

#: A.12-sample-slicing.md:72
msgid ""
"For fun, you can even have the `finish:` opt's value be *before* `start:` and "
"it will play the section backwards:"
msgstr ""

#: A.12-sample-slicing.md:75
#, no-wrap
msgid "sample :loop_amen, start: 0.5, finish: 0.25"
msgstr "sample :loop_amen, start: 0.5, finish: 0.25"

#: A.12-sample-slicing.md:79
msgid "Re-ordering Sample Playback"
msgstr ""

#: A.12-sample-slicing.md:81
msgid ""
"Now that we know that a sample is simply a list of numbers that can be played "
"back in any order and also how to play a specific part of a sample we can now "
"start having fun playing a sample back in the 'wrong' order."
msgstr ""

#: A.12-sample-slicing.md:86
msgid "![Amen Slices](../images/tutorial/articles/A.12-sample-slicing/amen_slice.png)"
msgstr ""

#: A.12-sample-slicing.md:88
msgid ""
"Let's take our Amen Break and chop it up into 8 equally-sized slices and then "
"shuffle the pieces around. Take a look at the diagram: at the top A) represent"
"s the graph of our original sample data. Chopping it into 8 slices gives us B)"
" - notice that we've given each slice a different colour to help distinguish t"
"hem. You can see each slice's start and finish values at the top. Finally C) i"
"s one possible re-ordering of the slices. We can then play this back to create"
" a new beat. Take a look at the code to do this:"
msgstr ""

#: A.12-sample-slicing.md:97
#, no-wrap
msgid ""
"live_loop :beat_slicer do\n"
"  slice_idx = rand_i(8)\n"
"  slice_size = 0.125\n"
"  s = slice_idx * slice_size\n"
"  f = s + slice_size\n"
"  sample :loop_amen, start: s, finish: f\n"
"  sleep sample_duration :loop_amen, start: s, finish: f\n"
"end"
msgstr ""
"live_loop :beat_slicer do\n"
"  slice_idx = rand_i(8)\n"
"  slice_size = 0.125\n"
"  s = slice_idx * slice_size\n"
"  f = s + slice_size\n"
"  sample :loop_amen, start: s, finish: f\n"
"  sleep sample_duration :loop_amen, start: s, finish: f\n"
"end"

#: A.12-sample-slicing.md:108
msgid ""
"we choose a random slice to play which should be a random number between 0 and"
" 7 (remember that we start counting at 0). Sonic Pi has a handy function for e"
"xactly this: `rand_i(8)`. We then store this random slice index in the variabl"
"e `slice_idx`."
msgstr ""

#: A.12-sample-slicing.md:113
msgid ""
"We define our `slice_size` which is 1/8 or 0.125. The `slice_size` is necessar"
"y for us to convert our `slice_idx` into a value between 0 and 1 so we can use"
" it as our `start:` opt."
msgstr ""

#: A.12-sample-slicing.md:117
msgid ""
"We calculate the start position `s` by multiplying the `slice_idx` by the `sli"
"ce_size`."
msgstr ""

#: A.12-sample-slicing.md:120
msgid ""
"We calculate the finish position `f` by adding the `slice_size` to the start p"
"osition `s`."
msgstr ""

#: A.12-sample-slicing.md:123
msgid ""
"We can now play the sample slice by plugging in the `s` and `f` values into th"
"e `start:` and `finish:` opts for `sample`."
msgstr ""

#: A.12-sample-slicing.md:126
msgid ""
"Before we play the next slice we need to know how long to `sleep` which should"
" be the duration of the sample slice. Luckily, Sonic Pi has us covered with `s"
"ample_duration` which accepts all the same opts as `sample` and simply returns"
" the duration. Therefore, by passing `sample_duration` our `start:` and `finis"
"h:` opts, we can find out the duration of a single slice."
msgstr ""

#: A.12-sample-slicing.md:133
msgid ""
"We wrap all of this code in a `live_loop` so that we continue to pick new rand"
"om slices to play."
msgstr ""

#: A.12-sample-slicing.md:139
msgid ""
"Let's combine everything we've seen so far into a final example which demonstr"
"ates how we can take a similar approach to combine randomly sliced beats with "
"some bass to create the start of an interesting track. Now it's your turn - ta"
"ke the code below as a starting point and see if you can take it in your own d"
"irection and create something new..."
msgstr ""

#: A.12-sample-slicing.md:145
#, no-wrap
msgid ""
"live_loop :sliced_amen do\n"
"  n = 8\n"
"  s =  line(0, 1, steps: n).choose\n"
"  f = s + (1.0 / n)\n"
"  sample :loop_amen, beat_stretch: 2, start: s, finish: f\n"
"  sleep 2.0  / n\n"
"end\n"
"live_loop :acid_bass do\n"
"  with_fx :reverb, room: 1, reps: 32, amp: 0.6 do\n"
"    tick\n"
"    n = (octs :e0, 3).look - (knit 0, 3 * 8, -4, 3 * 8).look\n"
"    co = rrand(70, 110)\n"
"    synth :beep, note: n + 36, release: 0.1, wave: 0, cutoff: co\n"
"    synth :tb303, note: n, release: 0.2, wave: 0, cutoff: co\n"
"    sleep (ring 0.125, 0.25).look\n"
"  end\n"
"end"
msgstr ""
"live_loop :sliced_amen do\n"
"  n = 8\n"
"  s =  line(0, 1, steps: n).choose\n"
"  f = s + (1.0 / n)\n"
"  sample :loop_amen, beat_stretch: 2, start: s, finish: f\n"
"  sleep 2.0  / n\n"
"end\n"
"live_loop :acid_bass do\n"
"  with_fx :reverb, room: 1, reps: 32, amp: 0.6 do\n"
"    tick\n"
"    n = (octs :e0, 3).look - (knit 0, 3 * 8, -4, 3 * 8).look\n"
"    co = rrand(70, 110)\n"
"    synth :beep, note: n + 36, release: 0.1, wave: 0, cutoff: co\n"
"    synth :tb303, note: n, release: 0.2, wave: 0, cutoff: co\n"
"    sleep (ring 0.125, 0.25).look\n"
"  end\n"
"end"

#: A.13-probabilistic-sequencer.md:1
msgid "A.13 Code a Probabilistic Sequencer"
msgstr ""

#: A.13-probabilistic-sequencer.md:3
msgid "Code a Probabilistic Sequencer"
msgstr ""

#: A.13-probabilistic-sequencer.md:5
#, fuzzy
msgid ""
"In a previous episode of this Sonic Pi series we explored the power of randomi"
"sation to introduce variety, surprise and change into our live coded tracks an"
"d performances. For example, we randomly picked notes from a scale to create n"
"ever-ending melodies. Today we're going to learn a new technique which uses ra"
"ndomisation for rhythm - probabilistic beats!"
msgstr "rand"

#: A.13-probabilistic-sequencer.md:12
#, fuzzy
msgid "Probability"
msgstr "Przenośność"

#: A.13-probabilistic-sequencer.md:14
#, fuzzy
msgid ""
"Before we can start making new beats and synth rhythms we need to take a quick"
" dive into the basics of probability. This might sound daunting and complicate"
"d, but really it's just as simple as rolling a dice - honestly! When you take "
"a regular 6 sided board game dice and roll it what's actually happening? Well,"
" firstly you'll roll either a 1, 2, 3, 4, 5 or 6 with exactly the same chance "
"of getting any of the numbers. In fact, given that it's a 6 sided dice, on ave"
"rage (if you roll lots and lots of times) you'll throw a 1 every 6 throws. Thi"
"s means you have a 1 in 6 chance of throwing a 1. We can emulate dice rolls in"
" Sonic Pi with the fn `dice`. Let's roll one 8 times:"
msgstr "dice (kostka do gry)"

#: A.13-probabilistic-sequencer.md:25
#, no-wrap
#, fuzzy
msgid ""
"8.times do\n"
"  puts dice\n"
"  sleep 1\n"
"end"
msgstr "dice (kostka do gry)"

#: A.13-probabilistic-sequencer.md:32
#, fuzzy
msgid ""
"Notice how the log prints values between 1 and 6 just as if we'd rolled a real"
" dice ourselves."
msgstr "dice (kostka do gry)"

#: A.13-probabilistic-sequencer.md:35
#, fuzzy
msgid "Random Beats"
msgstr "Losowe zarzewie"

#: A.13-probabilistic-sequencer.md:37
#, fuzzy
msgid ""
"Now imagine you had a drum and every time you were about to hit it you rolled "
"a dice. If you rolled a 1, you hit the drum and if you rolled any other number"
" you didn't. You now have a probabilistic drum machine working with a probabil"
"ity of 1/6! Let's hear what that sounds like:"
msgstr "Posłuchajmy zatem, jak to brzmi:"

#: A.13-probabilistic-sequencer.md:42
#, no-wrap
#, fuzzy
msgid ""
"live_loop :random_beat do\n"
"  sample :drum_snare_hard if dice == 1\n"
"  sleep 0.125\n"
"end"
msgstr "rand"

#: A.13-probabilistic-sequencer.md:50
#, fuzzy
msgid ""
"Let's quickly go over each line to make sure everything is very clear. First w"
"e create a new `live_loop` called `:random_beat` which will continually repeat"
" the two lines between `do` and `end`. The first of these lines is a call to `"
"sample` which will play a pre-recorded sound (the `:drum_snare_hard` sound in "
"this case). However, this line has a special conditional `if` ending. This mea"
"ns that the line will only be executed if the statement on the right hand side"
" of the `if` is `true`. The statement in this case is `dice == 1`. This calls "
"our `dice` function which, as we have seen, returns a value between 1 and 6. W"
"e then use the equality operator `==` to check to see if this value is `1`. If"
" it is `1`, then the statement resolves to `true` and our snare drum sounds, i"
"f it isn't `1` then the statement resolves to `false` and the snare is skipped"
". The second line simply waits for `0.125` seconds before rolling the dice aga"
"in."
msgstr "rand"

#: A.13-probabilistic-sequencer.md:65
msgid "Changing Probabilities"
msgstr ""

#: A.13-probabilistic-sequencer.md:67
#, fuzzy
msgid ""
"Those of you that have played role play games will be familiar with lots of st"
"rangely shaped dice with different ranges. For example there is the tetrahedro"
"n shaped dice which has 4 sides and even a 20 sided dice in the shape of a ico"
"sahedron. The number of sides on the dice changes the chance, or probability o"
"f rolling a 1. The fewer sides, the more likely you are to roll a 1 and the mo"
"re sides the less likely. For example, with a 4 sided dice, there's a one in 4"
" chance of rolling a 1 and with a 20 sided dice there's a one in 20 chance. Lu"
"ckily, Sonic Pi has the handy `one_in` fn for describing exactly this. Let's p"
"lay:"
msgstr "one_in"

#: A.13-probabilistic-sequencer.md:77
#, no-wrap
#, fuzzy
msgid ""
"live_loop :different_probabilities do\n"
"  sample :drum_snare_hard if one_in(6)\n"
"  sleep 0.125\n"
"end"
msgstr "one_in"

#: A.13-probabilistic-sequencer.md:84
#, fuzzy
msgid ""
"Start the live loop above and you'll hear the familiar random rhythm. However,"
" don't stop the code running. Instead, change the `6` to a different value suc"
"h as `2` or `20` and hit the `Run` button again. Notice that lower numbers mea"
"n the snare drum sounds more frequently and higher numbers mean the snare trig"
"gers fewer times. You're making music with probabilities!"
msgstr "rand"

#: A.13-probabilistic-sequencer.md:91
msgid "Combining Probabilities"
msgstr ""

#: A.13-probabilistic-sequencer.md:93
msgid ""
"Things get really exciting when you combine multiple samples being triggered w"
"ith different probabilities. For example:"
msgstr ""

#: A.13-probabilistic-sequencer.md:96
#, no-wrap
#, fuzzy
msgid ""
"live_loop :multi_beat do\n"
"  sample :elec_hi_snare if one_in(6)\n"
"  sample :drum_cymbal_closed if one_in(2)\n"
"  sample :drum_cymbal_pedal if one_in(3)\n"
"  sample :bd_haus if one_in(4)\n"
"  sleep 0.125\n"
"end"
msgstr "one_in"

#: A.13-probabilistic-sequencer.md:106
msgid ""
"Again, run the code above and then start changing the probabilities to modify "
"the rhythm. Also, try changing the samples to create an entirely new feel. For"
" example try changing `:drum_cymbal_closed` to `:bass_hit_c` for extra bass!"
msgstr ""

#: A.13-probabilistic-sequencer.md:112
msgid "Repeatable Rhythms"
msgstr ""

#: A.13-probabilistic-sequencer.md:114
#, fuzzy
msgid ""
"Next, we can use our old friend `use_random_seed` to reset the random stream a"
"fter 8 iterations to create a regular beat. Type the following code to hear a "
"much more regular and repeating rhythm. Once you hear the beat, try changing t"
"he seed value from `1000` to another number. Notice how different numbers gene"
"rate different beats."
msgstr "rand"

#: A.13-probabilistic-sequencer.md:120
#, no-wrap
#, fuzzy
msgid ""
"live_loop :multi_beat do\n"
"  use_random_seed 1000\n"
"  8.times do\n"
"    sample :elec_hi_snare if one_in(6)\n"
"    sample :drum_cymbal_closed if one_in(2)\n"
"    sample :drum_cymbal_pedal if one_in(3)\n"
"    sample :bd_haus if one_in(4)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr "one_in"

#: A.13-probabilistic-sequencer.md:133
msgid ""
"One thing I tend to do with this kind of structure is to remember which seeds "
"sound good and make a note of them. That way I can easily re-create my rhythms"
" in future practice sessions or performances."
msgstr ""

#: A.13-probabilistic-sequencer.md:139
#, fuzzy
msgid ""
"Finally, we can throw in some random bass to give it some nice melodic content"
". Notice that we can also use our newly discovered probabilistic sequencing me"
"thod on synths just as well as samples. Don't leave it at that though - tweak "
"the numbers and make your own track with the power of probabilities!"
msgstr "rand"

#: A.13-probabilistic-sequencer.md:145
#, no-wrap
#, fuzzy
msgid ""
"live_loop :multi_beat do\n"
"  use_random_seed 2000\n"
"  8.times do\n"
"    c = rrand(70, 130)\n"
"    n = (scale :e1, :minor_pentatonic).take(3).choose\n"
"    synth :tb303, note: n, release: 0.1, cutoff: c if rand < 0.9\n"
"    sample :elec_hi_snare if one_in(6)\n"
"    sample :drum_cymbal_closed if one_in(2)\n"
"    sample :drum_cymbal_pedal if one_in(3)\n"
"    sample :bd_haus, amp: 1.5 if one_in(4)\n"
"    sleep 0.125\n"
"  end\n"
"end"
msgstr "choose (wybierz)"

#: A.14-amplitude-modulation.md:1
#, fuzzy
msgid "A.14 Amplitude Modulation"
msgstr "A.14 Modulacja Amplitudy"

#: A.14-amplitude-modulation.md:3
msgid "Amplitude Modulation"
msgstr "Modulacja Amplitudy"

#: A.14-amplitude-modulation.md:5
#, fuzzy
msgid ""
"This month we're going to take a deep dive into one of Sonic Pi's most powerfu"
"l and flexible audio FX - the `:slicer`. By the end of this article you will h"
"ave learned how to manipulate the overall volume of parts of our live coded so"
"und in powerful new ways. This will allow you to create new rhythmic and timbr"
"al structures and broaden your sonic possibilities."
msgstr "slicer"

#: A.14-amplitude-modulation.md:12
msgid "Slice that Amp"
msgstr ""

#: A.14-amplitude-modulation.md:14
#, fuzzy
msgid ""
"So, what does the `:slicer` FX actually do? One way to think about it is that "
"it's just like having someone play around with the volume control on your TV o"
"r home hi-fi. Let's take a look but first, listen to the deep growl of the fol"
"lowing code which triggers the `:prophet` synth:"
msgstr "`:prophet`"

#: A.14-amplitude-modulation.md:20
#, no-wrap
msgid ""
"synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"synth :prophet, note: :e1 + 4, release: 8, cutoff: 80"
msgstr ""

#: A.14-amplitude-modulation.md:25
#, fuzzy
msgid "Now, let's pipe it through the `:slicer` FX:"
msgstr "slicer"

#: A.14-amplitude-modulation.md:27
#, no-wrap
#, fuzzy
msgid ""
"\n"
"with_fx :slicer do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"
msgstr "slicer"

#: A.14-amplitude-modulation.md:35
#, fuzzy
msgid ""
"Hear how the slicer acts like it's muting and unmuting the audio with a regula"
"r beat. Also, notice how the `:slicer` affects all the audio generated between"
" the `do`/`end` blocks. You can control the speed at which it turns the audio "
"on and off with the `phase:` opt which is short for phase duration. Its defaul"
"t value is `0.25` which means 4 times a second at the default BPM of 60. Let's"
" make it faster:"
msgstr "slicer"

#: A.14-amplitude-modulation.md:42
#, no-wrap
#, fuzzy
msgid ""
"with_fx :slicer, phase: 0.125 do\n"
"  synth :prophet, note: :e1, release: 8, cutoff: 70\n"
"  synth :prophet, note: :e1 + 4, release: 8, cutoff: 80\n"
"end"
msgstr "slicer"

#: A.14-amplitude-modulation.md:49
#, fuzzy
msgid ""
"Now, play with different `phase:` durations yourself. Try longer and shorter v"
"alues. See what happens when you choose a really short value. Also, try differ"
"ent synths such as `:beep` or `:dsaw` and different notes. Take a look at the "
"following diagram to see how different `phase:` values change the number of am"
"plitude changes per beat."
msgstr "`:dsaw`"

#: A.14-amplitude-modulation.md:56
#, fuzzy
msgid ""
"![Phase Durations](../images/tutorial/articles/A.14-amplitude-modulation/slice"
"r_phase_durations.png)"
msgstr "Długość trwania dźwięku (ang. Duration)"

#: A.14-amplitude-modulation.md:58
msgid ""
"Phase duration is the length of time for one on/off cycle. Therefore smaller v"
"alues will make the FX switch on and off much faster than larger values. Good "
"values to start playing with are `0.125`, `0.25`, `0.5` and `1`."
msgstr ""

#: A.14-amplitude-modulation.md:64
msgid "Control Waves"
msgstr ""

#: A.14-amplitude-modulation.md:66
#, fuzzy
msgid ""
"By default, the `:slicer` FX uses a square wave to manipulate the amplitude th"
"rough time. This is why we hear the amplitude on for a period, then immediatel"
"y off for a period, then back on again. It turns out that the square wave is j"
"ust one of 4 different control waves that are supported by `:slicer`. The othe"
"rs are saw, triangle and (co)sine. Take a look at the diagram below to see wha"
"t these look like. We can also hear what they sound like. For example, the fol"
"lowing code uses (co)sine as the control wave. Hear how the sound doesn't turn"
" on and off abruptly but instead smoothly fades in and out:"
msgstr "slicer"

#: A.14-amplitude-modulation.md:76
#, no-wrap
#, fuzzy
msgid ""
"with_fx :slicer, phase: 0.5, wave: 3 do\n"
"  synth :dsaw, note: :e3, release: 8, cutoff: 120\n"
"  synth :dsaw, note: :e2, release: 8, cutoff: 100\n"
"end"
msgstr "slicer"

#: A.14-amplitude-modulation.md:83
msgid ""
"Have a play with the different wave forms by changing the `wave:` opt to `0` f"
"or saw, `1` for square, `2` for triangle and `3` for sine. See how different w"
"aves sound with different `phase:` opts too."
msgstr ""

#: A.14-amplitude-modulation.md:87
msgid ""
"Each of these waves can be inverted with the `invert_wave:` opt which flips it"
" on the y axis. For example, in a single phase the saw wave typically starts h"
"igh, and slowly goes down before jumping back to the top. With `invert_wave: 1"
"` it will start low and slowly go up before jumping back down again. Additiona"
"lly, the control wave can be started at different points with the `phase_offse"
"t:` opt which should be a value between `0` and `1`. By playing around with `p"
"hase:`, `wave:`, `invert_wave:` and `phase_offset` opts you can dramatically c"
"hange how the amplitude is modified through time."
msgstr ""

#: A.14-amplitude-modulation.md:97
#, fuzzy
msgid ""
"![Phase Durations](../images/tutorial/articles/A.14-amplitude-modulation/slice"
"r_control_waves.png)"
msgstr "Długość trwania dźwięku (ang. Duration)"

#: A.14-amplitude-modulation.md:100
msgid "Setting your levels"
msgstr ""

#: A.14-amplitude-modulation.md:102
#, fuzzy
msgid ""
"By default, `:slicer` switches between amplitude values `1` (fully loud) and `"
"0` (silent). This can be changed with the `amp_min:` and `amp_max:` opts. You "
"can use this alongside the sine wave setting to create a simple tremolo effect"
":"
msgstr "slicer"

#: A.14-amplitude-modulation.md:107
#, no-wrap
#, fuzzy
msgid ""
"with_fx :slicer, amp_min: 0.25, amp_max: 0.75, wave: 3, phase: 0.25 do\n"
"  synth :saw, release: 8\n"
"end"
msgstr "slicer"

#: A.14-amplitude-modulation.md:113
msgid ""
"This is just like grabbing the volume knob on your hi-fi and moving it up and "
"down just a little so the sound 'wobbles' in and out."
msgstr ""

#: A.14-amplitude-modulation.md:117
msgid "Probabilities"
msgstr ""

#: A.14-amplitude-modulation.md:119
#, fuzzy
msgid ""
"One of `:slicer`'s powerful features is its ability to use probability to choo"
"se whether or not to turn the slicer on or off. Before the `:slicer` FX starts"
" a new phase it rolls a dice and based on the result either uses the selected "
"control wave or keeps the amplitude off. Let's take a listen:"
msgstr "choose (wybierz)"

#: A.14-amplitude-modulation.md:125
#, no-wrap
#, fuzzy
msgid ""
"with_fx :slicer, phase: 0.125, probability: 0.6  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"
msgstr "slicer"

#: A.14-amplitude-modulation.md:133
msgid ""
"Hear how we now have an interesting rhythm of pulses. Try changing the `probab"
"ility:` opt to a different value between `0` and `1`. Values closer to `0` wil"
"l have more space between each sound due to the likelihood of the sound being "
"triggered being much lower."
msgstr ""

#: A.14-amplitude-modulation.md:138
#, fuzzy
msgid ""
"Another thing to notice is that the probability system in the FX is just like "
"the randomisation system accessible via fns such as `rand` and `shuffle`. They"
" are both completely deterministic. This means that each time you hit Run you'"
"ll hear exactly the same rhythm of pulses for a given probability. If you woul"
"d like to change things around you can use the `seed:` opt to select a differe"
"nt starting seed. This works exactly the same as `use_random_seed` but only af"
"fects that particular FX."
msgstr "rand"

#: A.14-amplitude-modulation.md:146
msgid ""
"Finally, you can change the 'resting' position of the control wave when the pr"
"obability test fails from `0` to any other position with the `prob_pos:` opt:"
msgstr ""

#: A.14-amplitude-modulation.md:150
#, no-wrap
#, fuzzy
msgid ""
"with_fx :slicer, phase: 0.125, probability: 0.6, prob_pos: 1  do\n"
"  synth :tb303, note: :e1, cutoff_attack: 8, release: 8\n"
"  synth :tb303, note: :e2, cutoff_attack: 4, release: 8\n"
"  synth :tb303, note: :e3, cutoff_attack: 2, release: 8\n"
"end"
msgstr "slicer"

#: A.14-amplitude-modulation.md:158
#, fuzzy
msgid "Slicing Beats"
msgstr "Przycinanie"

#: A.14-amplitude-modulation.md:160
#, fuzzy
msgid "One really fun thing to do is to use `:slicer` to chop a drum beat in and out:"
msgstr "slicer"

#: A.14-amplitude-modulation.md:163
#, no-wrap
#, fuzzy
msgid ""
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_mika\n"
"end"
msgstr "slicer"

#: A.14-amplitude-modulation.md:169
msgid ""
"This allows us to take any sample and create new rhythmical possibilites which"
" is a lot of fun. However, one thing to be careful about is to make sure that "
"the tempo of the sample matches the current BPM in Sonic Pi otherwise the slic"
"ing will sound totally off. For example, try swapping `:loop_mika` with the `l"
"oop_amen` sample to hear how bad this can sound when the tempos don't align."
msgstr ""

#: A.14-amplitude-modulation.md:176
#, fuzzy
msgid "Changing tempo"
msgstr "Spróbujmy coś zmienić"

#: A.14-amplitude-modulation.md:178
#, fuzzy
msgid ""
"As we have already seen, changing the default BPM with `use_bpm` will make all"
" the sleep times and synth envelope durations grow or shrink to match the beat"
". The `:slicer` FX honours this too, as the `phase:` opt is actually measured "
"in beats not seconds. We can therefore fix the issue with `loop_amen` above by"
" changing the BPM to match the sample:"
msgstr "slicer"

#: A.14-amplitude-modulation.md:184
#, no-wrap
#, fuzzy
msgid ""
"use_sample_bpm :loop_amen\n"
"with_fx :slicer, phase: 0.125 do\n"
"  sample :loop_amen\n"
"end"
msgstr "sample :loop_amen"

#: A.14-amplitude-modulation.md:194
#, fuzzy
msgid ""
"Let's apply all these ideas into a final example that only uses the `:slicer` "
"FX to create an interesting combination. Go ahead, start changing it and make "
"it into your own piece!"
msgstr "slicer"

#: A.14-amplitude-modulation.md:198
#, no-wrap
#, fuzzy
msgid ""
"live_loop :dark_mist do\n"
"  co = (line 70, 130, steps: 8).tick\n"
"  with_fx :slicer, probability: 0.7, prob_pos: 1 do\n"
"    synth :prophet, note: :e1, release: 8, cutoff: co\n"
"  end\n"
"  \n"
"  with_fx :slicer, phase: [0.125, 0.25].choose do\n"
"    sample :guit_em9, rate: 0.5\n"
"  end\n"
"  sleep 8\n"
"end\n"
"live_loop :crashing_waves do\n"
"  with_fx :slicer, wave: 0, phase: 0.25 do\n"
"    sample :loop_mika, rate: 0.5\n"
"  end\n"
"  sleep 16\n"
"end"
msgstr "sample :guit_em9, rate: 0.5"

#: A.15-five-live-coding-techniques.md:1 A.15-performance.md:1
#, fuzzy
msgid "A.15 Five Live Coding Techniques"
msgstr "Kodowanie na żywo"

#: A.15-five-live-coding-techniques.md:3 A.15-performance.md:3
#, fuzzy
msgid "Five Live Coding Techniques"
msgstr "Kodowanie na żywo"

#: A.15-five-live-coding-techniques.md:5
msgid ""
"In this month's Sonic Pi tutorial we're going to take a look at how you can st"
"art treating Sonic Pi like a real instrument. We therefore need to start think"
"ing of code in a completely different way. Live coders think of code in a simi"
"lar way to how violinists think of their bow. In fact, just like a violinist c"
"an apply various bowing techniques to create different sounds (long slow motio"
"ns vs short fast hits) we will explore five of the basic live coding technique"
"s that Sonic Pi enables. By the end of this article you'll be able to start pr"
"acticing for your own live coded performances."
msgstr ""

#: A.15-five-live-coding-techniques.md:15 A.15-performance.md:15
msgid "1. Memorise the Shortcuts"
msgstr ""

#: A.15-five-live-coding-techniques.md:17 A.15-performance.md:17
msgid ""
"The first tip to live coding with Sonic Pi is to start using the shortcuts. Fo"
"r example, instead of wasting valuable time reaching for the mouse, moving it "
"over to the Run button and clicking, you can simply press `alt` and `r` at the"
" same time which is much faster and keeps your fingers at the keyboard ready f"
"or the next edit. You can find out the shortcuts for the main buttons at the t"
"op by hovering the mouse over. See section 10.2 of the built-in tutorial for t"
"he full list of shortcuts."
msgstr ""

#: A.15-five-live-coding-techniques.md:26
msgid ""
"When performing, one fun thing to do is to add a bit of flair with your arm mo"
"tion when hitting shortcuts. For example, it's often good to communicate to th"
"e audience when you're about to make a change - so embellish your movement whe"
"n hitting `alt-r`just like a guitarist would do when hitting a big power chord"
"."
msgstr ""

#: A.15-five-live-coding-techniques.md:32 A.15-performance.md:32
msgid "2. Manually Layer your Sounds"
msgstr ""

#: A.15-five-live-coding-techniques.md:34 A.15-performance.md:34
msgid ""
"Now you can trigger code instantly with the keyboard, you can instantly apply "
"this skill for our second technique which is to layer your sounds manually. In"
"stead of 'composing' using lots of calls to `play`, and `sample` separated by "
"calls to `sleep` we will have one call to `play` which we will manually trigge"
"r using `alt-r`. Let's try it. Type the following code into a fresh buffer:"
msgstr ""

#: A.15-five-live-coding-techniques.md:41 A.15-performance.md:41
#, no-wrap
#, fuzzy
msgid "synth :tb303, note: :e2 - 0, release: 12, cutoff: 90"
msgstr "synth :prophet, note: :e1, release: 8, cutoff: 100"

#: A.15-five-live-coding-techniques.md:46 A.15-performance.md:46
msgid ""
"Now, hit `Run` and whilst the sound is playing, modify the code in order to dr"
"op down four notes by changing it to the following:"
msgstr ""

#: A.15-five-live-coding-techniques.md:50 A.15-performance.md:50
#, no-wrap
#, fuzzy
msgid "synth :tb303, note: :e2 - 4, release: 12, cutoff: 90"
msgstr "synth :prophet, note: :e1, release: 8, cutoff: 100"

#: A.15-five-live-coding-techniques.md:55 A.15-performance.md:55
msgid ""
"Now, hit `Run` again, to hear both sounds playing at the same time. This is be"
"cause Sonic Pi's `Run` button doesn't wait for any previous code to finish, bu"
"t instead starts the code running at the same time. This means you can easily "
"layer lots of sounds manually with minor or major modifications between each t"
"rigger. For example, try changing both the `note:` and the `cutoff:` opts and "
"then re-trigger."
msgstr ""

#: A.15-five-live-coding-techniques.md:63 A.15-performance.md:63
msgid "You can also try this technique with long abstract samples. For example:"
msgstr ""

#: A.15-five-live-coding-techniques.md:65 A.15-performance.md:65
#, no-wrap
#, fuzzy
msgid "sample :ambi_lunar_land, rate: 1"
msgstr "sample :ambi_lunar_land"

#: A.15-five-live-coding-techniques.md:69 A.15-performance.md:69
msgid ""
"Try starting the sample off, and then progressively halving the `rate:` opt be"
"tween hitting `Run` from `1` to `0.5` to `0.25` to `0.125` and then even try s"
"ome negative values such as `-0.5`. Layer the sounds together and see where yo"
"u can take it. Finally, try adding some FX."
msgstr ""

#: A.15-five-live-coding-techniques.md:74 A.15-performance.md:74
msgid ""
"When performing, working with simple lines of code in this way means that an a"
"udience new to Sonic Pi has a good chance to follow what you're doing and rela"
"te the code that they can read to the sounds they are hearing."
msgstr ""

#: A.15-five-live-coding-techniques.md:80 A.15-performance.md:80
#, fuzzy
msgid "3. Master Live Loops"
msgstr "Żywe Pętle (Live Loops)"

#: A.15-five-live-coding-techniques.md:82 A.15-performance.md:82
msgid ""
"When working with more rhythmic music, it can often be hard to manually trigge"
"r everything and keep good time. Instead, it is often better to use a `live_lo"
"op`. This provides repetition for your code whilst also giving the ability to "
"edit the code for the next time round the loop. They also will run at the same"
" time as other `live_loop`s which means you can layer them together both with "
"each other and manual code triggers. Take a look at section 9.2 of the built-i"
"n tutorial for more information about working with live loops."
msgstr ""

#: A.15-five-live-coding-techniques.md:91 A.15-performance.md:91
msgid ""
"When performing, remember to make use of `live_loop`'s `sync:` opt to allow yo"
"u to recover from accidental runtime mistakes which stop the live loop running"
" due to an error. If you already have the `sync:` opt pointing to another vali"
"d `live_loop`, then you can quickly fix the error and re-run the code to re-st"
"art things without missing a beat."
msgstr ""

#: A.15-five-live-coding-techniques.md:97 A.15-performance.md:97
msgid "4. Use the Master Mixer"
msgstr ""

#: A.15-five-live-coding-techniques.md:99 A.15-performance.md:99
msgid ""
"One of Sonic Pi's best kept secrets is that it has a master mixer through whic"
"h all sound flows. This mixer has both a low pass filter and a high pass filte"
"r built-in, so you can easily perform global modifications to the sound. The m"
"aster mixer's functionality can be accessed via the fn `set_mixer_control!`. F"
"or example, whilst some code is running and making sound, enter this into a sp"
"are buffer and hit `Run`:"
msgstr ""

#: A.15-five-live-coding-techniques.md:107
#, no-wrap
msgid "set_mixer_control! lpf: 50"
msgstr ""

#: A.15-five-live-coding-techniques.md:111 A.15-performance.md:111
msgid ""
"After you run this code, all existing and new sounds will have a low pass filt"
"er applied to them and will therefore sound more muffled. Note that this means"
" that the new mixer values stick until they are changed again. However, if you"
" want, you can always reset the mixer back to its default state with `reset_mi"
"xer!`. Some of the currently supported opts are: `pre_amp:`, `lpf:` `hpf:`, an"
"d `amp:`. For the full list, see the built-in docs for `set_mixer_control!`."
msgstr ""

#: A.15-five-live-coding-techniques.md:119 A.15-performance.md:119
msgid ""
"Use the mixer's `*_slide` opts to slide one or many opts values over time. For"
" example, to slowly slide the mixer's low pass filter down from the current va"
"lue to 30, use the following:"
msgstr ""

#: A.15-five-live-coding-techniques.md:123 A.15-performance.md:123
#, no-wrap
msgid "set_mixer_control! lpf_slide: 16, lpf: 30"
msgstr ""

#: A.15-five-live-coding-techniques.md:127 A.15-performance.md:127
msgid "You can then slide quickly back to a high value with:"
msgstr ""

#: A.15-five-live-coding-techniques.md:129 A.15-performance.md:129
#, no-wrap
msgid "set_mixer_control! lpf_slide: 1, lpf: 130"
msgstr ""

#: A.15-five-live-coding-techniques.md:133 A.15-performance.md:133
msgid ""
"When performing, it's often useful to keep a buffer free for working with the "
"mixer like this."
msgstr ""

#: A.15-five-live-coding-techniques.md:136 A.15-performance.md:136
#, fuzzy
msgid "5. Practice"
msgstr "5. Efekty w praktyce"

#: A.15-five-live-coding-techniques.md:138 A.15-performance.md:138
msgid ""
"The most important technique for live coding is practice. The most common attr"
"ibute across professional musicians of all kinds is that they practice playing"
" with their instruments - often for many hours a day. Practice is just as impo"
"rtant for a live coder as a guitarist. Practice allows your fingers to memoris"
"e certain patterns and common edits so you can type and work with them more fl"
"uently. Practice also gives you opportunities to explore new sounds and code c"
"onstructs."
msgstr ""

#: A.15-five-live-coding-techniques.md:146 A.15-performance.md:146
msgid ""
"When performing, you'll find the more practice you do, the easier it will be f"
"or you to relax into the gig. Practice will also give you a wealth of experien"
"ce to draw from. This can help you understand which kinds of modifications wil"
"l be interesting and also work well with the current sounds."
msgstr ""

#: A.15-five-live-coding-techniques.md:154 A.15-performance.md:154
msgid ""
"This month, instead of giving you a final example that combines all the things"
" discussed, let's part by setting down a challenge. See if you can spend a wee"
"k practicing one of these ideas every day. For example, one day practice manua"
"l triggers, the next do some basic `live_loop` work and the following day play"
" around with the master mixer. Then repeat. Don't worry if things feel slow an"
"d clunky at first - just keep practicing and before you know it you'll be live"
" coding for a real audience."
msgstr ""

#: A.15-performance.md:5
msgid ""
"In this month's Sonic Pi tutorial we're going to take a look at how you can st"
"art treating Sonic Pi like a real instrument. We therefore need to start think"
"ing of code in a completely different way. Live coders think of code in a smil"
"ar way to how violinist thinks of their bow. In fact, just like a violinist ca"
"n apply various bowing techniques to create different sounds (long slow motion"
"s vs short fast hits) we will explore five of the basic live coding techniques"
" that Sonic Pi enables. By the end of this article you'll be able to start pra"
"cticing for your own live coded performances."
msgstr ""

#: A.15-performance.md:26
msgid ""
"When performing, one fun thing to do is to add a bit of flair with your arm mo"
"tion when hitting shortcuts. For example, its often good to communicate to the"
" audience when you're about to make a change - so embellish your movement when"
" hitting `alt-r`just like a guitarist would do when hitting a big power chord."
msgstr ""

#: A.15-performance.md:107
msgid "` set_mixer_control! lpf: 50 `"
msgstr ""

#: A.16-practice.md:1
#, fuzzy
msgid "A.16 How to Practice Live Coding"
msgstr "Kodowanie na żywo"

#: A.16-practice.md:3
#, fuzzy
msgid "8 Tips for Live Coding Practice"
msgstr "Kodowanie na żywo"

#: A.16-practice.md:5
msgid ""
"Last month we took a look at five important techniques for mastering live codi"
"ng - in other words, we explored how we could use Sonic Pi to approach code in"
" the same we we would approach a musical instrument. One of the important conc"
"epts that we discussed was practice. This month we're going to take a deeper d"
"ive into understanding why live coding practice is important and how you might"
" start."
msgstr ""

#: A.16-practice.md:13
msgid "Practice regularly"
msgstr ""

#: A.16-practice.md:15
msgid ""
"The most important piece of advice is to make sure you practice regularly. As "
"a rule I typically practice for 1-2 hours a day, but 20 mins is just fine when"
" you're starting out. Little but often is what you're aiming for - so if you c"
"an only manage 10 minutes, that's a great start."
msgstr ""

#: A.16-practice.md:21
msgid ""
"Practice tip #1 - start to develop a practice routine. Find a nice time in the"
" day that works for you and try and practice at that time as many days of the "
"week you can. Before long you'll be looking forward to your regular session."
msgstr ""

#: A.16-practice.md:27
msgid "Learn to Touch Type"
msgstr ""

#: A.16-practice.md:29
msgid ""
"If you watch a professional musician performing on stage you'll likely notice "
"a few things. Firstly, when they play they don't stare at their instrument. Th"
"eir fingers, arms and bodies know which keys to press, strings to pluck or dru"
"ms to hit without them having to think about it too much. This is known as \"mu"
"scle memory\" and although it might sound like something only professionals can"
" do - it's just the same as when you first learned to walk or ride a bike - pr"
"acticing through repetition. Live coders use muscle memory to free their minds"
" from having to think about where to move their fingers so they can focus on t"
"he music. This is called touch-typing - typing without having to look at the k"
"eyboard."
msgstr ""

#: A.16-practice.md:41
msgid ""
"Practice tip #2 - learn how to touch type. There are many apps, websites and e"
"ven games which can help you achieve this. Find one you like the look of and s"
"tick at it until you can code without looking down."
msgstr ""

#: A.16-practice.md:46
msgid "Code whilst standing"
msgstr ""

#: A.16-practice.md:48
msgid ""
"The body of a musician is conditioned for playing their instrument. For exampl"
"e, a trumpet player needs to be able to blow hard, a guitar player needs to be"
" able to grip the fretboard with strength and a drummer needs to be able to co"
"ntinually hit the drums for long periods of time. So, what's physical about li"
"ve coding? Just like DJs, live coders typically perform whilst standing up and"
" some even dance whilst they code! If you practice live coding whilst sitting "
"at a desk and then have to get up and stand at a gig, you'll likely find the d"
"ifference very difficult and frustrating."
msgstr ""

#: A.16-practice.md:58
msgid ""
"Practice tip #3 - stand whilst you practice. The easiest way to do this is to "
"use a standing height desk. However, if like me you don't have one at home, th"
"ere's a couple of low-fi options. The approach I take is to use an ironing boa"
"rd which happens to work rather well. Another is to stack some boxes or large "
"books on a normal desk and place your keyboard on top of that. Also, make sure"
" you stretch before you start practicing and try and dance a little during the"
" session. Remember, nobody is watching you, so have fun and you'll feel much m"
"ore natural on stage."
msgstr ""

#: A.16-practice.md:68
msgid "Practice setting up"
msgstr ""

#: A.16-practice.md:70
msgid ""
"Most instruments require some assembly and tuning before they can be played. U"
"nless you're a rockstar with a bus full of roadies, you'll have to set up your"
" own instrument before your gig. This is often a stressful time and it is easy"
" for problems to occur. One way to help with this is to encorporate the setup "
"process into your practice sessions."
msgstr ""

#: A.16-practice.md:76
msgid ""
"Practice tip #4 - treat setting up as an important part of your practice. For "
"example, have a box or bag that you can keep your Raspberry Pi and keyboard et"
"c. Before each practice session, take out all the parts, connect everything, a"
"nd work through the boot process until you have Sonic Pi running and can make "
"sounds. Once you've finished practicing, take the time to carefully pack every"
"thing away afterwards. This may take some time at first, but before long you'l"
"l be able to setup and pack everything away incredibly quickly without having "
"to think about it."
msgstr ""

#: A.16-practice.md:87
msgid "Experiment Musically"
msgstr ""

#: A.16-practice.md:89
msgid ""
"Once you've set up and are ready to start making music, you might find yoursel"
"f struggling to know where to start. One problem many people face is that they"
" might have a good idea of the kinds of sounds they want to make, but are frus"
"trated that they can't produce them. Some people don't even know what kind of "
"sounds they want to make! The first thing to do is not to worry - this is very"
" common and happens to every musician - even if they've been practicing for a "
"long time. It is much more important to be making sounds you don't like than n"
"ot making any sounds at all."
msgstr ""

#: A.16-practice.md:99
msgid ""
"Practice tip #5 - spend time making sounds and music you don't like. Try to ma"
"ke time to explore new sounds and ideas. Don't worry that it might sound terri"
"ble if it's not style you're looking for. When you're experimenting like this "
"you increase the chance of stumbling over a sound or combination of sounds whi"
"ch you love! Even if 99% of the sounds you make are bad, that 1% might be the "
"riff or intro to your new track. Forget the things you don't like and remember"
" the parts you do. This is even easier when you're making music with code - ju"
"st hit save!"
msgstr ""

#: A.16-practice.md:110
msgid "Hear the Code"
msgstr ""

#: A.16-practice.md:112
#, fuzzy
msgid ""
"Many musicians can look at a musical score and hear the music in their head wi"
"thout having to play it. This is a very useful skill and it's well worth incor"
"porating into your live coding practice sessions. The imporant point is to be "
"able to have some understanding of what the code is going to sound like. You d"
"on't need to be able to hear it exactly in your head, but instead it's useful "
"to know if the code is going to be fast, slow, loud, rhythmic, melodic, random"
", etc. The final goal is then to be able to reverse this process - to be able "
"to hear music in your head and know what code to write to make it. It may take"
" you a long time to master this, but once you do, you'll be able to improvise "
"on stage and express your ideas fluently."
msgstr "rand"

#: A.16-practice.md:124
msgid ""
"Practice tip #6 - write some code into Sonic Pi but don't hit the Run button. "
"Instead, try to imagine what sound it is going to produce. Then, hit Run, list"
"en, and think about what you got right and what you didn't. Keep repeating thi"
"s until it become a natural part of your coding process. When I practice I nor"
"mally have a good idea of what the code will sound like. However, I still am o"
"ccasionally surprised, and then I'll stop and spend some time thinking about w"
"hy I was wrong. Each time this happens, I learn new tricks which allow me to e"
"xpress myself in new ways."
msgstr ""

#: A.16-practice.md:134
msgid "Remove all distractions"
msgstr ""

#: A.16-practice.md:136
msgid ""
"A common problem when practicing is to become distracted with other things. Pr"
"acticing is hard and requires real discipline regardless of the kind of music "
"you're making - from jazz to classical to EDM. If your're struggling to get st"
"arted or make progress, it's often too easy to hop on social media, or look so"
"mething up on the internet etc. If you've set yourself a target of 20 minutes "
"of practice, it's important to try and spend all that time being as productive"
" as possible."
msgstr ""

#: A.16-practice.md:144
msgid ""
"Practice tip #7 - before you start practicing remove as many distractions as p"
"ossible. For example, disconnect from the internet, put your phone in another "
"room and try to practice in a quiet place where you're unlikely to be disturbe"
"d. Try to focus on coding music and you can return to your distractions when y"
"ou've finished."
msgstr ""

#: A.16-practice.md:151
msgid "Keep a practice diary"
msgstr ""

#: A.16-practice.md:153
msgid ""
"When you are practicing, you'll often find your mind is full of new exciting i"
"deas - new musical directions, new sounds to try out, new functions to write, "
"etc. These ideas are often so interesting that you might stop what you're doin"
"g and start working on the idea. This is another form of distraction!"
msgstr ""

#: A.16-practice.md:159
msgid ""
"Practice tip #8 - keep a practice diary by your keyboard. When you get an exci"
"ting new idea, tmporarily pause your practice session, quickly jot the idea do"
"wn, then forget about it and carry on practicing. You can then spend some qual"
"ity time thinking about and working on your ideas after you've finished practi"
"cing."
msgstr ""

#: A.16-practice.md:168
msgid ""
"Try to establish a practice routine which incorporates as much of these ideas "
"as possible. Try to keep the sessions as fun as possible but be aware that som"
"e practice sessions will be hard and feel a little like work. However, it will"
" all be worth it once you've created your first piece or given your first perf"
"ormance. Remember, practice is the key to success!"
msgstr ""
